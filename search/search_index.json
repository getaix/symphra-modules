{"config":{"lang":["zh","en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Symphra Modules","text":"<p>Symphra Modules \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u3001\u9ad8\u8d28\u91cf\u7684 Python \u6a21\u5757\u7ba1\u7406\u5e93,\u4e13\u4e3a Python 3.11+ \u8bbe\u8ba1\u3002</p>"},{"location":"#_1","title":"\u6838\u5fc3\u7279\u6027","text":""},{"location":"#_2","title":"\ud83d\ude80 \u9ad8\u6027\u80fd\u8bbe\u8ba1","text":"<ul> <li>\u667a\u80fd\u7f13\u5b58: \u6a21\u5757\u52a0\u8f7d\u7ed3\u679c\u7f13\u5b58,\u907f\u514d\u91cd\u590d\u89e3\u6790</li> <li>\u5185\u5b58\u4f18\u5316: \u4f7f\u7528 <code>__slots__</code> \u51cf\u5c11\u5185\u5b58\u5360\u7528</li> <li>\u5f02\u6b65\u652f\u6301: \u539f\u751f\u652f\u6301\u540c\u6b65\u548c\u5f02\u6b65\u6a21\u5757,\u81ea\u52a8\u68c0\u6d4b\u548c\u8c03\u7528</li> <li>\u5ef6\u8fdf\u52a0\u8f7d: \u6309\u9700\u52a0\u8f7d\u6a21\u5757,\u51cf\u5c11\u542f\u52a8\u65f6\u95f4</li> </ul>"},{"location":"#_3","title":"\ud83d\udce6 \u7075\u6d3b\u7684\u52a0\u8f7d\u65b9\u5f0f","text":"<ul> <li>\u76ee\u5f55\u52a0\u8f7d: \u4ece\u6307\u5b9a\u76ee\u5f55\u81ea\u52a8\u53d1\u73b0\u548c\u52a0\u8f7d\u6a21\u5757</li> <li>\u5305\u52a0\u8f7d: \u4ece Python \u5305\u5bfc\u5165\u6a21\u5757</li> <li>\u81ea\u52a8\u52a0\u8f7d: \u667a\u80fd\u68c0\u6d4b\u6e90\u7c7b\u578b,\u81ea\u52a8\u9009\u62e9\u52a0\u8f7d\u65b9\u5f0f</li> </ul>"},{"location":"#_4","title":"\ud83d\udd04 \u5b8c\u6574\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406","text":"<ul> <li>\u72b6\u6001\u673a\u7ba1\u7406: \u6e05\u6670\u7684\u6a21\u5757\u72b6\u6001\u8f6c\u6362</li> <li>\u751f\u547d\u5468\u671f\u94a9\u5b50: bootstrap \u2192 install \u2192 start \u2192 stop \u2192 uninstall</li> <li>\u70ed\u91cd\u8f7d: \u652f\u6301\u8fd0\u884c\u65f6\u91cd\u8f7d\u6a21\u5757</li> </ul>"},{"location":"#_5","title":"\ud83d\udd17 \u667a\u80fd\u4f9d\u8d56\u89e3\u6790","text":"<ul> <li>\u62d3\u6251\u6392\u5e8f: \u57fa\u4e8e Kahn \u7b97\u6cd5\u7684\u4f9d\u8d56\u987a\u5e8f\u89e3\u6790</li> <li>\u5faa\u73af\u68c0\u6d4b: \u81ea\u52a8\u68c0\u6d4b\u5e76\u62a5\u544a\u5faa\u73af\u4f9d\u8d56</li> <li>\u7f3a\u5931\u68c0\u6d4b: \u9a8c\u8bc1\u6240\u6709\u4f9d\u8d56\u662f\u5426\u6ee1\u8db3</li> </ul>"},{"location":"#_6","title":"\ud83d\udce1 \u4e8b\u4ef6\u9a71\u52a8\u67b6\u6784","text":"<ul> <li>\u53d1\u5e03\u8ba2\u9605: \u7075\u6d3b\u7684\u4e8b\u4ef6\u603b\u7ebf\u7cfb\u7edf</li> <li>\u901a\u914d\u7b26\u8ba2\u9605: \u652f\u6301 <code>*</code> \u76d1\u542c\u6240\u6709\u4e8b\u4ef6</li> <li>\u5f02\u5e38\u9694\u79bb: \u5355\u4e2a\u5904\u7406\u5668\u5f02\u5e38\u4e0d\u5f71\u54cd\u5176\u4ed6\u5904\u7406\u5668</li> </ul>"},{"location":"#_7","title":"\ud83d\udee1\ufe0f \u7c7b\u578b\u5b89\u5168","text":"<ul> <li>\u4e25\u683c\u7c7b\u578b\u68c0\u67e5: \u901a\u8fc7 mypy strict \u6a21\u5f0f\u9a8c\u8bc1</li> <li>\u534f\u8bae\u652f\u6301: \u4f7f\u7528 Protocol \u5b9a\u4e49\u6e05\u6670\u7684\u63a5\u53e3\u5951\u7ea6</li> <li>\u8fd0\u884c\u65f6\u68c0\u67e5: <code>@runtime_checkable</code> \u786e\u4fdd\u7c7b\u578b\u5b89\u5168</li> </ul>"},{"location":"#_8","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"#_9","title":"\u5b89\u88c5","text":"<pre><code># \u4f7f\u7528 uv (\u63a8\u8350)\nuv add symphra-modules\n\n# \u4f7f\u7528 pip\npip install symphra-modules\n</code></pre>"},{"location":"#_10","title":"\u57fa\u672c\u7528\u6cd5","text":"<pre><code>from symphra_modules import ModuleManager\nfrom symphra_modules.abc import BaseModule, ModuleMetadata\n\n# \u5b9a\u4e49\u6a21\u5757\nclass MyModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"my_module\",\n            version=\"1.0.0\",\n            dependencies=[\"other_module\"]\n        )\n\n    def start(self) -&gt; None:\n        print(\"\u6a21\u5757\u5df2\u542f\u52a8!\")\n\n    def stop(self) -&gt; None:\n        print(\"\u6a21\u5757\u5df2\u505c\u6b62!\")\n\n# \u4f7f\u7528\u7ba1\u7406\u5668\nmanager = ModuleManager()\n\n# \u52a0\u8f7d\u5e76\u542f\u52a8\u6a21\u5757\nmanager.load_module(\"my_module\", source=\"./modules\")\nmanager.start_module(\"my_module\")\n\n# \u505c\u6b62\u6a21\u5757\nmanager.stop_module(\"my_module\")\n</code></pre>"},{"location":"#_11","title":"\u5f02\u6b65\u6a21\u5757\u793a\u4f8b","text":"<pre><code>import asyncio\nfrom symphra_modules.abc import BaseModule, ModuleMetadata\n\nclass AsyncModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(name=\"async_module\")\n\n    async def start(self) -&gt; None:\n        await asyncio.sleep(0.1)\n        print(\"\u5f02\u6b65\u6a21\u5757\u5df2\u542f\u52a8!\")\n\n    async def stop(self) -&gt; None:\n        await asyncio.sleep(0.1)\n        print(\"\u5f02\u6b65\u6a21\u5757\u5df2\u505c\u6b62!\")\n</code></pre>"},{"location":"#_12","title":"\u4f9d\u8d56\u7ba1\u7406\u793a\u4f8b","text":"<pre><code>from symphra_modules.resolver import DependencyResolver\nfrom symphra_modules.config import ModuleMetadata\n\nresolver = DependencyResolver()\n\n# \u6dfb\u52a0\u6a21\u5757\u5143\u6570\u636e\nresolver.add_module(ModuleMetadata(name=\"base\"))\nresolver.add_module(ModuleMetadata(name=\"auth\", dependencies=[\"base\"]))\nresolver.add_module(ModuleMetadata(name=\"api\", dependencies=[\"base\", \"auth\"]))\n\n# \u83b7\u53d6\u52a0\u8f7d\u987a\u5e8f\nload_order = resolver.resolve()\nprint(load_order)  # [\"base\", \"auth\", \"api\"]\n</code></pre>"},{"location":"#_13","title":"\u4e8b\u4ef6\u7cfb\u7edf\u793a\u4f8b","text":"<pre><code>from symphra_modules.events import EventBus, ModuleStartedEvent\n\nbus = EventBus()\n\n# \u8ba2\u9605\u4e8b\u4ef6\n@bus.subscribe(\"module.started\")\ndef on_module_started(event: ModuleStartedEvent) -&gt; None:\n    print(f\"\u6a21\u5757 {event.module_name} \u5df2\u542f\u52a8!\")\n\n# \u53d1\u5e03\u4e8b\u4ef6\nbus.publish(ModuleStartedEvent(\"my_module\"))\n</code></pre>"},{"location":"#_14","title":"\u67b6\u6784\u8bbe\u8ba1","text":""},{"location":"#_15","title":"\u6838\u5fc3\u7ec4\u4ef6","text":"<pre><code>graph TD\n    A[ModuleManager] --&gt; B[ModuleRegistry]\n    A --&gt; C[ModuleLoader]\n    A --&gt; D[DependencyResolver]\n    B --&gt; E[EventBus]\n    C --&gt; F[DirectoryLoader]\n    C --&gt; G[PackageLoader]\n    C --&gt; H[AutoLoader]\n</code></pre>"},{"location":"#_16","title":"\u72b6\u6001\u8f6c\u6362","text":"<pre><code>stateDiagram-v2\n    [*] --&gt; NOT_INSTALLED\n    NOT_INSTALLED --&gt; LOADED: register\n    LOADED --&gt; INSTALLED: install\n    INSTALLED --&gt; STARTED: start\n    STARTED --&gt; STOPPED: stop\n    STOPPED --&gt; STARTED: start\n    INSTALLED --&gt; LOADED: uninstall\n    LOADED --&gt; [*]: unregister\n    STOPPED --&gt; INSTALLED: uninstall\n</code></pre>"},{"location":"#_17","title":"\u6027\u80fd\u7279\u6027","text":"<ul> <li>\u542f\u52a8\u65f6\u95f4: &lt; 100ms (100\u4e2a\u6a21\u5757)</li> <li>\u5185\u5b58\u5360\u7528: ~ 1MB (100\u4e2a\u6a21\u5757)</li> <li>\u52a0\u8f7d\u901f\u5ea6: &gt; 1000 \u6a21\u5757/\u79d2</li> <li>\u5e76\u53d1\u652f\u6301: \u5b8c\u5168\u7ebf\u7a0b\u5b89\u5168</li> </ul>"},{"location":"#_18","title":"\u4ee3\u7801\u8d28\u91cf\u4fdd\u8bc1","text":"<ul> <li>\u2705 \u6d4b\u8bd5\u8986\u76d6\u7387: 80%+</li> <li>\u2705 \u7c7b\u578b\u68c0\u67e5: mypy strict \u6a21\u5f0f</li> <li>\u2705 \u4ee3\u7801\u683c\u5f0f: ruff \u683c\u5f0f\u5316</li> <li>\u2705 \u4ee3\u7801\u68c0\u67e5: ruff lint</li> <li>\u2705 \u9884\u63d0\u4ea4\u94a9\u5b50: pre-commit \u81ea\u52a8\u5316\u68c0\u67e5</li> </ul>"},{"location":"#_19","title":"\u4e0b\u4e00\u6b65","text":"<ul> <li>\u5feb\u901f\u5f00\u59cb - \u8be6\u7ec6\u7684\u5b89\u88c5\u548c\u4f7f\u7528\u6307\u5357</li> <li>\u7528\u6237\u6307\u5357 - \u6df1\u5165\u4e86\u89e3\u6838\u5fc3\u6982\u5ff5</li> <li>API \u53c2\u8003 - \u5b8c\u6574\u7684 API \u6587\u6863</li> <li>\u793a\u4f8b - \u66f4\u591a\u5b9e\u7528\u793a\u4f8b</li> </ul>"},{"location":"#_20","title":"\u8bb8\u53ef\u8bc1","text":"<p>\u672c\u9879\u76ee\u91c7\u7528 MIT \u8bb8\u53ef\u8bc1 - \u8be6\u89c1 LICENSE \u6587\u4ef6\u3002</p>"},{"location":"development/","title":"\u5f00\u53d1\u6307\u5357","text":""},{"location":"development/#_2","title":"\u5f00\u53d1\u73af\u5883\u8bbe\u7f6e","text":""},{"location":"development/#_3","title":"\u73af\u5883\u8981\u6c42","text":"<ul> <li>Python 3.11+</li> <li>uv (\u63a8\u8350) \u6216 pip</li> <li>Git</li> </ul>"},{"location":"development/#_4","title":"\u5b89\u88c5\u5f00\u53d1\u4f9d\u8d56","text":"<pre><code># \u514b\u9686\u9879\u76ee\ngit clone https://github.com/getaix/symphra-modules.git\ncd symphra-modules\n\n# \u4f7f\u7528 uv \u5b89\u88c5\uff08\u63a8\u8350\uff09\nuv sync --dev\n\n# \u6216\u4f7f\u7528 pip\npip install -e .[dev]\n</code></pre>"},{"location":"development/#_5","title":"\u5f00\u53d1\u5de5\u5177","text":"<p>\u9879\u76ee\u4f7f\u7528\u4ee5\u4e0b\u5f00\u53d1\u5de5\u5177\uff1a</p> <ul> <li>Black: \u4ee3\u7801\u683c\u5f0f\u5316</li> <li>isort: \u5bfc\u5165\u6392\u5e8f</li> <li>mypy: \u9759\u6001\u7c7b\u578b\u68c0\u67e5</li> <li>ruff: \u4ee3\u7801\u68c0\u67e5\u548c\u4fee\u590d</li> <li>pytest: \u5355\u5143\u6d4b\u8bd5</li> <li>coverage: \u6d4b\u8bd5\u8986\u76d6\u7387</li> </ul>"},{"location":"development/#_6","title":"\u4ee3\u7801\u89c4\u8303","text":""},{"location":"development/#_7","title":"\u7c7b\u578b\u6ce8\u89e3","text":"<p>\u9879\u76ee\u8981\u6c42 100% \u7c7b\u578b\u8986\u76d6\uff0c\u4f7f\u7528\u4e25\u683c\u7684 mypy \u914d\u7f6e\uff1a</p> <pre><code>from typing import Optional, Dict, List\n\ndef process_data(data: Dict[str, Any]) -&gt; Optional[List[str]]:\n    \"\"\"\u5904\u7406\u6570\u636e\u5e76\u8fd4\u56de\u7ed3\u679c\u5217\u8868.\"\"\"\n    if not data:\n        return None\n    return [item.upper() for item in data.values()]\n</code></pre>"},{"location":"development/#_8","title":"\u6587\u6863\u5b57\u7b26\u4e32","text":"<p>\u4f7f\u7528 Google \u98ce\u683c\u7684\u6587\u6863\u5b57\u7b26\u4e32\uff1a</p> <pre><code>def calculate_total(items: List[Dict[str, float]]) -&gt; float:\n    \"\"\"\u8ba1\u7b97\u5546\u54c1\u603b\u4ef7.\n\n    Args:\n        items: \u5546\u54c1\u5217\u8868\uff0c\u6bcf\u4e2a\u5546\u54c1\u5305\u542b\u4ef7\u683c\u4fe1\u606f\n\n    Returns:\n        \u603b\u4ef7\n\n    Raises:\n        ValueError: \u5f53\u5546\u54c1\u4ef7\u683c\u65e0\u6548\u65f6\n\n    Example:\n        &gt;&gt;&gt; calculate_total([{\"price\": 10.0}, {\"price\": 20.0}])\n        30.0\n    \"\"\"\n    return sum(item[\"price\"] for item in items)\n</code></pre>"},{"location":"development/#_9","title":"\u547d\u540d\u7ea6\u5b9a","text":"<ul> <li>\u7c7b\u540d: <code>PascalCase</code></li> <li>\u51fd\u6570\u548c\u53d8\u91cf: <code>snake_case</code></li> <li>\u5e38\u91cf: <code>UPPER_SNAKE_CASE</code></li> <li>\u79c1\u6709\u6210\u5458: \u524d\u7f00 <code>_</code></li> </ul>"},{"location":"development/#_10","title":"\u9879\u76ee\u7ed3\u6784","text":"<pre><code>src/symphra_modules/\n\u251c\u2500\u2500 __init__.py          # \u5305\u521d\u59cb\u5316\n\u251c\u2500\u2500 abc.py              # \u62bd\u8c61\u57fa\u7c7b\n\u251c\u2500\u2500 config.py           # \u914d\u7f6e\u7ba1\u7406\n\u251c\u2500\u2500 events/             # \u4e8b\u4ef6\u7cfb\u7edf\n\u251c\u2500\u2500 exceptions.py       # \u5f02\u5e38\u5b9a\u4e49\n\u251c\u2500\u2500 loader/             # \u6a21\u5757\u52a0\u8f7d\u5668\n\u251c\u2500\u2500 manager.py          # \u6a21\u5757\u7ba1\u7406\u5668\n\u251c\u2500\u2500 registry.py         # \u6a21\u5757\u6ce8\u518c\u8868\n\u251c\u2500\u2500 resolver/           # \u4f9d\u8d56\u89e3\u6790\u5668\n\u2514\u2500\u2500 utils/              # \u5de5\u5177\u51fd\u6570\n\ntests/                  # \u6d4b\u8bd5\u6587\u4ef6\n\u251c\u2500\u2500 unit/              # \u5355\u5143\u6d4b\u8bd5\n\u251c\u2500\u2500 integration/       # \u96c6\u6210\u6d4b\u8bd5\n\u2514\u2500\u2500 fixtures/          # \u6d4b\u8bd5\u56fa\u4ef6\n\ndocs/                  # \u6587\u6863\n\u251c\u2500\u2500 guide/            # \u7528\u6237\u6307\u5357\n\u251c\u2500\u2500 api/              # API \u6587\u6863\n\u2514\u2500\u2500 examples/         # \u793a\u4f8b\n\nexamples/              # \u4f7f\u7528\u793a\u4f8b\n</code></pre>"},{"location":"development/#_11","title":"\u5f00\u53d1\u5de5\u4f5c\u6d41","text":""},{"location":"development/#1","title":"1. \u521b\u5efa\u529f\u80fd\u5206\u652f","text":"<pre><code>git checkout -b feature/new-feature\n</code></pre>"},{"location":"development/#2","title":"2. \u7f16\u5199\u4ee3\u7801","text":"<p>\u9075\u5faa\u4ee5\u4e0b\u539f\u5219\uff1a</p> <ul> <li>SOLID \u539f\u5219: \u5355\u4e00\u804c\u8d23\u3001\u5f00\u95ed\u539f\u5219\u7b49</li> <li>DRY \u539f\u5219: \u4e0d\u8981\u91cd\u590d\u81ea\u5df1</li> <li>KISS \u539f\u5219: \u4fdd\u6301\u7b80\u5355</li> </ul>"},{"location":"development/#3","title":"3. \u7f16\u5199\u6d4b\u8bd5","text":"<p>\u4e3a\u65b0\u529f\u80fd\u7f16\u5199\u5168\u9762\u7684\u6d4b\u8bd5\uff1a</p> <pre><code># tests/unit/test_new_feature.py\nimport pytest\nfrom symphra_modules import NewFeature\n\nclass TestNewFeature:\n    def test_basic_functionality(self):\n        feature = NewFeature()\n        result = feature.process(\"input\")\n        assert result == \"expected_output\"\n\n    def test_edge_cases(self):\n        feature = NewFeature()\n        with pytest.raises(ValueError):\n            feature.process(None)\n</code></pre>"},{"location":"development/#4","title":"4. \u8fd0\u884c\u6d4b\u8bd5","text":"<pre><code># \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\npytest\n\n# \u8fd0\u884c\u7279\u5b9a\u6d4b\u8bd5\u6587\u4ef6\npytest tests/unit/test_new_feature.py\n\n# \u5e26\u8986\u76d6\u7387\u62a5\u544a\npytest --cov=symphra_modules --cov-report=html\n</code></pre>"},{"location":"development/#5","title":"5. \u4ee3\u7801\u68c0\u67e5","text":"<pre><code># \u683c\u5f0f\u5316\u4ee3\u7801\nblack src/ tests/\n\n# \u6392\u5e8f\u5bfc\u5165\nisort src/ tests/\n\n# \u7c7b\u578b\u68c0\u67e5\nmypy src/\n\n# \u4ee3\u7801\u68c0\u67e5\nruff check src/ tests/\n\n# \u81ea\u52a8\u4fee\u590d\nruff fix src/ tests/\n</code></pre>"},{"location":"development/#6","title":"6. \u63d0\u4ea4\u4ee3\u7801","text":"<pre><code>git add .\ngit commit -m \"feat: add new feature\n\n- Add NewFeature class\n- Implement process method\n- Add comprehensive tests\n- Update documentation\"\n</code></pre>"},{"location":"development/#_12","title":"\u8d21\u732e\u6307\u5357","text":""},{"location":"development/#_13","title":"\u63d0\u4ea4\u4fe1\u606f\u683c\u5f0f","text":"<p>\u4f7f\u7528\u7ea6\u5b9a\u5f0f\u63d0\u4ea4\u683c\u5f0f\uff1a</p> <pre><code>type(scope): description\n\n[optional body]\n\n[optional footer]\n</code></pre> <p>\u7c7b\u578b\uff1a - <code>feat</code>: \u65b0\u529f\u80fd - <code>fix</code>: \u4fee\u590d - <code>docs</code>: \u6587\u6863\u66f4\u65b0 - <code>style</code>: \u4ee3\u7801\u98ce\u683c\u8c03\u6574 - <code>refactor</code>: \u91cd\u6784 - <code>test</code>: \u6d4b\u8bd5\u76f8\u5173 - <code>chore</code>: \u6784\u5efa/\u5de5\u5177\u76f8\u5173</p>"},{"location":"development/#pull-request","title":"Pull Request \u6d41\u7a0b","text":"<ol> <li>Fork \u9879\u76ee</li> <li>\u521b\u5efa\u529f\u80fd\u5206\u652f</li> <li>\u63d0\u4ea4\u66f4\u6539</li> <li>\u63a8\u9001\u5206\u652f</li> <li>\u521b\u5efa Pull Request</li> <li>\u7b49\u5f85\u4ee3\u7801\u5ba1\u67e5</li> <li>\u5408\u5e76\u66f4\u6539</li> </ol>"},{"location":"development/#_14","title":"\u8c03\u8bd5\u6280\u5de7","text":""},{"location":"development/#_15","title":"\u65e5\u5fd7\u8bb0\u5f55","text":"<p>\u4f7f\u7528\u7ed3\u6784\u5316\u65e5\u5fd7\uff1a</p> <pre><code>import logging\n\nlogger = logging.getLogger(__name__)\n\ndef process_data(data):\n    logger.debug(\"Processing data: %s\", data)\n    try:\n        result = do_processing(data)\n        logger.info(\"Data processed successfully\")\n        return result\n    except Exception as e:\n        logger.error(\"Failed to process data: %s\", e)\n        raise\n</code></pre>"},{"location":"development/#_16","title":"\u8c03\u8bd5\u5f02\u6b65\u4ee3\u7801","text":"<pre><code>import asyncio\n\nasync def debug_async_function():\n    print(\"Starting async function\")\n    await asyncio.sleep(1)\n    print(\"Async function completed\")\n\n# \u4f7f\u7528\u8c03\u8bd5\u6a21\u5f0f\u8fd0\u884c\nasyncio.run(debug_async_function(), debug=True)\n</code></pre>"},{"location":"development/#_17","title":"\u6027\u80fd\u4f18\u5316","text":""},{"location":"development/#_18","title":"\u5206\u6790\u6027\u80fd","text":"<pre><code>import cProfile\nimport pstats\n\ndef profile_function():\n    # \u8981\u5206\u6790\u7684\u4ee3\u7801\n    pass\n\nprofiler = cProfile.Profile()\nprofiler.enable()\nprofile_function()\nprofiler.disable()\n\nstats = pstats.Stats(profiler)\nstats.sort_stats('cumulative')\nstats.print_stats()\n</code></pre>"},{"location":"development/#_19","title":"\u5185\u5b58\u4f18\u5316","text":"<ul> <li>\u4f7f\u7528 <code>__slots__</code> \u51cf\u5c11\u5185\u5b58\u5360\u7528</li> <li>\u907f\u514d\u5faa\u73af\u5f15\u7528</li> <li>\u4f7f\u7528\u5f31\u5f15\u7528\u5904\u7406\u7f13\u5b58</li> </ul> <pre><code>class OptimizedClass:\n    __slots__ = ('name', 'value')\n\n    def __init__(self, name, value):\n        self.name = name\n        self.value = value\n</code></pre>"},{"location":"development/#_20","title":"\u6d4b\u8bd5\u7b56\u7565","text":""},{"location":"development/#_21","title":"\u5355\u5143\u6d4b\u8bd5","text":"<p>\u6d4b\u8bd5\u5355\u4e2a\u7ec4\u4ef6\uff1a</p> <pre><code>def test_module_lifecycle():\n    module = TestModule()\n    assert module.state == ModuleState.NOT_INSTALLED\n\n    module.install()\n    assert module.state == ModuleState.INSTALLED\n\n    module.start()\n    assert module.state == ModuleState.STARTED\n</code></pre>"},{"location":"development/#_22","title":"\u96c6\u6210\u6d4b\u8bd5","text":"<p>\u6d4b\u8bd5\u7ec4\u4ef6\u95f4\u4ea4\u4e92\uff1a</p> <pre><code>def test_module_dependencies():\n    manager = ModuleManager()\n\n    # \u52a0\u8f7d\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u6a21\u5757\n    await manager.load_from_directory(\"./test_modules\")\n\n    # \u9a8c\u8bc1\u4f9d\u8d56\u89e3\u6790\n    await manager.start_all()\n\n    # \u9a8c\u8bc1\u6240\u6709\u6a21\u5757\u90fd\u6b63\u786e\u542f\u52a8\n    assert all(module.is_started for module in manager.get_modules())\n</code></pre>"},{"location":"development/#_23","title":"\u5f02\u6b65\u6d4b\u8bd5","text":"<pre><code>import pytest_asyncio\n\n@pytest.mark.asyncio\nasync def test_async_module():\n    module = AsyncModule()\n    await module.start()\n    assert module.is_started\n    await module.stop()\n    assert not module.is_started\n</code></pre>"},{"location":"development/#_24","title":"\u53d1\u5e03\u6d41\u7a0b","text":""},{"location":"development/#_25","title":"\u7248\u672c\u7ba1\u7406","text":"<p>\u4f7f\u7528\u8bed\u4e49\u5316\u7248\u672c\uff1a</p> <ul> <li><code>MAJOR.MINOR.PATCH</code></li> <li><code>MAJOR</code>: \u4e0d\u517c\u5bb9\u7684 API \u66f4\u6539</li> <li><code>MINOR</code>: \u5411\u540e\u517c\u5bb9\u7684\u529f\u80fd\u6dfb\u52a0</li> <li><code>PATCH</code>: \u5411\u540e\u517c\u5bb9\u7684\u4fee\u590d</li> </ul>"},{"location":"development/#_26","title":"\u53d1\u5e03\u6b65\u9aa4","text":"<ol> <li>\u66f4\u65b0\u7248\u672c\u53f7</li> <li>\u66f4\u65b0\u53d8\u66f4\u65e5\u5fd7</li> <li>\u521b\u5efa\u53d1\u5e03\u6807\u7b7e</li> <li>\u6784\u5efa\u5206\u53d1\u5305</li> <li>\u4e0a\u4f20\u5230 PyPI</li> </ol> <pre><code># \u66f4\u65b0\u7248\u672c\nuv version patch\n\n# \u6784\u5efa\nuv build\n\n# \u53d1\u5e03\nuv publish\n</code></pre>"},{"location":"development/#_27","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"development/#_28","title":"\u5bfc\u5165\u9519\u8bef","text":"<pre><code># \u9519\u8bef\uff1a\u76f8\u5bf9\u5bfc\u5165\u95ee\u9898\nfrom ..utils import helper  # \u5728\u53ef\u6267\u884c\u811a\u672c\u4e2d\u53ef\u80fd\u5931\u8d25\n\n# \u6b63\u786e\uff1a\u7edd\u5bf9\u5bfc\u5165\nfrom symphra_modules.utils import helper\n</code></pre>"},{"location":"development/#_29","title":"\u5f02\u6b65/\u540c\u6b65\u6df7\u7528","text":"<pre><code># \u9519\u8bef\uff1a\u6df7\u7528 async def \u548c def\nclass MixedModule(BaseModule):\n    async def start(self):  # async\n        pass\n\n    def stop(self):  # sync\n        pass  # \u8fd9\u53ef\u80fd\u5bfc\u81f4\u95ee\u9898\n\n# \u6b63\u786e\uff1a\u4fdd\u6301\u4e00\u81f4\nclass AsyncModule(BaseModule):\n    async def start(self):\n        pass\n\n    async def stop(self):\n        pass\n</code></pre>"},{"location":"development/#_30","title":"\u4f9d\u8d56\u5faa\u73af","text":"<pre><code># \u9519\u8bef\uff1a\u5faa\u73af\u4f9d\u8d56\n# module_a.py \u4f9d\u8d56 module_b\n# module_b.py \u4f9d\u8d56 module_a\n\n# \u6b63\u786e\uff1a\u91cd\u6784\u907f\u514d\u5faa\u73af\n# \u4f7f\u7528\u4e8b\u4ef6\u7cfb\u7edf\u6216\u5c06\u5171\u540c\u4ee3\u7801\u63d0\u53d6\u5230\u72ec\u7acb\u6a21\u5757\n</code></pre>"},{"location":"development/#_31","title":"\u8d44\u6e90\u94fe\u63a5","text":"<ul> <li>Python \u5b98\u65b9\u6587\u6863</li> <li>Typing \u6a21\u5757\u6587\u6863</li> <li>AsyncIO \u6587\u6863</li> <li>Pytest \u6587\u6863</li> <li>MyPy \u6587\u6863</li> </ul>"},{"location":"examples/","title":"\u793a\u4f8b","text":"<p>\u672c\u7ae0\u8282\u63d0\u4f9b Symphra Modules \u7684\u5b8c\u6574\u4f7f\u7528\u793a\u4f8b\u3002</p>"},{"location":"examples/#_2","title":"\u57fa\u7840\u793a\u4f8b","text":""},{"location":"examples/#_3","title":"\u57fa\u672c\u6a21\u5757\u5b9a\u4e49\u548c\u4f7f\u7528","text":"<pre><code>from symphra_modules import BaseModule, ModuleManager, ModuleMetadata\n\nclass HelloModule(BaseModule):\n    \"\"\"\u793a\u4f8b\u6a21\u5757 - Hello World.\"\"\"\n\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"hello\",\n            version=\"1.0.0\",\n            description=\"\u4e00\u4e2a\u7b80\u5355\u7684 Hello World \u6a21\u5757\",\n        )\n\n    def start(self) -&gt; None:\n        print(f\"Hello from {self.metadata.name}!\")\n\n    def stop(self) -&gt; None:\n        print(f\"Goodbye from {self.metadata.name}!\")\n\n# \u4f7f\u7528\u6a21\u5757\nmanager = ModuleManager()\nmanager.registry.register(\"hello\", HelloModule)\n\n# \u5b89\u88c5\u5e76\u542f\u52a8\u6a21\u5757\nmanager.install_module(\"hello\")\nmanager.start_module(\"hello\")\n\n# \u68c0\u67e5\u72b6\u6001\nprint(f\"\u5df2\u52a0\u8f7d\u7684\u6a21\u5757: {manager.list_modules()}\")\n</code></pre>"},{"location":"examples/#_4","title":"\u4f9d\u8d56\u7ba1\u7406\u793a\u4f8b","text":""},{"location":"examples/#_5","title":"\u6a21\u5757\u4f9d\u8d56\u89e3\u6790","text":"<pre><code>from symphra_modules import DependencyResolver, ModuleMetadata\n\n# \u521b\u5efa\u4f9d\u8d56\u89e3\u6790\u5668\nresolver = DependencyResolver()\n\n# \u5b9a\u4e49\u6a21\u5757\u53ca\u5176\u4f9d\u8d56\nresolver.add_module(ModuleMetadata(name=\"database\", dependencies=[]))\nresolver.add_module(ModuleMetadata(name=\"cache\", dependencies=[\"database\"]))\nresolver.add_module(ModuleMetadata(name=\"api\", dependencies=[\"database\", \"cache\"]))\n\n# \u89e3\u6790\u4f9d\u8d56\u987a\u5e8f\ntry:\n    order = resolver.resolve_dependencies()\n    print(f\"\u52a0\u8f7d\u987a\u5e8f: {order}\")\nexcept CircularDependencyError as e:\n    print(f\"\u68c0\u6d4b\u5230\u5faa\u73af\u4f9d\u8d56: {e}\")\n</code></pre>"},{"location":"examples/#_6","title":"\u4f9d\u8d56\u6ce8\u5165","text":"<pre><code>class DatabaseModule(BaseModule):\n    def start(self) -&gt; None:\n        self.connection = create_database_connection()\n\nclass APIModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"api\",\n            dependencies=[\"database\"]\n        )\n\n    def start(self) -&gt; None:\n        # \u83b7\u53d6\u4f9d\u8d56\u7684\u6570\u636e\u5e93\u6a21\u5757\n        db_module = self.manager.get_module(\"database\")\n        self.db_connection = db_module.connection\n</code></pre>"},{"location":"examples/#_7","title":"\u4e8b\u4ef6\u7cfb\u7edf\u793a\u4f8b","text":""},{"location":"examples/#_8","title":"\u57fa\u672c\u4e8b\u4ef6\u53d1\u5e03\u548c\u8ba2\u9605","text":"<pre><code>from symphra_modules import EventBus\n\n# \u521b\u5efa\u4e8b\u4ef6\u603b\u7ebf\nbus = EventBus()\n\n# \u5b9a\u4e49\u4e8b\u4ef6\u5904\u7406\u5668\n@bus.subscribe(\"user.created\")\ndef handle_user_created(user_id: int, email: str):\n    print(f\"New user created: {user_id} - {email}\")\n\n@bus.subscribe(\"user.*\")  # \u901a\u914d\u7b26\u8ba2\u9605\ndef handle_all_user_events(event_type: str, **data):\n    print(f\"User event: {event_type}\")\n\n# \u53d1\u5e03\u4e8b\u4ef6\nbus.publish(\"user.created\", user_id=123, email=\"user@example.com\")\n</code></pre>"},{"location":"examples/#_9","title":"\u5f02\u6b65\u4e8b\u4ef6\u5904\u7406","text":"<pre><code>import asyncio\n\n@bus.subscribe(\"data.process\")\nasync def async_data_processor(data: dict):\n    # \u5f02\u6b65\u5904\u7406\u6570\u636e\n    await process_data_async(data)\n    # \u53d1\u5e03\u5904\u7406\u5b8c\u6210\u4e8b\u4ef6\n    await bus.publish(\"data.processed\", data_id=data[\"id\"])\n</code></pre>"},{"location":"examples/#_10","title":"\u76ee\u5f55\u52a0\u8f7d\u793a\u4f8b","text":""},{"location":"examples/#_11","title":"\u4ece\u76ee\u5f55\u81ea\u52a8\u52a0\u8f7d\u6a21\u5757","text":"<pre><code># \u9879\u76ee\u7ed3\u6784\n# modules/\n# \u251c\u2500\u2500 user.py\n# \u251c\u2500\u2500 payment.py\n# \u2514\u2500\u2500 notification.py\n\nfrom symphra_modules import ModuleManager\n\nmanager = ModuleManager()\n\n# \u4ece\u76ee\u5f55\u52a0\u8f7d\u6240\u6709\u6a21\u5757\nawait manager.load_from_directory(\"./modules\")\n\n# \u542f\u52a8\u6240\u6709\u6a21\u5757\uff08\u6309\u4f9d\u8d56\u987a\u5e8f\uff09\nawait manager.start_all()\n</code></pre>"},{"location":"examples/#_12","title":"\u6761\u4ef6\u52a0\u8f7d","text":"<pre><code># \u4ec5\u5728\u751f\u4ea7\u73af\u5883\u52a0\u8f7d\u67d0\u4e9b\u6a21\u5757\nawait manager.load_from_directory(\n    \"./modules\",\n    condition=lambda: os.getenv(\"ENV\") == \"production\"\n)\n</code></pre>"},{"location":"examples/#_13","title":"\u5f02\u6b65\u6a21\u5757\u793a\u4f8b","text":""},{"location":"examples/#_14","title":"\u5b9a\u4e49\u5f02\u6b65\u6a21\u5757","text":"<pre><code>import asyncio\n\nclass AsyncDatabaseModule(BaseModule):\n    async def start(self) -&gt; None:\n        self.pool = await create_connection_pool()\n        print(\"Database pool created\")\n\n    async def stop(self) -&gt; None:\n        await self.pool.close()\n        print(\"Database pool closed\")\n\n# \u5f02\u6b65\u542f\u52a8\nmanager = ModuleManager()\nawait manager.load_from_directory(\"./async_modules\")\nawait manager.start_all()  # \u81ea\u52a8\u5904\u7406\u5f02\u6b65\u6a21\u5757\n</code></pre>"},{"location":"examples/#_15","title":"\u914d\u7f6e\u7ba1\u7406\u793a\u4f8b","text":""},{"location":"examples/#_16","title":"\u6a21\u5757\u914d\u7f6e","text":"<pre><code>class ConfigurableModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"configurable\",\n            config_schema={\n                \"type\": \"object\",\n                \"properties\": {\n                    \"host\": {\"type\": \"string\"},\n                    \"port\": {\"type\": \"integer\"}\n                }\n            }\n        )\n\n    def install(self, config: dict | None = None) -&gt; None:\n        super().install(config)\n        self.host = self.get_config().get(\"host\", \"localhost\")\n        self.port = self.get_config().get(\"port\", 8080)\n</code></pre>"},{"location":"examples/#_17","title":"\u914d\u7f6e\u9a8c\u8bc1","text":"<pre><code>def validate_config(self, config: dict | None = None) -&gt; bool:\n    if not config:\n        return False\n    required_fields = [\"host\", \"port\"]\n    return all(field in config for field in required_fields)\n</code></pre>"},{"location":"examples/#_18","title":"\u70ed\u91cd\u8f7d\u793a\u4f8b","text":""},{"location":"examples/#_19","title":"\u8fd0\u884c\u65f6\u6a21\u5757\u91cd\u8f7d","text":"<pre><code># \u52a0\u8f7d\u521d\u59cb\u6a21\u5757\nawait manager.load_from_directory(\"./modules\")\nawait manager.start_all()\n\n# \u4fee\u6539\u6a21\u5757\u4ee3\u7801\u540e\u91cd\u8f7d\nawait manager.reload_module(\"user_module\")\n\n# \u6216\u8005\u91cd\u8f7d\u6240\u6709\u6a21\u5757\nawait manager.reload_all()\n</code></pre>"},{"location":"examples/#_20","title":"\u5b8c\u6574\u5e94\u7528\u793a\u4f8b","text":""},{"location":"examples/#web","title":"Web \u5e94\u7528\u67b6\u6784","text":"<pre><code># modules/database.py\nclass DatabaseModule(BaseModule):\n    def start(self) -&gt; None:\n        self.engine = create_engine(\"sqlite:///app.db\")\n\n# modules/cache.py\nclass CacheModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(dependencies=[\"database\"])\n\n    def start(self) -&gt; None:\n        db = self.manager.get_module(\"database\")\n        self.cache = RedisCache(db.engine)\n\n# modules/api.py\nclass APIModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(dependencies=[\"database\", \"cache\"])\n\n    def start(self) -&gt; None:\n        self.app = FastAPI()\n        # \u4f7f\u7528\u4f9d\u8d56\u7684\u6a21\u5757\n        self.db = self.manager.get_module(\"database\").engine\n        self.cache = self.manager.get_module(\"cache\").cache\n\n# \u542f\u52a8\u5e94\u7528\nmanager = ModuleManager()\nawait manager.load_from_directory(\"./modules\")\nawait manager.start_all()  # \u81ea\u52a8\u6309\u4f9d\u8d56\u987a\u5e8f\u542f\u52a8\n</code></pre>"},{"location":"examples/#_21","title":"\u6d4b\u8bd5\u793a\u4f8b","text":""},{"location":"examples/#_22","title":"\u6a21\u5757\u5355\u5143\u6d4b\u8bd5","text":"<pre><code>import pytest\nfrom unittest.mock import Mock\n\ndef test_module_lifecycle():\n    module = HelloModule()\n    manager = Mock()\n    module.manager = manager\n\n    # \u6d4b\u8bd5\u542f\u52a8\n    module.start()\n    assert module.is_started\n\n    # \u6d4b\u8bd5\u505c\u6b62\n    module.stop()\n    assert not module.is_started\n\ndef test_dependency_injection():\n    db_module = Mock()\n    db_module.connection = \"mock_connection\"\n\n    api_module = APIModule()\n    manager = Mock()\n    manager.get_module.return_value = db_module\n    api_module.manager = manager\n\n    api_module.start()\n    assert api_module.db_connection == \"mock_connection\"\n</code></pre>"},{"location":"examples/#_23","title":"\u8fd0\u884c\u793a\u4f8b","text":"<p>\u6240\u6709\u793a\u4f8b\u4ee3\u7801\u90fd\u53ef\u4ee5\u5728 <code>examples/</code> \u76ee\u5f55\u4e2d\u627e\u5230\uff1a</p> <ul> <li><code>basic_example.py</code> - \u57fa\u7840\u4f7f\u7528\u793a\u4f8b</li> <li><code>dependency_example.py</code> - \u4f9d\u8d56\u89e3\u6790\u793a\u4f8b</li> <li><code>event_example.py</code> - \u4e8b\u4ef6\u7cfb\u7edf\u793a\u4f8b</li> </ul> <p>\u8fd0\u884c\u793a\u4f8b\uff1a</p> <pre><code># \u8fd0\u884c\u57fa\u7840\u793a\u4f8b\npython examples/basic_example.py\n\n# \u8fd0\u884c\u4f9d\u8d56\u793a\u4f8b\npython examples/dependency_example.py\n\n# \u8fd0\u884c\u4e8b\u4ef6\u793a\u4f8b\npython examples/event_example.py\n</code></pre>"},{"location":"quickstart/","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u672c\u6307\u5357\u5c06\u5e2e\u52a9\u60a8\u5feb\u901f\u4e0a\u624b Symphra Modules,\u4ece\u5b89\u88c5\u5230\u7f16\u5199\u7b2c\u4e00\u4e2a\u6a21\u5757\u3002</p>"},{"location":"quickstart/#_2","title":"\u73af\u5883\u8981\u6c42","text":"<ul> <li>Python 3.11 \u6216\u66f4\u9ad8\u7248\u672c</li> <li>uv (\u63a8\u8350) \u6216 pip</li> </ul>"},{"location":"quickstart/#_3","title":"\u5b89\u88c5","text":""},{"location":"quickstart/#uv","title":"\u4f7f\u7528 uv (\u63a8\u8350)","text":"<pre><code># \u521b\u5efa\u65b0\u9879\u76ee\nuv init my-project\ncd my-project\n\n# \u6dfb\u52a0\u4f9d\u8d56\nuv add symphra-modules\n</code></pre>"},{"location":"quickstart/#pip","title":"\u4f7f\u7528 pip","text":"<pre><code>pip install symphra-modules\n</code></pre>"},{"location":"quickstart/#_4","title":"\u7b2c\u4e00\u4e2a\u6a21\u5757","text":""},{"location":"quickstart/#1","title":"1. \u521b\u5efa\u6a21\u5757\u76ee\u5f55","text":"<pre><code>mkdir -p modules\n</code></pre>"},{"location":"quickstart/#2","title":"2. \u5b9a\u4e49\u6a21\u5757","text":"<p>\u521b\u5efa\u6587\u4ef6 <code>modules/hello.py</code>:</p> <pre><code>from symphra_modules.abc import BaseModule, ModuleMetadata\n\nclass HelloModule(BaseModule):\n    \"\"\"\u793a\u4f8b\u6a21\u5757.\"\"\"\n\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"hello\",\n            version=\"1.0.0\",\n            description=\"\u4e00\u4e2a\u7b80\u5355\u7684\u95ee\u5019\u6a21\u5757\"\n        )\n\n    def bootstrap(self) -&gt; None:\n        \"\"\"\u6a21\u5757\u5f15\u5bfc,\u5728\u6ce8\u518c\u65f6\u8c03\u7528.\"\"\"\n        print(\"HelloModule: \u5f15\u5bfc\u5b8c\u6210\")\n\n    def install(self, config: dict | None = None) -&gt; None:\n        \"\"\"\u5b89\u88c5\u6a21\u5757.\"\"\"\n        super().install(config)\n        print(f\"HelloModule: \u5df2\u5b89\u88c5,\u914d\u7f6e: {config}\")\n\n    def start(self) -&gt; None:\n        \"\"\"\u542f\u52a8\u6a21\u5757.\"\"\"\n        print(\"HelloModule: \u5df2\u542f\u52a8\")\n        print(f\"\u914d\u7f6e: {self.get_config()}\")\n\n    def stop(self) -&gt; None:\n        \"\"\"\u505c\u6b62\u6a21\u5757.\"\"\"\n        print(\"HelloModule: \u5df2\u505c\u6b62\")\n\n    def uninstall(self) -&gt; None:\n        \"\"\"\u5378\u8f7d\u6a21\u5757.\"\"\"\n        super().uninstall()\n        print(\"HelloModule: \u5df2\u5378\u8f7d\")\n</code></pre>"},{"location":"quickstart/#3","title":"3. \u4f7f\u7528\u6a21\u5757\u7ba1\u7406\u5668","text":"<p>\u521b\u5efa\u6587\u4ef6 <code>main.py</code>:</p> <pre><code>from symphra_modules import ModuleManager\n\ndef main():\n    # \u521b\u5efa\u7ba1\u7406\u5668\n    manager = ModuleManager(module_dirs=[\"modules\"])\n\n    # \u53d1\u73b0\u53ef\u7528\u6a21\u5757\n    available = manager.discover_modules()\n    print(f\"\u53ef\u7528\u6a21\u5757: {available}\")\n\n    # \u52a0\u8f7d\u6a21\u5757\n    module = manager.load_module(\"hello\")\n    print(f\"\u5df2\u52a0\u8f7d: {module.metadata.name}\")\n\n    # \u5b89\u88c5\u6a21\u5757\n    manager.install_module(\"hello\", config={\"greeting\": \"\u4f60\u597d\"})\n\n    # \u542f\u52a8\u6a21\u5757\n    manager.start_module(\"hello\")\n\n    # \u505c\u6b62\u6a21\u5757\n    manager.stop_module(\"hello\")\n\n    # \u5378\u8f7d\u6a21\u5757\n    manager.uninstall_module(\"hello\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>"},{"location":"quickstart/#4","title":"4. \u8fd0\u884c","text":"<pre><code>python main.py\n</code></pre> <p>\u8f93\u51fa:</p> <pre><code>\u53ef\u7528\u6a21\u5757: ['hello']\nHelloModule: \u5f15\u5bfc\u5b8c\u6210\n\u5df2\u52a0\u8f7d: hello\nHelloModule: \u5df2\u5b89\u88c5,\u914d\u7f6e: {'greeting': '\u4f60\u597d'}\nHelloModule: \u5df2\u542f\u52a8\n\u914d\u7f6e: {'greeting': '\u4f60\u597d'}\nHelloModule: \u5df2\u505c\u6b62\nHelloModule: \u5df2\u5378\u8f7d\n</code></pre>"},{"location":"quickstart/#_5","title":"\u5e26\u4f9d\u8d56\u7684\u6a21\u5757","text":""},{"location":"quickstart/#_6","title":"\u5b9a\u4e49\u57fa\u7840\u6a21\u5757","text":"<p><code>modules/database.py</code>:</p> <pre><code>from symphra_modules.abc import BaseModule, ModuleMetadata\n\nclass DatabaseModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(name=\"database\")\n\n    def start(self) -&gt; None:\n        self.connection = \"database_connected\"  # type: ignore[attr-defined]\n        print(\"\u6570\u636e\u5e93\u5df2\u8fde\u63a5\")\n\n    def stop(self) -&gt; None:\n        self.connection = None  # type: ignore[attr-defined]\n        print(\"\u6570\u636e\u5e93\u5df2\u65ad\u5f00\")\n</code></pre>"},{"location":"quickstart/#_7","title":"\u5b9a\u4e49\u4f9d\u8d56\u6a21\u5757","text":"<p><code>modules/user_service.py</code>:</p> <pre><code>from symphra_modules.abc import BaseModule, ModuleMetadata\n\nclass UserServiceModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"user_service\",\n            dependencies=[\"database\"]  # \u4f9d\u8d56 database \u6a21\u5757\n        )\n\n    def start(self) -&gt; None:\n        print(\"\u7528\u6237\u670d\u52a1\u5df2\u542f\u52a8,\u6570\u636e\u5e93\u53ef\u7528\")\n</code></pre>"},{"location":"quickstart/#_8","title":"\u4f7f\u7528\u4f9d\u8d56\u89e3\u6790","text":"<pre><code>from symphra_modules import ModuleManager\nfrom symphra_modules.resolver import DependencyResolver\nfrom symphra_modules.config import ModuleMetadata\n\n# \u521b\u5efa\u7ba1\u7406\u5668\nmanager = ModuleManager(module_dirs=[\"modules\"])\n\n# \u53d1\u73b0\u5e76\u52a0\u8f7d\u6240\u6709\u6a21\u5757\nmodules = manager.load_all_modules()\n\n# \u521b\u5efa\u4f9d\u8d56\u89e3\u6790\u5668\nresolver = DependencyResolver()\nfor module in modules.values():\n    resolver.add_module(module.metadata)\n\n# \u83b7\u53d6\u52a0\u8f7d\u987a\u5e8f\nload_order = resolver.resolve()\nprint(f\"\u52a0\u8f7d\u987a\u5e8f: {load_order}\")  # ['database', 'user_service']\n\n# \u6309\u987a\u5e8f\u542f\u52a8\nfor name in load_order:\n    manager.install_module(name)\n    manager.start_module(name)\n</code></pre>"},{"location":"quickstart/#_9","title":"\u5f02\u6b65\u6a21\u5757","text":""},{"location":"quickstart/#_10","title":"\u5b9a\u4e49\u5f02\u6b65\u6a21\u5757","text":"<p><code>modules/async_worker.py</code>:</p> <pre><code>import asyncio\nfrom symphra_modules.abc import BaseModule, ModuleMetadata\n\nclass AsyncWorkerModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(name=\"async_worker\")\n\n    async def start(self) -&gt; None:\n        \"\"\"\u5f02\u6b65\u542f\u52a8.\"\"\"\n        await asyncio.sleep(0.1)\n        print(\"\u5f02\u6b65\u5de5\u4f5c\u5668\u5df2\u542f\u52a8\")\n        self.running = True  # type: ignore[attr-defined]\n\n    async def stop(self) -&gt; None:\n        \"\"\"\u5f02\u6b65\u505c\u6b62.\"\"\"\n        self.running = False  # type: ignore[attr-defined]\n        await asyncio.sleep(0.1)\n        print(\"\u5f02\u6b65\u5de5\u4f5c\u5668\u5df2\u505c\u6b62\")\n</code></pre>"},{"location":"quickstart/#_11","title":"\u4f7f\u7528\u5f02\u6b65\u6a21\u5757","text":"<pre><code>import asyncio\nfrom symphra_modules import ModuleManager\nfrom symphra_modules.abc import call_module_method\n\nasync def main():\n    manager = ModuleManager(module_dirs=[\"modules\"])\n\n    # \u52a0\u8f7d\u6a21\u5757\n    module = manager.load_module(\"async_worker\")\n    manager.install_module(\"async_worker\")\n\n    # \u4f7f\u7528\u7edf\u4e00\u63a5\u53e3\u8c03\u7528\u5f02\u6b65\u65b9\u6cd5\n    await call_module_method(module, \"start\")\n    await call_module_method(module, \"stop\")\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre>"},{"location":"quickstart/#_12","title":"\u4e8b\u4ef6\u8ba2\u9605","text":""},{"location":"quickstart/#_13","title":"\u8ba2\u9605\u6a21\u5757\u4e8b\u4ef6","text":"<pre><code>from symphra_modules import ModuleManager\nfrom symphra_modules.events import EventBus, Event\n\n# \u521b\u5efa\u4e8b\u4ef6\u603b\u7ebf\nevent_bus = EventBus()\n\n# \u8ba2\u9605\u6240\u6709\u4e8b\u4ef6\n@event_bus.subscribe(\"*\")\ndef log_all_events(event: Event) -&gt; None:\n    print(f\"[\u4e8b\u4ef6] {event.event_type}: {event.module_name}\")\n\n# \u8ba2\u9605\u7279\u5b9a\u4e8b\u4ef6\n@event_bus.subscribe(\"module.started\")\ndef on_started(event: Event) -&gt; None:\n    print(f\"\u6a21\u5757 {event.module_name} \u5df2\u542f\u52a8!\")\n\n# \u521b\u5efa\u7ba1\u7406\u5668\u5e76\u6ce8\u5165\u4e8b\u4ef6\u603b\u7ebf\nmanager = ModuleManager()\nmanager.registry.event_bus = event_bus\n\n# \u64cd\u4f5c\u6a21\u5757\u4f1a\u89e6\u53d1\u4e8b\u4ef6\nmanager.load_module(\"hello\")\nmanager.install_module(\"hello\")\nmanager.start_module(\"hello\")\n</code></pre>"},{"location":"quickstart/#_14","title":"\u914d\u7f6e\u9a8c\u8bc1","text":""},{"location":"quickstart/#_15","title":"\u5b9a\u4e49\u5e26\u9a8c\u8bc1\u7684\u6a21\u5757","text":"<pre><code>from symphra_modules.abc import BaseModule, ModuleMetadata\n\nclass ConfigurableModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"configurable\",\n            config_schema={\n                \"host\": str,\n                \"port\": int,\n                \"enabled\": bool\n            }\n        )\n\n    def validate_config(self, config: dict | None = None) -&gt; bool:\n        \"\"\"\u9a8c\u8bc1\u914d\u7f6e.\"\"\"\n        if config is None:\n            return False\n\n        required = {\"host\", \"port\"}\n        if not required.issubset(config.keys()):\n            return False\n\n        if not isinstance(config[\"host\"], str):\n            return False\n        if not isinstance(config[\"port\"], int):\n            return False\n\n        return True\n\n    def start(self) -&gt; None:\n        config = self.get_config()\n        print(f\"\u670d\u52a1\u5668\u542f\u52a8: {config['host']}:{config['port']}\")\n</code></pre>"},{"location":"quickstart/#_16","title":"\u4f7f\u7528\u914d\u7f6e\u9a8c\u8bc1","text":"<pre><code>from symphra_modules import ModuleManager\nfrom symphra_modules.exceptions import ModuleConfigError\n\nmanager = ModuleManager(module_dirs=[\"modules\"])\nmanager.load_module(\"configurable\")\n\ntry:\n    # \u65e0\u6548\u914d\u7f6e\u4f1a\u5931\u8d25\n    manager.install_module(\"configurable\", config={\"invalid\": \"config\"})\nexcept ModuleConfigError as e:\n    print(f\"\u914d\u7f6e\u9519\u8bef: {e}\")\n\n# \u6709\u6548\u914d\u7f6e\nmanager.install_module(\"configurable\", config={\n    \"host\": \"localhost\",\n    \"port\": 8080,\n    \"enabled\": True\n})\nmanager.start_module(\"configurable\")\n</code></pre>"},{"location":"quickstart/#_17","title":"\u4e0b\u4e00\u6b65","text":"<ul> <li>\u57fa\u672c\u6982\u5ff5 - \u4e86\u89e3\u6838\u5fc3\u6982\u5ff5</li> <li>\u6a21\u5757\u5b9a\u4e49 - \u6df1\u5165\u5b66\u4e60\u6a21\u5757\u5b9a\u4e49</li> <li>\u751f\u547d\u5468\u671f - \u638c\u63e1\u6a21\u5757\u751f\u547d\u5468\u671f</li> <li>API \u53c2\u8003 - \u67e5\u770b\u5b8c\u6574 API \u6587\u6863</li> </ul>"},{"location":"api/abc/","title":"\u6838\u5fc3\u62bd\u8c61 (ABC)","text":""},{"location":"api/abc/#symphra_modules.abc","title":"<code>abc</code>","text":"<p>\u6a21\u5757\u63a5\u53e3\u548c\u57fa\u7c7b\u5b9a\u4e49.</p>"},{"location":"api/abc/#symphra_modules.abc-classes","title":"Classes","text":""},{"location":"api/abc/#symphra_modules.abc.BaseModule","title":"<code>BaseModule</code>","text":"<p>               Bases: <code>ABC</code></p> <p>\u6a21\u5757\u57fa\u7c7b\uff0c\u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0.</p> Source code in <code>src/symphra_modules/abc.py</code> <pre><code>class BaseModule(ABC):\n    \"\"\"\u6a21\u5757\u57fa\u7c7b\uff0c\u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0.\"\"\"\n\n    def __init__(self, config: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u6a21\u5757.\n\n        Args:\n            config: \u521d\u59cb\u914d\u7f6e\uff08\u53ef\u9009\uff09\n        \"\"\"\n        self._config = config or {}\n\n    # \u4f7f\u7528 __slots__ \u964d\u4f4e\u6bcf\u4e2a\u6a21\u5757\u5b9e\u4f8b\u7684\u5185\u5b58\u5360\u7528\n    __slots__ = (\"_config\",)\n\n    @property\n    @abstractmethod\n    def metadata(self) -&gt; ModuleMetadata:\n        \"\"\"\u83b7\u53d6\u6a21\u5757\u5143\u6570\u636e - \u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0.\"\"\"\n\n    def bootstrap(self) -&gt; None:\n        \"\"\"\u6a21\u5757\u5f15\u5bfc\uff0c\u6ce8\u518c\u4f9d\u8d56\u7b49\u64cd\u4f5c.\n\n        \u9ed8\u8ba4\u5b9e\u73b0\u4e3a\u7a7a\uff0c\u5b50\u7c7b\u53ef\u8986\u76d6\u6b64\u65b9\u6cd5\u6267\u884c\u521d\u59cb\u5316\u903b\u8f91\u3002\n        \"\"\"\n        pass\n\n    def install(self, config: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u5b89\u88c5\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n        Args:\n            config: \u5b89\u88c5\u914d\u7f6e\uff08\u53ef\u9009\uff09\n        \"\"\"\n        if config:\n            self.configure(config)\n\n    def uninstall(self) -&gt; None:\n        \"\"\"\u5378\u8f7d\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n        \u9ed8\u8ba4\u884c\u4e3a\u662f\u5148\u505c\u6b62\u6a21\u5757\u3002\n        \"\"\"\n        self.stop()\n\n    def configure(self, config: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u914d\u7f6e\u6a21\u5757.\n\n        Args:\n            config: \u914d\u7f6e\u5b57\u5178\uff08\u53ef\u9009\uff09\n\n        Raises:\n            ModuleConfigError: \u914d\u7f6e\u9a8c\u8bc1\u5931\u8d25\u65f6\u629b\u51fa\n        \"\"\"\n        if config and self.validate_config(config):\n            self._config.update(config)\n        elif config:\n            from symphra_modules.exceptions import ModuleConfigError\n\n            raise ModuleConfigError(\n                f\"\u914d\u7f6e\u9a8c\u8bc1\u5931\u8d25: {self.metadata.name}\",\n                module_name=self.metadata.name,\n            )\n\n    def start(self) -&gt; None:\n        \"\"\"\u542f\u52a8\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n        \u5b50\u7c7b\u5e94\u8986\u76d6\u6b64\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u7684\u542f\u52a8\u903b\u8f91\u3002\n        \"\"\"\n        pass\n\n    def stop(self) -&gt; None:\n        \"\"\"\u505c\u6b62\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n        \u5b50\u7c7b\u5e94\u8986\u76d6\u6b64\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u7684\u505c\u6b62\u903b\u8f91\u3002\n        \"\"\"\n        pass\n\n    def reload(self) -&gt; None:\n        \"\"\"\u91cd\u8f7d\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n        \u9ed8\u8ba4\u884c\u4e3a\u662f\u5148\u505c\u6b62\u518d\u542f\u52a8\u3002\n        \"\"\"\n        self.stop()\n        self.start()\n\n    def get_config(self) -&gt; dict[str, Any]:\n        \"\"\"\u83b7\u53d6\u5f53\u524d\u914d\u7f6e.\n\n        Returns:\n            \u914d\u7f6e\u5b57\u5178\u7684\u526f\u672c\n        \"\"\"\n        return self._config.copy() if self._config else {}\n\n    def validate_config(self, config: dict[str, Any] | None = None) -&gt; bool:\n        \"\"\"\u9a8c\u8bc1\u914d\u7f6e - \u9ed8\u8ba4\u5b9e\u73b0.\n\n        \u9ed8\u8ba4\u603b\u662f\u8fd4\u56de True\uff0c\u5b50\u7c7b\u5e94\u8986\u76d6\u6b64\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u7684\u9a8c\u8bc1\u903b\u8f91\u3002\n\n        Args:\n            config: \u5f85\u9a8c\u8bc1\u7684\u914d\u7f6e\uff08\u53ef\u9009\uff09\n\n        Returns:\n            \u9a8c\u8bc1\u662f\u5426\u901a\u8fc7\n        \"\"\"\n        return True\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule-attributes","title":"Attributes","text":""},{"location":"api/abc/#symphra_modules.abc.BaseModule.metadata","title":"<code>metadata</code>  <code>abstractmethod</code> <code>property</code>","text":"<p>\u83b7\u53d6\u6a21\u5757\u5143\u6570\u636e - \u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0.</p>"},{"location":"api/abc/#symphra_modules.abc.BaseModule-functions","title":"Functions","text":""},{"location":"api/abc/#symphra_modules.abc.BaseModule.__init__","title":"<code>__init__(config=None)</code>","text":"<p>\u521d\u59cb\u5316\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>config</code> <code>dict[str, Any] | None</code> <p>\u521d\u59cb\u914d\u7f6e\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def __init__(self, config: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u6a21\u5757.\n\n    Args:\n        config: \u521d\u59cb\u914d\u7f6e\uff08\u53ef\u9009\uff09\n    \"\"\"\n    self._config = config or {}\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule.bootstrap","title":"<code>bootstrap()</code>","text":"<p>\u6a21\u5757\u5f15\u5bfc\uff0c\u6ce8\u518c\u4f9d\u8d56\u7b49\u64cd\u4f5c.</p> <p>\u9ed8\u8ba4\u5b9e\u73b0\u4e3a\u7a7a\uff0c\u5b50\u7c7b\u53ef\u8986\u76d6\u6b64\u65b9\u6cd5\u6267\u884c\u521d\u59cb\u5316\u903b\u8f91\u3002</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def bootstrap(self) -&gt; None:\n    \"\"\"\u6a21\u5757\u5f15\u5bfc\uff0c\u6ce8\u518c\u4f9d\u8d56\u7b49\u64cd\u4f5c.\n\n    \u9ed8\u8ba4\u5b9e\u73b0\u4e3a\u7a7a\uff0c\u5b50\u7c7b\u53ef\u8986\u76d6\u6b64\u65b9\u6cd5\u6267\u884c\u521d\u59cb\u5316\u903b\u8f91\u3002\n    \"\"\"\n    pass\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule.configure","title":"<code>configure(config=None)</code>","text":"<p>\u914d\u7f6e\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>config</code> <code>dict[str, Any] | None</code> <p>\u914d\u7f6e\u5b57\u5178\uff08\u53ef\u9009\uff09</p> <code>None</code> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleConfigError</code> <p>\u914d\u7f6e\u9a8c\u8bc1\u5931\u8d25\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def configure(self, config: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u914d\u7f6e\u6a21\u5757.\n\n    Args:\n        config: \u914d\u7f6e\u5b57\u5178\uff08\u53ef\u9009\uff09\n\n    Raises:\n        ModuleConfigError: \u914d\u7f6e\u9a8c\u8bc1\u5931\u8d25\u65f6\u629b\u51fa\n    \"\"\"\n    if config and self.validate_config(config):\n        self._config.update(config)\n    elif config:\n        from symphra_modules.exceptions import ModuleConfigError\n\n        raise ModuleConfigError(\n            f\"\u914d\u7f6e\u9a8c\u8bc1\u5931\u8d25: {self.metadata.name}\",\n            module_name=self.metadata.name,\n        )\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule.get_config","title":"<code>get_config()</code>","text":"<p>\u83b7\u53d6\u5f53\u524d\u914d\u7f6e.</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>dict[str, Any]</code> <p>\u914d\u7f6e\u5b57\u5178\u7684\u526f\u672c</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def get_config(self) -&gt; dict[str, Any]:\n    \"\"\"\u83b7\u53d6\u5f53\u524d\u914d\u7f6e.\n\n    Returns:\n        \u914d\u7f6e\u5b57\u5178\u7684\u526f\u672c\n    \"\"\"\n    return self._config.copy() if self._config else {}\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule.install","title":"<code>install(config=None)</code>","text":"<p>\u5b89\u88c5\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>config</code> <code>dict[str, Any] | None</code> <p>\u5b89\u88c5\u914d\u7f6e\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def install(self, config: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u5b89\u88c5\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n    Args:\n        config: \u5b89\u88c5\u914d\u7f6e\uff08\u53ef\u9009\uff09\n    \"\"\"\n    if config:\n        self.configure(config)\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule.reload","title":"<code>reload()</code>","text":"<p>\u91cd\u8f7d\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.</p> <p>\u9ed8\u8ba4\u884c\u4e3a\u662f\u5148\u505c\u6b62\u518d\u542f\u52a8\u3002</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def reload(self) -&gt; None:\n    \"\"\"\u91cd\u8f7d\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n    \u9ed8\u8ba4\u884c\u4e3a\u662f\u5148\u505c\u6b62\u518d\u542f\u52a8\u3002\n    \"\"\"\n    self.stop()\n    self.start()\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule.start","title":"<code>start()</code>","text":"<p>\u542f\u52a8\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.</p> <p>\u5b50\u7c7b\u5e94\u8986\u76d6\u6b64\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u7684\u542f\u52a8\u903b\u8f91\u3002</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def start(self) -&gt; None:\n    \"\"\"\u542f\u52a8\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n    \u5b50\u7c7b\u5e94\u8986\u76d6\u6b64\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u7684\u542f\u52a8\u903b\u8f91\u3002\n    \"\"\"\n    pass\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule.stop","title":"<code>stop()</code>","text":"<p>\u505c\u6b62\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.</p> <p>\u5b50\u7c7b\u5e94\u8986\u76d6\u6b64\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u7684\u505c\u6b62\u903b\u8f91\u3002</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def stop(self) -&gt; None:\n    \"\"\"\u505c\u6b62\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n    \u5b50\u7c7b\u5e94\u8986\u76d6\u6b64\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u7684\u505c\u6b62\u903b\u8f91\u3002\n    \"\"\"\n    pass\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule.uninstall","title":"<code>uninstall()</code>","text":"<p>\u5378\u8f7d\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.</p> <p>\u9ed8\u8ba4\u884c\u4e3a\u662f\u5148\u505c\u6b62\u6a21\u5757\u3002</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def uninstall(self) -&gt; None:\n    \"\"\"\u5378\u8f7d\u6a21\u5757\u7684\u9ed8\u8ba4\u5b9e\u73b0.\n\n    \u9ed8\u8ba4\u884c\u4e3a\u662f\u5148\u505c\u6b62\u6a21\u5757\u3002\n    \"\"\"\n    self.stop()\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.BaseModule.validate_config","title":"<code>validate_config(config=None)</code>","text":"<p>\u9a8c\u8bc1\u914d\u7f6e - \u9ed8\u8ba4\u5b9e\u73b0.</p> <p>\u9ed8\u8ba4\u603b\u662f\u8fd4\u56de True\uff0c\u5b50\u7c7b\u5e94\u8986\u76d6\u6b64\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u7684\u9a8c\u8bc1\u903b\u8f91\u3002</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>config</code> <code>dict[str, Any] | None</code> <p>\u5f85\u9a8c\u8bc1\u7684\u914d\u7f6e\uff08\u53ef\u9009\uff09</p> <code>None</code> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>bool</code> <p>\u9a8c\u8bc1\u662f\u5426\u901a\u8fc7</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def validate_config(self, config: dict[str, Any] | None = None) -&gt; bool:\n    \"\"\"\u9a8c\u8bc1\u914d\u7f6e - \u9ed8\u8ba4\u5b9e\u73b0.\n\n    \u9ed8\u8ba4\u603b\u662f\u8fd4\u56de True\uff0c\u5b50\u7c7b\u5e94\u8986\u76d6\u6b64\u65b9\u6cd5\u5b9e\u73b0\u5b9e\u9645\u7684\u9a8c\u8bc1\u903b\u8f91\u3002\n\n    Args:\n        config: \u5f85\u9a8c\u8bc1\u7684\u914d\u7f6e\uff08\u53ef\u9009\uff09\n\n    Returns:\n        \u9a8c\u8bc1\u662f\u5426\u901a\u8fc7\n    \"\"\"\n    return True\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface","title":"<code>ModuleInterface</code>","text":"<p>               Bases: <code>Protocol</code></p> <p>\u6a21\u5757\u63a5\u53e3\u534f\u8bae.</p> Source code in <code>src/symphra_modules/abc.py</code> <pre><code>@runtime_checkable\nclass ModuleInterface(Protocol):\n    \"\"\"\u6a21\u5757\u63a5\u53e3\u534f\u8bae.\"\"\"\n\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        \"\"\"\u83b7\u53d6\u6a21\u5757\u5143\u6570\u636e.\"\"\"\n        ...\n\n    def bootstrap(self) -&gt; None:\n        \"\"\"\u6a21\u5757\u5f15\u5bfc\uff0c\u6ce8\u518c\u4f9d\u8d56\u7b49\u64cd\u4f5c.\"\"\"\n        ...\n\n    def install(self, config: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u5b89\u88c5\u6a21\u5757.\"\"\"\n        ...\n\n    def uninstall(self) -&gt; None:\n        \"\"\"\u5378\u8f7d\u6a21\u5757.\"\"\"\n        ...\n\n    def configure(self, config: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u914d\u7f6e\u6a21\u5757.\"\"\"\n        ...\n\n    def start(self) -&gt; None:\n        \"\"\"\u542f\u52a8\u6a21\u5757.\"\"\"\n        ...\n\n    def stop(self) -&gt; None:\n        \"\"\"\u505c\u6b62\u6a21\u5757.\"\"\"\n        ...\n\n    def reload(self) -&gt; None:\n        \"\"\"\u91cd\u8f7d\u6a21\u5757.\"\"\"\n        ...\n\n    def get_config(self) -&gt; dict[str, Any]:\n        \"\"\"\u83b7\u53d6\u5f53\u524d\u914d\u7f6e.\"\"\"\n        ...\n\n    def validate_config(self, config: dict[str, Any] | None = None) -&gt; bool:\n        \"\"\"\u9a8c\u8bc1\u914d\u7f6e.\"\"\"\n        ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface-attributes","title":"Attributes","text":""},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.metadata","title":"<code>metadata</code>  <code>property</code>","text":"<p>\u83b7\u53d6\u6a21\u5757\u5143\u6570\u636e.</p>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface-functions","title":"Functions","text":""},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.bootstrap","title":"<code>bootstrap()</code>","text":"<p>\u6a21\u5757\u5f15\u5bfc\uff0c\u6ce8\u518c\u4f9d\u8d56\u7b49\u64cd\u4f5c.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def bootstrap(self) -&gt; None:\n    \"\"\"\u6a21\u5757\u5f15\u5bfc\uff0c\u6ce8\u518c\u4f9d\u8d56\u7b49\u64cd\u4f5c.\"\"\"\n    ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.configure","title":"<code>configure(config=None)</code>","text":"<p>\u914d\u7f6e\u6a21\u5757.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def configure(self, config: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u914d\u7f6e\u6a21\u5757.\"\"\"\n    ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.get_config","title":"<code>get_config()</code>","text":"<p>\u83b7\u53d6\u5f53\u524d\u914d\u7f6e.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def get_config(self) -&gt; dict[str, Any]:\n    \"\"\"\u83b7\u53d6\u5f53\u524d\u914d\u7f6e.\"\"\"\n    ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.install","title":"<code>install(config=None)</code>","text":"<p>\u5b89\u88c5\u6a21\u5757.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def install(self, config: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u5b89\u88c5\u6a21\u5757.\"\"\"\n    ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.reload","title":"<code>reload()</code>","text":"<p>\u91cd\u8f7d\u6a21\u5757.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def reload(self) -&gt; None:\n    \"\"\"\u91cd\u8f7d\u6a21\u5757.\"\"\"\n    ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.start","title":"<code>start()</code>","text":"<p>\u542f\u52a8\u6a21\u5757.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def start(self) -&gt; None:\n    \"\"\"\u542f\u52a8\u6a21\u5757.\"\"\"\n    ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.stop","title":"<code>stop()</code>","text":"<p>\u505c\u6b62\u6a21\u5757.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def stop(self) -&gt; None:\n    \"\"\"\u505c\u6b62\u6a21\u5757.\"\"\"\n    ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.uninstall","title":"<code>uninstall()</code>","text":"<p>\u5378\u8f7d\u6a21\u5757.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def uninstall(self) -&gt; None:\n    \"\"\"\u5378\u8f7d\u6a21\u5757.\"\"\"\n    ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.ModuleInterface.validate_config","title":"<code>validate_config(config=None)</code>","text":"<p>\u9a8c\u8bc1\u914d\u7f6e.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def validate_config(self, config: dict[str, Any] | None = None) -&gt; bool:\n    \"\"\"\u9a8c\u8bc1\u914d\u7f6e.\"\"\"\n    ...\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc-functions","title":"Functions","text":""},{"location":"api/abc/#symphra_modules.abc.call_module_method","title":"<code>call_module_method(module, method_name, *args, **kwargs)</code>  <code>async</code>","text":"<p>\u7edf\u4e00\u8c03\u7528\u6a21\u5757\u65b9\u6cd5\uff08\u81ea\u52a8\u68c0\u6d4b\u540c\u6b65/\u5f02\u6b65\uff09.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module</code> <code>object</code> <p>\u6a21\u5757\u5b9e\u4f8b</p> \u5fc5\u9700 <code>method_name</code> <code>str</code> <p>\u65b9\u6cd5\u540d\u79f0</p> \u5fc5\u9700 <code>*args</code> <code>Any</code> <p>\u4f4d\u7f6e\u53c2\u6570</p> <code>()</code> <code>**kwargs</code> <code>Any</code> <p>\u5173\u952e\u5b57\u53c2\u6570</p> <code>{}</code> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>Any</code> <p>\u65b9\u6cd5\u8fd4\u56de\u503c</p> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>AttributeError</code> <p>\u65b9\u6cd5\u4e0d\u5b58\u5728\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>async def call_module_method(\n    module: object,\n    method_name: str,\n    *args: Any,\n    **kwargs: Any,\n) -&gt; Any:\n    \"\"\"\u7edf\u4e00\u8c03\u7528\u6a21\u5757\u65b9\u6cd5\uff08\u81ea\u52a8\u68c0\u6d4b\u540c\u6b65/\u5f02\u6b65\uff09.\n\n    Args:\n        module: \u6a21\u5757\u5b9e\u4f8b\n        method_name: \u65b9\u6cd5\u540d\u79f0\n        *args: \u4f4d\u7f6e\u53c2\u6570\n        **kwargs: \u5173\u952e\u5b57\u53c2\u6570\n\n    Returns:\n        \u65b9\u6cd5\u8fd4\u56de\u503c\n\n    Raises:\n        AttributeError: \u65b9\u6cd5\u4e0d\u5b58\u5728\u65f6\u629b\u51fa\n    \"\"\"\n    if not hasattr(module, method_name):\n        raise AttributeError(f\"\u6a21\u5757 {type(module).__name__} \u6ca1\u6709\u65b9\u6cd5 {method_name}\")\n\n    method = getattr(module, method_name)\n\n    # \u5982\u679c\u662f\u534f\u7a0b\u51fd\u6570\uff0c\u76f4\u63a5 await\n    if inspect.iscoroutinefunction(method):\n        return await method(*args, **kwargs)\n\n    # \u5982\u679c\u662f\u540c\u6b65\u51fd\u6570\uff0c\u5728\u6267\u884c\u5668\u4e2d\u8fd0\u884c\n    loop = asyncio.get_running_loop()\n    return await loop.run_in_executor(None, lambda: method(*args, **kwargs))\n</code></pre>"},{"location":"api/abc/#symphra_modules.abc.is_async_module","title":"<code>is_async_module(module)</code>","text":"<p>\u68c0\u6d4b\u6a21\u5757\u662f\u5426\u5b9e\u73b0\u4e86\u5f02\u6b65\u65b9\u6cd5.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module</code> <code>object</code> <p>\u8981\u68c0\u6d4b\u7684\u6a21\u5757\u5b9e\u4f8b</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>bool</code> <p>\u5982\u679c\u6a21\u5757\u7684\u6838\u5fc3\u65b9\u6cd5\u662f\u534f\u7a0b\u51fd\u6570\u5219\u8fd4\u56de True</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/abc.py</code> <pre><code>def is_async_module(module: object) -&gt; bool:\n    \"\"\"\u68c0\u6d4b\u6a21\u5757\u662f\u5426\u5b9e\u73b0\u4e86\u5f02\u6b65\u65b9\u6cd5.\n\n    Args:\n        module: \u8981\u68c0\u6d4b\u7684\u6a21\u5757\u5b9e\u4f8b\n\n    Returns:\n        \u5982\u679c\u6a21\u5757\u7684\u6838\u5fc3\u65b9\u6cd5\u662f\u534f\u7a0b\u51fd\u6570\u5219\u8fd4\u56de True\n    \"\"\"\n    # \u68c0\u67e5\u5173\u952e\u65b9\u6cd5\u662f\u5426\u4e3a\u534f\u7a0b\u51fd\u6570\n    key_methods = [\"install\", \"uninstall\", \"start\", \"stop\", \"configure\"]\n    for method_name in key_methods:\n        if hasattr(module, method_name):\n            method = getattr(module, method_name)\n            if inspect.iscoroutinefunction(method):\n                return True\n    return False\n</code></pre>"},{"location":"api/config/","title":"\u914d\u7f6e","text":""},{"location":"api/config/#symphra_modules.config","title":"<code>config</code>","text":"<p>\u6a21\u5757\u914d\u7f6e\u548c\u5143\u6570\u636e\u5b9a\u4e49.</p>"},{"location":"api/config/#symphra_modules.config-classes","title":"Classes","text":""},{"location":"api/config/#symphra_modules.config.ModuleInfo","title":"<code>ModuleInfo</code>  <code>dataclass</code>","text":"<p>\u6a21\u5757\u4fe1\u606f.</p> Source code in <code>src/symphra_modules/config.py</code> <pre><code>@dataclass\nclass ModuleInfo:\n    \"\"\"\u6a21\u5757\u4fe1\u606f.\"\"\"\n\n    metadata: ModuleMetadata  # \u5143\u6570\u636e\n    state: ModuleState = ModuleState.NOT_INSTALLED  # \u5f53\u524d\u72b6\u6001\n    installed_at: datetime | None = None  # \u5b89\u88c5\u65f6\u95f4\n    loaded_at: datetime | None = None  # \u52a0\u8f7d\u65f6\u95f4\n    started_at: datetime | None = None  # \u542f\u52a8\u65f6\u95f4\n    config: dict[str, Any] = field(default_factory=dict)  # \u5f53\u524d\u914d\u7f6e\n</code></pre>"},{"location":"api/config/#symphra_modules.config.ModuleMetadata","title":"<code>ModuleMetadata</code>  <code>dataclass</code>","text":"<p>\u6a21\u5757\u5143\u6570\u636e.</p> Source code in <code>src/symphra_modules/config.py</code> <pre><code>@dataclass\nclass ModuleMetadata:\n    \"\"\"\u6a21\u5757\u5143\u6570\u636e.\"\"\"\n\n    name: str  # \u6a21\u5757\u540d\u79f0\n    type: str = \"module\"  # \u6a21\u5757\u7c7b\u578b\n    category: str | None = None  # \u6a21\u5757\u7c7b\u522b\uff0c\u9ed8\u8ba4\u4e3a\u672a\u5206\u7c7b\n    tags: list[str] = field(default_factory=list)  # \u6807\u7b7e\n    version: str = \"0.0.1\"  # \u7248\u672c\u53f7\n    description: str = \"\"  # \u63cf\u8ff0\u4fe1\u606f\n    author: list[dict[str, str]] = field(default_factory=list)  # \u4f5c\u8005\u4fe1\u606f\n    dependencies: list[str] = field(default_factory=list)  # \u5fc5\u9700\u4f9d\u8d56\n    optional_dependencies: list[str] = field(default_factory=list)  # \u53ef\u9009\u4f9d\u8d56\n    config_schema: dict[str, Any] | None = None  # \u914d\u7f6e\u6a21\u5f0f\n</code></pre>"},{"location":"api/config/#symphra_modules.config.ModuleState","title":"<code>ModuleState</code>","text":"<p>               Bases: <code>StrEnum</code></p> <p>\u6a21\u5757\u72b6\u6001\u679a\u4e3e.</p> Source code in <code>src/symphra_modules/config.py</code> <pre><code>class ModuleState(StrEnum):\n    \"\"\"\u6a21\u5757\u72b6\u6001\u679a\u4e3e.\"\"\"\n\n    NOT_INSTALLED = \"not_installed\"  # \u672a\u5b89\u88c5\n    LOADED = \"loaded\"  # \u5df2\u52a0\u8f7d\n    INSTALLED = \"installed\"  # \u5df2\u5b89\u88c5\n    STARTED = \"started\"  # \u5df2\u542f\u52a8\n    STOPPED = \"stopped\"  # \u5df2\u505c\u6b62\n    ERROR = \"error\"  # \u9519\u8bef\n</code></pre>"},{"location":"api/events/","title":"\u4e8b\u4ef6\u7cfb\u7edf","text":""},{"location":"api/events/#symphra_modules.events","title":"<code>events</code>","text":"<p>\u4e8b\u4ef6\u7cfb\u7edf.</p>"},{"location":"api/events/#symphra_modules.events-classes","title":"Classes","text":""},{"location":"api/events/#symphra_modules.events.Event","title":"<code>Event</code>  <code>dataclass</code>","text":"<p>\u4e8b\u4ef6\u57fa\u7c7b.</p> Source code in <code>src/symphra_modules/events/types.py</code> <pre><code>@dataclass\nclass Event:\n    \"\"\"\u4e8b\u4ef6\u57fa\u7c7b.\"\"\"\n\n    event_type: str  # \u4e8b\u4ef6\u7c7b\u578b\n    module_name: str  # \u6a21\u5757\u540d\u79f0\n    timestamp: datetime  # \u65f6\u95f4\u6233\n    data: dict[str, Any] | None = None  # \u9644\u52a0\u6570\u636e\n</code></pre>"},{"location":"api/events/#symphra_modules.events.EventBus","title":"<code>EventBus</code>","text":"<p>\u4e8b\u4ef6\u603b\u7ebf - \u7b80\u5355\u7684\u53d1\u5e03/\u8ba2\u9605\u5b9e\u73b0.</p> Source code in <code>src/symphra_modules/events/bus.py</code> <pre><code>class EventBus:\n    \"\"\"\u4e8b\u4ef6\u603b\u7ebf - \u7b80\u5355\u7684\u53d1\u5e03/\u8ba2\u9605\u5b9e\u73b0.\"\"\"\n\n    def __init__(self) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u4e8b\u4ef6\u603b\u7ebf.\"\"\"\n        self._handlers: dict[str, list[EventHandler]] = defaultdict(list)\n        self._wildcard_handlers: list[EventHandler] = []\n\n    def subscribe(self, event_type: str, handler: EventHandler) -&gt; None:\n        \"\"\"\u8ba2\u9605\u4e8b\u4ef6.\n\n        Args:\n            event_type: \u4e8b\u4ef6\u7c7b\u578b\uff0c\u4f7f\u7528 \"*\" \u8ba2\u9605\u6240\u6709\u4e8b\u4ef6\n            handler: \u4e8b\u4ef6\u5904\u7406\u5668\u51fd\u6570\n\n        Raises:\n            EventError: \u5904\u7406\u5668\u4e0d\u53ef\u8c03\u7528\u65f6\u629b\u51fa\n        \"\"\"\n        if not callable(handler):\n            raise EventError(\"\u4e8b\u4ef6\u5904\u7406\u5668\u5fc5\u987b\u662f\u53ef\u8c03\u7528\u5bf9\u8c61\")\n\n        if event_type == \"*\":\n            self._wildcard_handlers.append(handler)\n        else:\n            self._handlers[event_type].append(handler)\n\n        logger.debug(f\"\u8ba2\u9605\u4e8b\u4ef6: {event_type}\")\n\n    def unsubscribe(self, event_type: str, handler: EventHandler) -&gt; None:\n        \"\"\"\u53d6\u6d88\u8ba2\u9605\u4e8b\u4ef6.\n\n        Args:\n            event_type: \u4e8b\u4ef6\u7c7b\u578b\n            handler: \u4e8b\u4ef6\u5904\u7406\u5668\u51fd\u6570\n        \"\"\"\n        if event_type == \"*\":\n            if handler in self._wildcard_handlers:\n                self._wildcard_handlers.remove(handler)\n        else:\n            if handler in self._handlers[event_type]:\n                self._handlers[event_type].remove(handler)\n\n        logger.debug(f\"\u53d6\u6d88\u8ba2\u9605\u4e8b\u4ef6: {event_type}\")\n\n    def publish(self, event: Event) -&gt; None:\n        \"\"\"\u53d1\u5e03\u4e8b\u4ef6.\n\n        Args:\n            event: \u4e8b\u4ef6\u5bf9\u8c61\n        \"\"\"\n        logger.debug(f\"\u53d1\u5e03\u4e8b\u4ef6: {event.event_type} - {event.module_name}\")\n\n        # \u8c03\u7528\u901a\u914d\u7b26\u5904\u7406\u5668\n        for handler in self._wildcard_handlers:\n            self._call_handler(handler, event)\n\n        # \u8c03\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u5904\u7406\u5668\n        if event.event_type in self._handlers:\n            for handler in self._handlers[event.event_type]:\n                self._call_handler(handler, event)\n\n    def _call_handler(self, handler: EventHandler, event: Event) -&gt; None:\n        \"\"\"\u8c03\u7528\u4e8b\u4ef6\u5904\u7406\u5668.\n\n        Args:\n            handler: \u4e8b\u4ef6\u5904\u7406\u5668\n            event: \u4e8b\u4ef6\u5bf9\u8c61\n        \"\"\"\n        try:\n            handler(event)\n        except Exception as e:\n            logger.error(f\"\u4e8b\u4ef6\u5904\u7406\u5668\u6267\u884c\u5931\u8d25: {handler.__name__} - {e}\")\n\n    def clear(self) -&gt; None:\n        \"\"\"\u6e05\u9664\u6240\u6709\u8ba2\u9605.\"\"\"\n        self._handlers.clear()\n        self._wildcard_handlers.clear()\n        logger.debug(\"\u5df2\u6e05\u9664\u6240\u6709\u4e8b\u4ef6\u8ba2\u9605\")\n\n    def get_subscribers(self, event_type: str) -&gt; list[EventHandler]:\n        \"\"\"\u83b7\u53d6\u6307\u5b9a\u4e8b\u4ef6\u7c7b\u578b\u7684\u8ba2\u9605\u8005.\n\n        Args:\n            event_type: \u4e8b\u4ef6\u7c7b\u578b\n\n        Returns:\n            \u8ba2\u9605\u8005\u5217\u8868\n        \"\"\"\n        if event_type == \"*\":\n            return self._wildcard_handlers.copy()\n        return self._handlers.get(event_type, []).copy()\n</code></pre>"},{"location":"api/events/#symphra_modules.events.EventBus-functions","title":"Functions","text":""},{"location":"api/events/#symphra_modules.events.EventBus.__init__","title":"<code>__init__()</code>","text":"<p>\u521d\u59cb\u5316\u4e8b\u4ef6\u603b\u7ebf.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/bus.py</code> <pre><code>def __init__(self) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u4e8b\u4ef6\u603b\u7ebf.\"\"\"\n    self._handlers: dict[str, list[EventHandler]] = defaultdict(list)\n    self._wildcard_handlers: list[EventHandler] = []\n</code></pre>"},{"location":"api/events/#symphra_modules.events.EventBus.clear","title":"<code>clear()</code>","text":"<p>\u6e05\u9664\u6240\u6709\u8ba2\u9605.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/bus.py</code> <pre><code>def clear(self) -&gt; None:\n    \"\"\"\u6e05\u9664\u6240\u6709\u8ba2\u9605.\"\"\"\n    self._handlers.clear()\n    self._wildcard_handlers.clear()\n    logger.debug(\"\u5df2\u6e05\u9664\u6240\u6709\u4e8b\u4ef6\u8ba2\u9605\")\n</code></pre>"},{"location":"api/events/#symphra_modules.events.EventBus.get_subscribers","title":"<code>get_subscribers(event_type)</code>","text":"<p>\u83b7\u53d6\u6307\u5b9a\u4e8b\u4ef6\u7c7b\u578b\u7684\u8ba2\u9605\u8005.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>event_type</code> <code>str</code> <p>\u4e8b\u4ef6\u7c7b\u578b</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[EventHandler]</code> <p>\u8ba2\u9605\u8005\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/bus.py</code> <pre><code>def get_subscribers(self, event_type: str) -&gt; list[EventHandler]:\n    \"\"\"\u83b7\u53d6\u6307\u5b9a\u4e8b\u4ef6\u7c7b\u578b\u7684\u8ba2\u9605\u8005.\n\n    Args:\n        event_type: \u4e8b\u4ef6\u7c7b\u578b\n\n    Returns:\n        \u8ba2\u9605\u8005\u5217\u8868\n    \"\"\"\n    if event_type == \"*\":\n        return self._wildcard_handlers.copy()\n    return self._handlers.get(event_type, []).copy()\n</code></pre>"},{"location":"api/events/#symphra_modules.events.EventBus.publish","title":"<code>publish(event)</code>","text":"<p>\u53d1\u5e03\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>event</code> <code>Event</code> <p>\u4e8b\u4ef6\u5bf9\u8c61</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/bus.py</code> <pre><code>def publish(self, event: Event) -&gt; None:\n    \"\"\"\u53d1\u5e03\u4e8b\u4ef6.\n\n    Args:\n        event: \u4e8b\u4ef6\u5bf9\u8c61\n    \"\"\"\n    logger.debug(f\"\u53d1\u5e03\u4e8b\u4ef6: {event.event_type} - {event.module_name}\")\n\n    # \u8c03\u7528\u901a\u914d\u7b26\u5904\u7406\u5668\n    for handler in self._wildcard_handlers:\n        self._call_handler(handler, event)\n\n    # \u8c03\u7528\u7279\u5b9a\u7c7b\u578b\u7684\u5904\u7406\u5668\n    if event.event_type in self._handlers:\n        for handler in self._handlers[event.event_type]:\n            self._call_handler(handler, event)\n</code></pre>"},{"location":"api/events/#symphra_modules.events.EventBus.subscribe","title":"<code>subscribe(event_type, handler)</code>","text":"<p>\u8ba2\u9605\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>event_type</code> <code>str</code> <p>\u4e8b\u4ef6\u7c7b\u578b\uff0c\u4f7f\u7528 \"*\" \u8ba2\u9605\u6240\u6709\u4e8b\u4ef6</p> \u5fc5\u9700 <code>handler</code> <code>EventHandler</code> <p>\u4e8b\u4ef6\u5904\u7406\u5668\u51fd\u6570</p> \u5fc5\u9700 <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>EventError</code> <p>\u5904\u7406\u5668\u4e0d\u53ef\u8c03\u7528\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/bus.py</code> <pre><code>def subscribe(self, event_type: str, handler: EventHandler) -&gt; None:\n    \"\"\"\u8ba2\u9605\u4e8b\u4ef6.\n\n    Args:\n        event_type: \u4e8b\u4ef6\u7c7b\u578b\uff0c\u4f7f\u7528 \"*\" \u8ba2\u9605\u6240\u6709\u4e8b\u4ef6\n        handler: \u4e8b\u4ef6\u5904\u7406\u5668\u51fd\u6570\n\n    Raises:\n        EventError: \u5904\u7406\u5668\u4e0d\u53ef\u8c03\u7528\u65f6\u629b\u51fa\n    \"\"\"\n    if not callable(handler):\n        raise EventError(\"\u4e8b\u4ef6\u5904\u7406\u5668\u5fc5\u987b\u662f\u53ef\u8c03\u7528\u5bf9\u8c61\")\n\n    if event_type == \"*\":\n        self._wildcard_handlers.append(handler)\n    else:\n        self._handlers[event_type].append(handler)\n\n    logger.debug(f\"\u8ba2\u9605\u4e8b\u4ef6: {event_type}\")\n</code></pre>"},{"location":"api/events/#symphra_modules.events.EventBus.unsubscribe","title":"<code>unsubscribe(event_type, handler)</code>","text":"<p>\u53d6\u6d88\u8ba2\u9605\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>event_type</code> <code>str</code> <p>\u4e8b\u4ef6\u7c7b\u578b</p> \u5fc5\u9700 <code>handler</code> <code>EventHandler</code> <p>\u4e8b\u4ef6\u5904\u7406\u5668\u51fd\u6570</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/bus.py</code> <pre><code>def unsubscribe(self, event_type: str, handler: EventHandler) -&gt; None:\n    \"\"\"\u53d6\u6d88\u8ba2\u9605\u4e8b\u4ef6.\n\n    Args:\n        event_type: \u4e8b\u4ef6\u7c7b\u578b\n        handler: \u4e8b\u4ef6\u5904\u7406\u5668\u51fd\u6570\n    \"\"\"\n    if event_type == \"*\":\n        if handler in self._wildcard_handlers:\n            self._wildcard_handlers.remove(handler)\n    else:\n        if handler in self._handlers[event_type]:\n            self._handlers[event_type].remove(handler)\n\n    logger.debug(f\"\u53d6\u6d88\u8ba2\u9605\u4e8b\u4ef6: {event_type}\")\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleErrorEvent","title":"<code>ModuleErrorEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>Event</code></p> <p>\u6a21\u5757\u9519\u8bef\u4e8b\u4ef6.</p> Source code in <code>src/symphra_modules/events/types.py</code> <pre><code>@dataclass\nclass ModuleErrorEvent(Event):\n    \"\"\"\u6a21\u5757\u9519\u8bef\u4e8b\u4ef6.\"\"\"\n\n    def __init__(\n        self,\n        module_name: str,\n        error: Exception,\n        data: dict[str, Any] | None = None,\n    ) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u9519\u8bef\u4e8b\u4ef6.\n\n        Args:\n            module_name: \u6a21\u5757\u540d\u79f0\n            error: \u5f02\u5e38\u5bf9\u8c61\n            data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n        \"\"\"\n        error_data = data or {}\n        error_data[\"error\"] = str(error)\n        error_data[\"error_type\"] = type(error).__name__\n\n        super().__init__(\n            event_type=\"module.error\",\n            module_name=module_name,\n            timestamp=now(),\n            data=error_data,\n        )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleErrorEvent-functions","title":"Functions","text":""},{"location":"api/events/#symphra_modules.events.ModuleErrorEvent.__init__","title":"<code>__init__(module_name, error, data=None)</code>","text":"<p>\u521d\u59cb\u5316\u9519\u8bef\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module_name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>error</code> <code>Exception</code> <p>\u5f02\u5e38\u5bf9\u8c61</p> \u5fc5\u9700 <code>data</code> <code>dict[str, Any] | None</code> <p>\u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/types.py</code> <pre><code>def __init__(\n    self,\n    module_name: str,\n    error: Exception,\n    data: dict[str, Any] | None = None,\n) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u9519\u8bef\u4e8b\u4ef6.\n\n    Args:\n        module_name: \u6a21\u5757\u540d\u79f0\n        error: \u5f02\u5e38\u5bf9\u8c61\n        data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n    \"\"\"\n    error_data = data or {}\n    error_data[\"error\"] = str(error)\n    error_data[\"error_type\"] = type(error).__name__\n\n    super().__init__(\n        event_type=\"module.error\",\n        module_name=module_name,\n        timestamp=now(),\n        data=error_data,\n    )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleInstalledEvent","title":"<code>ModuleInstalledEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>Event</code></p> <p>\u6a21\u5757\u5b89\u88c5\u4e8b\u4ef6.</p> Source code in <code>src/symphra_modules/events/types.py</code> <pre><code>@dataclass\nclass ModuleInstalledEvent(Event):\n    \"\"\"\u6a21\u5757\u5b89\u88c5\u4e8b\u4ef6.\"\"\"\n\n    def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u5b89\u88c5\u4e8b\u4ef6.\n\n        Args:\n            module_name: \u6a21\u5757\u540d\u79f0\n            data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n        \"\"\"\n        super().__init__(\n            event_type=\"module.installed\",\n            module_name=module_name,\n            timestamp=now(),\n            data=data,\n        )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleInstalledEvent-functions","title":"Functions","text":""},{"location":"api/events/#symphra_modules.events.ModuleInstalledEvent.__init__","title":"<code>__init__(module_name, data=None)</code>","text":"<p>\u521d\u59cb\u5316\u5b89\u88c5\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module_name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>data</code> <code>dict[str, Any] | None</code> <p>\u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/types.py</code> <pre><code>def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u5b89\u88c5\u4e8b\u4ef6.\n\n    Args:\n        module_name: \u6a21\u5757\u540d\u79f0\n        data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n    \"\"\"\n    super().__init__(\n        event_type=\"module.installed\",\n        module_name=module_name,\n        timestamp=now(),\n        data=data,\n    )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleLoadedEvent","title":"<code>ModuleLoadedEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>Event</code></p> <p>\u6a21\u5757\u52a0\u8f7d\u4e8b\u4ef6.</p> Source code in <code>src/symphra_modules/events/types.py</code> <pre><code>@dataclass\nclass ModuleLoadedEvent(Event):\n    \"\"\"\u6a21\u5757\u52a0\u8f7d\u4e8b\u4ef6.\"\"\"\n\n    def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u52a0\u8f7d\u4e8b\u4ef6.\n\n        Args:\n            module_name: \u6a21\u5757\u540d\u79f0\n            data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n        \"\"\"\n        super().__init__(\n            event_type=\"module.loaded\",\n            module_name=module_name,\n            timestamp=now(),\n            data=data,\n        )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleLoadedEvent-functions","title":"Functions","text":""},{"location":"api/events/#symphra_modules.events.ModuleLoadedEvent.__init__","title":"<code>__init__(module_name, data=None)</code>","text":"<p>\u521d\u59cb\u5316\u52a0\u8f7d\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module_name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>data</code> <code>dict[str, Any] | None</code> <p>\u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/types.py</code> <pre><code>def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u52a0\u8f7d\u4e8b\u4ef6.\n\n    Args:\n        module_name: \u6a21\u5757\u540d\u79f0\n        data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n    \"\"\"\n    super().__init__(\n        event_type=\"module.loaded\",\n        module_name=module_name,\n        timestamp=now(),\n        data=data,\n    )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleStartedEvent","title":"<code>ModuleStartedEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>Event</code></p> <p>\u6a21\u5757\u542f\u52a8\u4e8b\u4ef6.</p> Source code in <code>src/symphra_modules/events/types.py</code> <pre><code>@dataclass\nclass ModuleStartedEvent(Event):\n    \"\"\"\u6a21\u5757\u542f\u52a8\u4e8b\u4ef6.\"\"\"\n\n    def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u542f\u52a8\u4e8b\u4ef6.\n\n        Args:\n            module_name: \u6a21\u5757\u540d\u79f0\n            data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n        \"\"\"\n        super().__init__(\n            event_type=\"module.started\",\n            module_name=module_name,\n            timestamp=now(),\n            data=data,\n        )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleStartedEvent-functions","title":"Functions","text":""},{"location":"api/events/#symphra_modules.events.ModuleStartedEvent.__init__","title":"<code>__init__(module_name, data=None)</code>","text":"<p>\u521d\u59cb\u5316\u542f\u52a8\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module_name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>data</code> <code>dict[str, Any] | None</code> <p>\u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/types.py</code> <pre><code>def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u542f\u52a8\u4e8b\u4ef6.\n\n    Args:\n        module_name: \u6a21\u5757\u540d\u79f0\n        data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n    \"\"\"\n    super().__init__(\n        event_type=\"module.started\",\n        module_name=module_name,\n        timestamp=now(),\n        data=data,\n    )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleStoppedEvent","title":"<code>ModuleStoppedEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>Event</code></p> <p>\u6a21\u5757\u505c\u6b62\u4e8b\u4ef6.</p> Source code in <code>src/symphra_modules/events/types.py</code> <pre><code>@dataclass\nclass ModuleStoppedEvent(Event):\n    \"\"\"\u6a21\u5757\u505c\u6b62\u4e8b\u4ef6.\"\"\"\n\n    def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u505c\u6b62\u4e8b\u4ef6.\n\n        Args:\n            module_name: \u6a21\u5757\u540d\u79f0\n            data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n        \"\"\"\n        super().__init__(\n            event_type=\"module.stopped\",\n            module_name=module_name,\n            timestamp=now(),\n            data=data,\n        )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleStoppedEvent-functions","title":"Functions","text":""},{"location":"api/events/#symphra_modules.events.ModuleStoppedEvent.__init__","title":"<code>__init__(module_name, data=None)</code>","text":"<p>\u521d\u59cb\u5316\u505c\u6b62\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module_name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>data</code> <code>dict[str, Any] | None</code> <p>\u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/types.py</code> <pre><code>def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u505c\u6b62\u4e8b\u4ef6.\n\n    Args:\n        module_name: \u6a21\u5757\u540d\u79f0\n        data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n    \"\"\"\n    super().__init__(\n        event_type=\"module.stopped\",\n        module_name=module_name,\n        timestamp=now(),\n        data=data,\n    )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleUninstalledEvent","title":"<code>ModuleUninstalledEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>Event</code></p> <p>\u6a21\u5757\u5378\u8f7d\u4e8b\u4ef6.</p> Source code in <code>src/symphra_modules/events/types.py</code> <pre><code>@dataclass\nclass ModuleUninstalledEvent(Event):\n    \"\"\"\u6a21\u5757\u5378\u8f7d\u4e8b\u4ef6.\"\"\"\n\n    def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u5378\u8f7d\u4e8b\u4ef6.\n\n        Args:\n            module_name: \u6a21\u5757\u540d\u79f0\n            data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n        \"\"\"\n        super().__init__(\n            event_type=\"module.uninstalled\",\n            module_name=module_name,\n            timestamp=now(),\n            data=data,\n        )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleUninstalledEvent-functions","title":"Functions","text":""},{"location":"api/events/#symphra_modules.events.ModuleUninstalledEvent.__init__","title":"<code>__init__(module_name, data=None)</code>","text":"<p>\u521d\u59cb\u5316\u5378\u8f7d\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module_name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>data</code> <code>dict[str, Any] | None</code> <p>\u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/types.py</code> <pre><code>def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u5378\u8f7d\u4e8b\u4ef6.\n\n    Args:\n        module_name: \u6a21\u5757\u540d\u79f0\n        data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n    \"\"\"\n    super().__init__(\n        event_type=\"module.uninstalled\",\n        module_name=module_name,\n        timestamp=now(),\n        data=data,\n    )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleUnregisteredEvent","title":"<code>ModuleUnregisteredEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>Event</code></p> <p>\u6a21\u5757\u6ce8\u9500\u4e8b\u4ef6.</p> Source code in <code>src/symphra_modules/events/types.py</code> <pre><code>@dataclass\nclass ModuleUnregisteredEvent(Event):\n    \"\"\"\u6a21\u5757\u6ce8\u9500\u4e8b\u4ef6.\"\"\"\n\n    def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u6ce8\u9500\u4e8b\u4ef6.\n\n        Args:\n            module_name: \u6a21\u5757\u540d\u79f0\n            data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n        \"\"\"\n        super().__init__(\n            event_type=\"module.unregistered\",\n            module_name=module_name,\n            timestamp=now(),\n            data=data,\n        )\n</code></pre>"},{"location":"api/events/#symphra_modules.events.ModuleUnregisteredEvent-functions","title":"Functions","text":""},{"location":"api/events/#symphra_modules.events.ModuleUnregisteredEvent.__init__","title":"<code>__init__(module_name, data=None)</code>","text":"<p>\u521d\u59cb\u5316\u6ce8\u9500\u4e8b\u4ef6.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module_name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>data</code> <code>dict[str, Any] | None</code> <p>\u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/events/types.py</code> <pre><code>def __init__(self, module_name: str, data: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u6ce8\u9500\u4e8b\u4ef6.\n\n    Args:\n        module_name: \u6a21\u5757\u540d\u79f0\n        data: \u9644\u52a0\u6570\u636e\uff08\u53ef\u9009\uff09\n    \"\"\"\n    super().__init__(\n        event_type=\"module.unregistered\",\n        module_name=module_name,\n        timestamp=now(),\n        data=data,\n    )\n</code></pre>"},{"location":"api/exceptions/","title":"\u5f02\u5e38","text":""},{"location":"api/exceptions/#symphra_modules.exceptions","title":"<code>exceptions</code>","text":"<p>\u6a21\u5757\u7ba1\u7406\u7cfb\u7edf\u7684\u5f02\u5e38\u5b9a\u4e49.</p>"},{"location":"api/exceptions/#symphra_modules.exceptions-classes","title":"Classes","text":""},{"location":"api/exceptions/#symphra_modules.exceptions.ConfigValidationError","title":"<code>ConfigValidationError</code>","text":"<p>               Bases: <code>ModuleConfigError</code></p> <p>\u914d\u7f6e\u9a8c\u8bc1\u9519\u8bef\u5f02\u5e38.</p> Source code in <code>src/symphra_modules/exceptions.py</code> <pre><code>class ConfigValidationError(ModuleConfigError):\n    \"\"\"\u914d\u7f6e\u9a8c\u8bc1\u9519\u8bef\u5f02\u5e38.\"\"\"\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.EventError","title":"<code>EventError</code>","text":"<p>               Bases: <code>ModuleError</code></p> <p>\u4e8b\u4ef6\u7cfb\u7edf\u9519\u8bef\u5f02\u5e38.</p> Source code in <code>src/symphra_modules/exceptions.py</code> <pre><code>class EventError(ModuleError):\n    \"\"\"\u4e8b\u4ef6\u7cfb\u7edf\u9519\u8bef\u5f02\u5e38.\"\"\"\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleConfigError","title":"<code>ModuleConfigError</code>","text":"<p>               Bases: <code>ModuleError</code></p> <p>\u6a21\u5757\u914d\u7f6e\u5f02\u5e38.</p> Source code in <code>src/symphra_modules/exceptions.py</code> <pre><code>class ModuleConfigError(ModuleError):\n    \"\"\"\u6a21\u5757\u914d\u7f6e\u5f02\u5e38.\"\"\"\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleDependencyError","title":"<code>ModuleDependencyError</code>","text":"<p>               Bases: <code>ModuleError</code></p> <p>\u6a21\u5757\u4f9d\u8d56\u9519\u8bef\u5f02\u5e38.</p> Source code in <code>src/symphra_modules/exceptions.py</code> <pre><code>class ModuleDependencyError(ModuleError):\n    \"\"\"\u6a21\u5757\u4f9d\u8d56\u9519\u8bef\u5f02\u5e38.\"\"\"\n\n    def __init__(\n        self,\n        message: str,\n        module_name: str | None = None,\n        missing_dependencies: list[str] | None = None,\n        circular_dependencies: list[str] | None = None,\n    ) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u4f9d\u8d56\u5f02\u5e38.\n\n        Args:\n            message: \u9519\u8bef\u6d88\u606f\n            module_name: \u6a21\u5757\u540d\u79f0\uff08\u53ef\u9009\uff09\n            missing_dependencies: \u7f3a\u5931\u7684\u4f9d\u8d56\u5217\u8868\uff08\u53ef\u9009\uff09\n            circular_dependencies: \u5faa\u73af\u4f9d\u8d56\u5217\u8868\uff08\u53ef\u9009\uff09\n        \"\"\"\n        super().__init__(message, module_name)\n        self.missing_dependencies = missing_dependencies or []\n        self.circular_dependencies = circular_dependencies or []\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleDependencyError-functions","title":"Functions","text":""},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleDependencyError.__init__","title":"<code>__init__(message, module_name=None, missing_dependencies=None, circular_dependencies=None)</code>","text":"<p>\u521d\u59cb\u5316\u4f9d\u8d56\u5f02\u5e38.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>message</code> <code>str</code> <p>\u9519\u8bef\u6d88\u606f</p> \u5fc5\u9700 <code>module_name</code> <code>str | None</code> <p>\u6a21\u5757\u540d\u79f0\uff08\u53ef\u9009\uff09</p> <code>None</code> <code>missing_dependencies</code> <code>list[str] | None</code> <p>\u7f3a\u5931\u7684\u4f9d\u8d56\u5217\u8868\uff08\u53ef\u9009\uff09</p> <code>None</code> <code>circular_dependencies</code> <code>list[str] | None</code> <p>\u5faa\u73af\u4f9d\u8d56\u5217\u8868\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/exceptions.py</code> <pre><code>def __init__(\n    self,\n    message: str,\n    module_name: str | None = None,\n    missing_dependencies: list[str] | None = None,\n    circular_dependencies: list[str] | None = None,\n) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u4f9d\u8d56\u5f02\u5e38.\n\n    Args:\n        message: \u9519\u8bef\u6d88\u606f\n        module_name: \u6a21\u5757\u540d\u79f0\uff08\u53ef\u9009\uff09\n        missing_dependencies: \u7f3a\u5931\u7684\u4f9d\u8d56\u5217\u8868\uff08\u53ef\u9009\uff09\n        circular_dependencies: \u5faa\u73af\u4f9d\u8d56\u5217\u8868\uff08\u53ef\u9009\uff09\n    \"\"\"\n    super().__init__(message, module_name)\n    self.missing_dependencies = missing_dependencies or []\n    self.circular_dependencies = circular_dependencies or []\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleError","title":"<code>ModuleError</code>","text":"<p>               Bases: <code>Exception</code></p> <p>\u6a21\u5757\u7cfb\u7edf\u7684\u57fa\u7c7b\u5f02\u5e38.</p> Source code in <code>src/symphra_modules/exceptions.py</code> <pre><code>class ModuleError(Exception):\n    \"\"\"\u6a21\u5757\u7cfb\u7edf\u7684\u57fa\u7c7b\u5f02\u5e38.\"\"\"\n\n    def __init__(self, message: str, module_name: str | None = None) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u5f02\u5e38.\n\n        Args:\n            message: \u9519\u8bef\u6d88\u606f\n            module_name: \u6a21\u5757\u540d\u79f0\uff08\u53ef\u9009\uff09\n        \"\"\"\n        super().__init__(message)\n        self.module_name = module_name\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleError-functions","title":"Functions","text":""},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleError.__init__","title":"<code>__init__(message, module_name=None)</code>","text":"<p>\u521d\u59cb\u5316\u5f02\u5e38.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>message</code> <code>str</code> <p>\u9519\u8bef\u6d88\u606f</p> \u5fc5\u9700 <code>module_name</code> <code>str | None</code> <p>\u6a21\u5757\u540d\u79f0\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/exceptions.py</code> <pre><code>def __init__(self, message: str, module_name: str | None = None) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u5f02\u5e38.\n\n    Args:\n        message: \u9519\u8bef\u6d88\u606f\n        module_name: \u6a21\u5757\u540d\u79f0\uff08\u53ef\u9009\uff09\n    \"\"\"\n    super().__init__(message)\n    self.module_name = module_name\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleLoadError","title":"<code>ModuleLoadError</code>","text":"<p>               Bases: <code>ModuleError</code></p> <p>\u6a21\u5757\u52a0\u8f7d\u5931\u8d25\u5f02\u5e38.</p> Source code in <code>src/symphra_modules/exceptions.py</code> <pre><code>class ModuleLoadError(ModuleError):\n    \"\"\"\u6a21\u5757\u52a0\u8f7d\u5931\u8d25\u5f02\u5e38.\"\"\"\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleNotFoundException","title":"<code>ModuleNotFoundException</code>","text":"<p>               Bases: <code>ModuleError</code></p> <p>\u6a21\u5757\u672a\u627e\u5230\u5f02\u5e38.</p> Source code in <code>src/symphra_modules/exceptions.py</code> <pre><code>class ModuleNotFoundException(ModuleError):\n    \"\"\"\u6a21\u5757\u672a\u627e\u5230\u5f02\u5e38.\"\"\"\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleStateError","title":"<code>ModuleStateError</code>","text":"<p>               Bases: <code>ModuleError</code></p> <p>\u6a21\u5757\u72b6\u6001\u5f02\u5e38.</p> Source code in <code>src/symphra_modules/exceptions.py</code> <pre><code>class ModuleStateError(ModuleError):\n    \"\"\"\u6a21\u5757\u72b6\u6001\u5f02\u5e38.\"\"\"\n\n    def __init__(\n        self,\n        message: str,\n        module_name: str | None = None,\n        current_state: str | None = None,\n        expected_states: list[str] | None = None,\n    ) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u72b6\u6001\u5f02\u5e38.\n\n        Args:\n            message: \u9519\u8bef\u6d88\u606f\n            module_name: \u6a21\u5757\u540d\u79f0\uff08\u53ef\u9009\uff09\n            current_state: \u5f53\u524d\u72b6\u6001\uff08\u53ef\u9009\uff09\n            expected_states: \u671f\u671b\u72b6\u6001\u5217\u8868\uff08\u53ef\u9009\uff09\n        \"\"\"\n        super().__init__(message, module_name)\n        self.current_state = current_state\n        self.expected_states = expected_states or []\n</code></pre>"},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleStateError-functions","title":"Functions","text":""},{"location":"api/exceptions/#symphra_modules.exceptions.ModuleStateError.__init__","title":"<code>__init__(message, module_name=None, current_state=None, expected_states=None)</code>","text":"<p>\u521d\u59cb\u5316\u72b6\u6001\u5f02\u5e38.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>message</code> <code>str</code> <p>\u9519\u8bef\u6d88\u606f</p> \u5fc5\u9700 <code>module_name</code> <code>str | None</code> <p>\u6a21\u5757\u540d\u79f0\uff08\u53ef\u9009\uff09</p> <code>None</code> <code>current_state</code> <code>str | None</code> <p>\u5f53\u524d\u72b6\u6001\uff08\u53ef\u9009\uff09</p> <code>None</code> <code>expected_states</code> <code>list[str] | None</code> <p>\u671f\u671b\u72b6\u6001\u5217\u8868\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/exceptions.py</code> <pre><code>def __init__(\n    self,\n    message: str,\n    module_name: str | None = None,\n    current_state: str | None = None,\n    expected_states: list[str] | None = None,\n) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u72b6\u6001\u5f02\u5e38.\n\n    Args:\n        message: \u9519\u8bef\u6d88\u606f\n        module_name: \u6a21\u5757\u540d\u79f0\uff08\u53ef\u9009\uff09\n        current_state: \u5f53\u524d\u72b6\u6001\uff08\u53ef\u9009\uff09\n        expected_states: \u671f\u671b\u72b6\u6001\u5217\u8868\uff08\u53ef\u9009\uff09\n    \"\"\"\n    super().__init__(message, module_name)\n    self.current_state = current_state\n    self.expected_states = expected_states or []\n</code></pre>"},{"location":"api/loader/","title":"\u52a0\u8f7d\u5668","text":""},{"location":"api/loader/#symphra_modules.loader","title":"<code>loader</code>","text":"<p>\u6a21\u5757\u52a0\u8f7d\u5668.</p>"},{"location":"api/loader/#symphra_modules.loader-classes","title":"Classes","text":""},{"location":"api/loader/#symphra_modules.loader.DirectoryLoader","title":"<code>DirectoryLoader</code>","text":"<p>               Bases: <code>ModuleLoader</code></p> <p>\u4ece\u76ee\u5f55\u52a0\u8f7d\u6a21\u5757.</p> Source code in <code>src/symphra_modules/loader/directory.py</code> <pre><code>class DirectoryLoader(ModuleLoader):\n    \"\"\"\u4ece\u76ee\u5f55\u52a0\u8f7d\u6a21\u5757.\"\"\"\n\n    def __init__(self, base_path: Path | None = None) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u76ee\u5f55\u52a0\u8f7d\u5668.\n\n        Args:\n            base_path: \u57fa\u7840\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\n        \"\"\"\n        self.base_path = base_path or Path.cwd()\n\n    def _to_module_name(self, path: Path) -&gt; str | None:\n        \"\"\"\u5c06\u6587\u4ef6\u6216\u5305\u8def\u5f84\u8f6c\u6362\u4e3a\u6a21\u5757\u540d\uff08\u76f8\u5bf9 base_path\uff09.\n\n        Args:\n            path: \u6587\u4ef6\u6216\u5305\u8def\u5f84\n\n        Returns:\n            \u6a21\u5757\u540d\uff0c\u5982\u679c\u65e0\u6cd5\u8f6c\u6362\u5219\u8fd4\u56de None\n        \"\"\"\n        try:\n            relative = path.relative_to(self.base_path)\n        except ValueError:\n            # \u65e0\u6cd5\u8f6c\u6362\u4e3a\u76f8\u5bf9\u8def\u5f84\u65f6\u8fd4\u56de None\n            return None\n\n        parts = list(relative.parts)\n        if parts and parts[-1].endswith(\".py\"):\n            parts[-1] = parts[-1][:-3]\n\n        return \".\".join(parts)\n\n    def load(self, source: str) -&gt; dict[str, type[ModuleInterface]]:\n        \"\"\"\u4ece\u6307\u5b9a\u76ee\u5f55\u52a0\u8f7d\u6240\u6709\u6a21\u5757.\n\n        Args:\n            source: \u76ee\u5f55\u8def\u5f84\uff08\u76f8\u5bf9\u4e8e base_path\uff09\n\n        Returns:\n            \u6a21\u5757\u540d\u5230\u6a21\u5757\u7c7b\u7684\u6620\u5c04\u5b57\u5178\n\n        Raises:\n            ModuleLoadError: \u76ee\u5f55\u4e0d\u5b58\u5728\u65f6\u629b\u51fa\n        \"\"\"\n        modules: dict[str, type[ModuleInterface]] = {}\n        module_dir = Path(self.base_path) / source\n\n        if not module_dir.exists():\n            raise ModuleLoadError(f\"\u6a21\u5757\u76ee\u5f55\u4e0d\u5b58\u5728: {module_dir}\")\n\n        # \u67e5\u627e\u6240\u6709 Python \u6587\u4ef6\n        for py_file in module_dir.glob(\"*.py\"):\n            if py_file.name.startswith(\"_\"):\n                continue\n\n            try:\n                module_classes = self._load_from_file(py_file)\n                modules.update(module_classes)\n            except Exception as e:\n                logger.warning(f\"\u65e0\u6cd5\u4ece {py_file} \u52a0\u8f7d\u6a21\u5757: {e}\")\n\n        # \u67e5\u627e\u5305\n        for package_dir in module_dir.iterdir():\n            if package_dir.is_dir() and (package_dir / \"__init__.py\").exists():\n                try:\n                    module_classes = self._load_from_package(package_dir)\n                    modules.update(module_classes)\n                except Exception as e:\n                    logger.error(f\"\u65e0\u6cd5\u4ece {package_dir} \u52a0\u8f7d\u6a21\u5757: {e}\")\n\n        return modules\n\n    def discover(self, source: str) -&gt; list[str]:\n        \"\"\"\u53d1\u73b0\u76ee\u5f55\u4e2d\u7684\u6a21\u5757.\n\n        Args:\n            source: \u76ee\u5f55\u8def\u5f84\n\n        Returns:\n            \u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n        module_names: list[str] = []\n        module_dir = Path(self.base_path) / source\n\n        if not module_dir.exists():\n            return module_names\n\n        # Python \u6587\u4ef6\n        for py_file in module_dir.glob(\"*.py\"):\n            if not py_file.name.startswith(\"_\"):\n                module_names.append(py_file.stem)\n\n        # \u5305\n        for package_dir in module_dir.iterdir():\n            if package_dir.is_dir() and (package_dir / \"__init__.py\").exists():\n                module_names.append(package_dir.name)\n\n        return module_names\n\n    def _load_from_file(self, file_path: Path, package: str | None = None) -&gt; dict[str, type[ModuleInterface]]:\n        \"\"\"\u4ece Python \u6587\u4ef6\u52a0\u8f7d\u6a21\u5757.\n\n        Args:\n            file_path: Python \u6587\u4ef6\u8def\u5f84\n            package: \u5305\u540d\uff08\u53ef\u9009\uff09\n\n        Returns:\n            \u6a21\u5757\u7c7b\u5b57\u5178\n\n        Raises:\n            ModuleLoadError: \u52a0\u8f7d\u5931\u8d25\u65f6\u629b\u51fa\n        \"\"\"\n        module_name: str\n        if package is not None:\n            module_name = f\"{package}.{file_path.stem}\"\n        else:\n            inferred = self._to_module_name(file_path)\n            module_name = inferred or file_path.stem\n\n        module: Any = None\n        if \".\" in module_name:\n            try:\n                module = importlib.import_module(module_name)\n            except ImportError:\n                module = None\n\n        if module is None:\n            spec = importlib.util.spec_from_file_location(module_name, file_path)\n            if not spec or not spec.loader:\n                raise ModuleLoadError(f\"\u65e0\u6cd5\u4ece {file_path} \u521b\u5efa\u6a21\u5757\u89c4\u8303\")\n\n            module = importlib.util.module_from_spec(spec)\n            sys.modules[module_name] = module\n            spec.loader.exec_module(module)\n\n        return self._find_module_classes(module)\n\n    def _load_from_package(self, package_dir: Path) -&gt; dict[str, type[ModuleInterface]]:\n        \"\"\"\u4ece\u5305\u52a0\u8f7d\u6a21\u5757.\n\n        Args:\n            package_dir: \u5305\u76ee\u5f55\u8def\u5f84\n\n        Returns:\n            \u6a21\u5757\u7c7b\u5b57\u5178\n\n        Raises:\n            ModuleLoadError: \u52a0\u8f7d\u5931\u8d25\u65f6\u629b\u51fa\n        \"\"\"\n        inferred_package = self._to_module_name(package_dir)\n        package_name = inferred_package or package_dir.name\n\n        # \u5c06\u5305\u8def\u5f84\u6dfb\u52a0\u5230 sys.path\uff0c\u4fbf\u4e8e\u5b9a\u4f4d\u4f9d\u8d56\n        parent_path = str(package_dir.parent)\n        if parent_path not in sys.path:\n            sys.path.insert(0, parent_path)\n\n        modules: dict[str, type[ModuleInterface]] = {}\n\n        # \u4f18\u5148\u52a0\u8f7d\u663e\u5f0f\u7684 module.py\uff0c\u518d\u52a0\u8f7d\u5176\u4ed6\u975e\u79c1\u6709 Python \u6587\u4ef6\n        candidate_files: list[Path] = []\n        module_file = package_dir / \"module.py\"\n        if module_file.exists():\n            candidate_files.append(module_file)\n\n        if not candidate_files:\n            # \u56de\u9000\uff1a\u82e5\u6ca1\u6709\u72ec\u7acb\u6587\u4ef6\uff0c\u5219\u5c1d\u8bd5\u52a0\u8f7d\u5305\u672c\u8eab\n            try:\n                module = importlib.import_module(package_name)\n                return self._find_module_classes(module)\n            except ImportError as e:\n                raise ModuleLoadError(f\"\u65e0\u6cd5\u4ece {package_name} \u52a0\u8f7d\u6a21\u5757: {e}\") from e\n\n        for py_file in candidate_files:\n            try:\n                module_classes = self._load_from_file(py_file, package=package_name)\n                modules.update(module_classes)\n            except Exception as e:\n                logger.warning(f\"\u65e0\u6cd5\u4ece {package_name} \u7684 {py_file.name} \u52a0\u8f7d\u6a21\u5757: {e}\")\n\n        return modules\n</code></pre>"},{"location":"api/loader/#symphra_modules.loader.DirectoryLoader-functions","title":"Functions","text":""},{"location":"api/loader/#symphra_modules.loader.DirectoryLoader.__init__","title":"<code>__init__(base_path=None)</code>","text":"<p>\u521d\u59cb\u5316\u76ee\u5f55\u52a0\u8f7d\u5668.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>base_path</code> <code>Path | None</code> <p>\u57fa\u7840\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/loader/directory.py</code> <pre><code>def __init__(self, base_path: Path | None = None) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u76ee\u5f55\u52a0\u8f7d\u5668.\n\n    Args:\n        base_path: \u57fa\u7840\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\n    \"\"\"\n    self.base_path = base_path or Path.cwd()\n</code></pre>"},{"location":"api/loader/#symphra_modules.loader.DirectoryLoader.discover","title":"<code>discover(source)</code>","text":"<p>\u53d1\u73b0\u76ee\u5f55\u4e2d\u7684\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>source</code> <code>str</code> <p>\u76ee\u5f55\u8def\u5f84</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u6a21\u5757\u540d\u79f0\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/loader/directory.py</code> <pre><code>def discover(self, source: str) -&gt; list[str]:\n    \"\"\"\u53d1\u73b0\u76ee\u5f55\u4e2d\u7684\u6a21\u5757.\n\n    Args:\n        source: \u76ee\u5f55\u8def\u5f84\n\n    Returns:\n        \u6a21\u5757\u540d\u79f0\u5217\u8868\n    \"\"\"\n    module_names: list[str] = []\n    module_dir = Path(self.base_path) / source\n\n    if not module_dir.exists():\n        return module_names\n\n    # Python \u6587\u4ef6\n    for py_file in module_dir.glob(\"*.py\"):\n        if not py_file.name.startswith(\"_\"):\n            module_names.append(py_file.stem)\n\n    # \u5305\n    for package_dir in module_dir.iterdir():\n        if package_dir.is_dir() and (package_dir / \"__init__.py\").exists():\n            module_names.append(package_dir.name)\n\n    return module_names\n</code></pre>"},{"location":"api/loader/#symphra_modules.loader.DirectoryLoader.load","title":"<code>load(source)</code>","text":"<p>\u4ece\u6307\u5b9a\u76ee\u5f55\u52a0\u8f7d\u6240\u6709\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>source</code> <code>str</code> <p>\u76ee\u5f55\u8def\u5f84\uff08\u76f8\u5bf9\u4e8e base_path\uff09</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>dict[str, type[ModuleInterface]]</code> <p>\u6a21\u5757\u540d\u5230\u6a21\u5757\u7c7b\u7684\u6620\u5c04\u5b57\u5178</p> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleLoadError</code> <p>\u76ee\u5f55\u4e0d\u5b58\u5728\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/loader/directory.py</code> <pre><code>def load(self, source: str) -&gt; dict[str, type[ModuleInterface]]:\n    \"\"\"\u4ece\u6307\u5b9a\u76ee\u5f55\u52a0\u8f7d\u6240\u6709\u6a21\u5757.\n\n    Args:\n        source: \u76ee\u5f55\u8def\u5f84\uff08\u76f8\u5bf9\u4e8e base_path\uff09\n\n    Returns:\n        \u6a21\u5757\u540d\u5230\u6a21\u5757\u7c7b\u7684\u6620\u5c04\u5b57\u5178\n\n    Raises:\n        ModuleLoadError: \u76ee\u5f55\u4e0d\u5b58\u5728\u65f6\u629b\u51fa\n    \"\"\"\n    modules: dict[str, type[ModuleInterface]] = {}\n    module_dir = Path(self.base_path) / source\n\n    if not module_dir.exists():\n        raise ModuleLoadError(f\"\u6a21\u5757\u76ee\u5f55\u4e0d\u5b58\u5728: {module_dir}\")\n\n    # \u67e5\u627e\u6240\u6709 Python \u6587\u4ef6\n    for py_file in module_dir.glob(\"*.py\"):\n        if py_file.name.startswith(\"_\"):\n            continue\n\n        try:\n            module_classes = self._load_from_file(py_file)\n            modules.update(module_classes)\n        except Exception as e:\n            logger.warning(f\"\u65e0\u6cd5\u4ece {py_file} \u52a0\u8f7d\u6a21\u5757: {e}\")\n\n    # \u67e5\u627e\u5305\n    for package_dir in module_dir.iterdir():\n        if package_dir.is_dir() and (package_dir / \"__init__.py\").exists():\n            try:\n                module_classes = self._load_from_package(package_dir)\n                modules.update(module_classes)\n            except Exception as e:\n                logger.error(f\"\u65e0\u6cd5\u4ece {package_dir} \u52a0\u8f7d\u6a21\u5757: {e}\")\n\n    return modules\n</code></pre>"},{"location":"api/loader/#symphra_modules.loader.ModuleLoader","title":"<code>ModuleLoader</code>","text":"<p>               Bases: <code>ABC</code></p> <p>\u6a21\u5757\u52a0\u8f7d\u5668\u62bd\u8c61\u57fa\u7c7b.</p> Source code in <code>src/symphra_modules/loader/base.py</code> <pre><code>class ModuleLoader(ABC):\n    \"\"\"\u6a21\u5757\u52a0\u8f7d\u5668\u62bd\u8c61\u57fa\u7c7b.\"\"\"\n\n    @abstractmethod\n    def load(self, source: str) -&gt; dict[str, type[ModuleInterface]]:\n        \"\"\"\u4ece\u6e90\u52a0\u8f7d\u6a21\u5757.\n\n        Args:\n            source: \u6a21\u5757\u6e90\uff08\u76ee\u5f55\u8def\u5f84\u3001\u5305\u540d\u7b49\uff09\n\n        Returns:\n            \u6a21\u5757\u540d\u5230\u6a21\u5757\u7c7b\u7684\u6620\u5c04\u5b57\u5178\n        \"\"\"\n\n    @abstractmethod\n    def discover(self, source: str) -&gt; list[str]:\n        \"\"\"\u53d1\u73b0\u53ef\u7528\u7684\u6a21\u5757.\n\n        Args:\n            source: \u6a21\u5757\u6e90\n\n        Returns:\n            \u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n\n    def _is_valid_module_class(self, obj: Any) -&gt; bool:\n        \"\"\"\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u662f\u6709\u6548\u7684\u6a21\u5757\u7c7b.\n\n        Args:\n            obj: \u5f85\u68c0\u67e5\u7684\u5bf9\u8c61\n\n        Returns:\n            \u662f\u5426\u4e3a\u6709\u6548\u7684\u6a21\u5757\u7c7b\n        \"\"\"\n        # \u8df3\u8fc7\u62bd\u8c61\u7c7b\u548c\u81ea\u8eab\n        if obj is BaseModule or inspect.isabstract(obj):\n            return False\n\n        # \u5fc5\u987b\u662f\u7c7b\n        if not inspect.isclass(obj):\n            return False\n\n        # \u68c0\u67e5\u5fc5\u9700\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\n        required_attrs = [\"metadata\", \"install\", \"start\", \"stop\"]\n        if not all(hasattr(obj, attr) for attr in required_attrs):\n            return False\n\n        # \u68c0\u67e5 metadata \u662f\u5426\u662f property\n        return isinstance(getattr(type(obj), \"metadata\", None), property)\n\n    def _validate_module_instance(self, obj: type[ModuleInterface]) -&gt; bool:\n        \"\"\"\u9a8c\u8bc1\u6a21\u5757\u5b9e\u4f8b\u662f\u5426\u6709\u6548.\n\n        Args:\n            obj: \u6a21\u5757\u7c7b\n\n        Returns:\n            \u662f\u5426\u53ef\u4ee5\u6210\u529f\u5b9e\u4f8b\u5316\u5e76\u83b7\u53d6\u5143\u6570\u636e\n        \"\"\"\n        try:\n            instance = obj()\n            metadata = instance.metadata\n            return isinstance(metadata, ModuleMetadata)\n        except Exception as e:\n            logger.warning(f\"\u65e0\u6cd5\u5b9e\u4f8b\u5316\u6a21\u5757\u7c7b {obj.__name__}: {e}\")\n            return False\n\n    def _find_module_classes(self, module: Any) -&gt; dict[str, type[ModuleInterface]]:\n        \"\"\"\u5728\u6a21\u5757\u4e2d\u67e5\u627e\u6709\u6548\u7684\u6a21\u5757\u7c7b.\n\n        Args:\n            module: \u8981\u641c\u7d22\u7684 Python \u6a21\u5757\n\n        Returns:\n            \u6a21\u5757\u540d\u5230\u6a21\u5757\u7c7b\u7684\u6620\u5c04\u5b57\u5178\n        \"\"\"\n        module_classes: dict[str, type[ModuleInterface]] = {}\n\n        # \u83b7\u53d6\u6a21\u5757\u4e2d\u7684\u6240\u6709\u7c7b\n        for name, obj in inspect.getmembers(module, inspect.isclass):\n            # \u57fa\u672c\u6709\u6548\u6027\u68c0\u67e5\n            if not self._is_valid_module_class(obj):\n                continue\n\n            # \u5b9e\u4f8b\u9a8c\u8bc1\n            if self._validate_module_instance(obj):\n                module_classes[name] = obj\n\n        return module_classes\n</code></pre>"},{"location":"api/loader/#symphra_modules.loader.ModuleLoader-functions","title":"Functions","text":""},{"location":"api/loader/#symphra_modules.loader.ModuleLoader.discover","title":"<code>discover(source)</code>  <code>abstractmethod</code>","text":"<p>\u53d1\u73b0\u53ef\u7528\u7684\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>source</code> <code>str</code> <p>\u6a21\u5757\u6e90</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u6a21\u5757\u540d\u79f0\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/loader/base.py</code> <pre><code>@abstractmethod\ndef discover(self, source: str) -&gt; list[str]:\n    \"\"\"\u53d1\u73b0\u53ef\u7528\u7684\u6a21\u5757.\n\n    Args:\n        source: \u6a21\u5757\u6e90\n\n    Returns:\n        \u6a21\u5757\u540d\u79f0\u5217\u8868\n    \"\"\"\n</code></pre>"},{"location":"api/loader/#symphra_modules.loader.ModuleLoader.load","title":"<code>load(source)</code>  <code>abstractmethod</code>","text":"<p>\u4ece\u6e90\u52a0\u8f7d\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>source</code> <code>str</code> <p>\u6a21\u5757\u6e90\uff08\u76ee\u5f55\u8def\u5f84\u3001\u5305\u540d\u7b49\uff09</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>dict[str, type[ModuleInterface]]</code> <p>\u6a21\u5757\u540d\u5230\u6a21\u5757\u7c7b\u7684\u6620\u5c04\u5b57\u5178</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/loader/base.py</code> <pre><code>@abstractmethod\ndef load(self, source: str) -&gt; dict[str, type[ModuleInterface]]:\n    \"\"\"\u4ece\u6e90\u52a0\u8f7d\u6a21\u5757.\n\n    Args:\n        source: \u6a21\u5757\u6e90\uff08\u76ee\u5f55\u8def\u5f84\u3001\u5305\u540d\u7b49\uff09\n\n    Returns:\n        \u6a21\u5757\u540d\u5230\u6a21\u5757\u7c7b\u7684\u6620\u5c04\u5b57\u5178\n    \"\"\"\n</code></pre>"},{"location":"api/loader/#symphra_modules.loader.PackageLoader","title":"<code>PackageLoader</code>","text":"<p>               Bases: <code>ModuleLoader</code></p> <p>\u4ece\u5305\u540d\u52a0\u8f7d\u6a21\u5757.</p> Source code in <code>src/symphra_modules/loader/package.py</code> <pre><code>class PackageLoader(ModuleLoader):\n    \"\"\"\u4ece\u5305\u540d\u52a0\u8f7d\u6a21\u5757.\"\"\"\n\n    def load(self, source: str) -&gt; dict[str, type[ModuleInterface]]:\n        \"\"\"\u4ece\u5305\u540d\u52a0\u8f7d\u6a21\u5757.\n\n        Args:\n            source: \u5305\u540d\uff08\u5982 \"my_package.modules\"\uff09\n\n        Returns:\n            \u6a21\u5757\u7c7b\u5b57\u5178\n\n        Raises:\n            ModuleLoadError: \u5305\u672a\u627e\u5230\u65f6\u629b\u51fa\n        \"\"\"\n        try:\n            module = importlib.import_module(source)\n            return self._find_module_classes(module)\n        except ImportError as e:\n            raise ModuleLoadError(f\"\u5305\u672a\u627e\u5230: {source}\") from e\n\n    def discover(self, source: str) -&gt; list[str]:\n        \"\"\"\u53d1\u73b0\u5305\u4e2d\u7684\u6a21\u5757.\n\n        Args:\n            source: \u5305\u540d\n\n        Returns:\n            \u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n        try:\n            package = importlib.import_module(source)\n            package_path = Path(package.__file__).parent if package.__file__ else Path.cwd() / source\n\n            module_names: list[str] = []\n\n            # \u626b\u63cf\u5305\u5185\u7684\u6a21\u5757\n            for item in package_path.iterdir():\n                if item.is_file() and item.suffix == \".py\" and not item.name.startswith(\"_\"):\n                    module_names.append(item.stem)\n                elif item.is_dir() and (item / \"__init__.py\").exists():\n                    module_names.append(item.name)\n\n            return module_names\n\n        except (ImportError, AttributeError):\n            return []\n</code></pre>"},{"location":"api/loader/#symphra_modules.loader.PackageLoader-functions","title":"Functions","text":""},{"location":"api/loader/#symphra_modules.loader.PackageLoader.discover","title":"<code>discover(source)</code>","text":"<p>\u53d1\u73b0\u5305\u4e2d\u7684\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>source</code> <code>str</code> <p>\u5305\u540d</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u6a21\u5757\u540d\u79f0\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/loader/package.py</code> <pre><code>def discover(self, source: str) -&gt; list[str]:\n    \"\"\"\u53d1\u73b0\u5305\u4e2d\u7684\u6a21\u5757.\n\n    Args:\n        source: \u5305\u540d\n\n    Returns:\n        \u6a21\u5757\u540d\u79f0\u5217\u8868\n    \"\"\"\n    try:\n        package = importlib.import_module(source)\n        package_path = Path(package.__file__).parent if package.__file__ else Path.cwd() / source\n\n        module_names: list[str] = []\n\n        # \u626b\u63cf\u5305\u5185\u7684\u6a21\u5757\n        for item in package_path.iterdir():\n            if item.is_file() and item.suffix == \".py\" and not item.name.startswith(\"_\"):\n                module_names.append(item.stem)\n            elif item.is_dir() and (item / \"__init__.py\").exists():\n                module_names.append(item.name)\n\n        return module_names\n\n    except (ImportError, AttributeError):\n        return []\n</code></pre>"},{"location":"api/loader/#symphra_modules.loader.PackageLoader.load","title":"<code>load(source)</code>","text":"<p>\u4ece\u5305\u540d\u52a0\u8f7d\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>source</code> <code>str</code> <p>\u5305\u540d\uff08\u5982 \"my_package.modules\"\uff09</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>dict[str, type[ModuleInterface]]</code> <p>\u6a21\u5757\u7c7b\u5b57\u5178</p> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleLoadError</code> <p>\u5305\u672a\u627e\u5230\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/loader/package.py</code> <pre><code>def load(self, source: str) -&gt; dict[str, type[ModuleInterface]]:\n    \"\"\"\u4ece\u5305\u540d\u52a0\u8f7d\u6a21\u5757.\n\n    Args:\n        source: \u5305\u540d\uff08\u5982 \"my_package.modules\"\uff09\n\n    Returns:\n        \u6a21\u5757\u7c7b\u5b57\u5178\n\n    Raises:\n        ModuleLoadError: \u5305\u672a\u627e\u5230\u65f6\u629b\u51fa\n    \"\"\"\n    try:\n        module = importlib.import_module(source)\n        return self._find_module_classes(module)\n    except ImportError as e:\n        raise ModuleLoadError(f\"\u5305\u672a\u627e\u5230: {source}\") from e\n</code></pre>"},{"location":"api/manager/","title":"\u7ba1\u7406\u5668","text":""},{"location":"api/manager/#symphra_modules.manager","title":"<code>manager</code>","text":"<p>\u6a21\u5757\u7ba1\u7406\u5668\u5b9e\u73b0.</p>"},{"location":"api/manager/#symphra_modules.manager-classes","title":"Classes","text":""},{"location":"api/manager/#symphra_modules.manager.ModuleManager","title":"<code>ModuleManager</code>","text":"<p>\u6a21\u5757\u7ba1\u7406\u5668 - \u7edf\u4e00\u7684\u6a21\u5757\u7ba1\u7406\u95e8\u9762.</p> Source code in <code>src/symphra_modules/manager.py</code> <pre><code>class ModuleManager:\n    \"\"\"\u6a21\u5757\u7ba1\u7406\u5668 - \u7edf\u4e00\u7684\u6a21\u5757\u7ba1\u7406\u95e8\u9762.\"\"\"\n\n    def __init__(\n        self,\n        module_dirs: list[str] | None = None,\n        exclude_modules: set[str] | None = None,\n    ) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u6a21\u5757\u7ba1\u7406\u5668.\n\n        Args:\n            module_dirs: \u6a21\u5757\u76ee\u5f55\u5217\u8868\uff0c\u9ed8\u8ba4\u4e3a [\"modules\"]\n            exclude_modules: \u6392\u9664\u7684\u6a21\u5757\u540d\u79f0\u96c6\u5408\uff08\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\n        \"\"\"\n        self.registry = ModuleRegistry()\n        self.module_dirs = module_dirs if module_dirs is not None else [\"modules\"]\n        # \u6392\u9664\u5217\u8868\uff1a\u7528\u4e8e\u5ffd\u7565\u5e76\u975e\u771f\u6b63\u6a21\u5757\u7684\u76ee\u5f55/\u5305\uff08\u4f8b\u5982 common \u4e3a\u901a\u7528\u57fa\u7c7b\u96c6\u5408\uff09\n        _exmods = exclude_modules or {\"common\"}\n        self.exclude_modules = {m.lower() for m in _exmods}\n        self._directory_loader = DirectoryLoader()\n        self._package_loader = PackageLoader()\n        self._modules_cache: dict[str, dict[str, type[ModuleInterface]]] = {}\n        self._discover_cache: dict[str, list[str]] = {}\n\n    def _invalidate_directory_cache(self, directory: str | None = None) -&gt; None:\n        \"\"\"\u5931\u6548\u76ee\u5f55\u7f13\u5b58\uff0c\u652f\u6301\u5355\u76ee\u5f55\u6216\u5168\u90e8\u6e05\u7406.\n\n        Args:\n            directory: \u8981\u6e05\u7406\u7684\u76ee\u5f55\uff0cNone \u8868\u793a\u6e05\u7406\u6240\u6709\u7f13\u5b58\n        \"\"\"\n        if directory is not None:\n            self._modules_cache.pop(directory, None)\n            self._discover_cache.pop(directory, None)\n        else:\n            self._modules_cache.clear()\n            self._discover_cache.clear()\n\n    def _get_modules_from_directory(self, directory: str) -&gt; dict[str, type[ModuleInterface]]:\n        \"\"\"\u83b7\u53d6\u76ee\u5f55\u4e2d\u7684\u6a21\u5757\uff0c\u5e26\u7f13\u5b58.\n\n        Args:\n            directory: \u76ee\u5f55\u8def\u5f84\n\n        Returns:\n            \u6a21\u5757\u7c7b\u5b57\u5178\n        \"\"\"\n        if directory not in self._modules_cache:\n            modules = self._directory_loader.load(directory)\n            self._modules_cache[directory] = modules\n        return self._modules_cache[directory]\n\n    def _discover_from_directory(self, directory: str) -&gt; list[str]:\n        \"\"\"\u53d1\u73b0\u76ee\u5f55\u6a21\u5757\u540d\u79f0\uff0c\u5e26\u7f13\u5b58.\n\n        Args:\n            directory: \u76ee\u5f55\u8def\u5f84\n\n        Returns:\n            \u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n        if directory not in self._discover_cache:\n            names = self._directory_loader.discover(directory)\n            self._discover_cache[directory] = names\n        return self._discover_cache[directory]\n\n    @staticmethod\n    def _match_module_by_name(\n        modules: dict[str, type[ModuleInterface]],\n        target_name: str,\n    ) -&gt; type[ModuleInterface] | None:\n        \"\"\"\u5728\u6a21\u5757\u5b57\u5178\u4e2d\u6309\u540d\u79f0\u5339\u914d\u6a21\u5757\u7c7b\uff08\u5ffd\u7565\u5927\u5c0f\u5199\u4e0e Module \u540e\u7f00\uff09.\n\n        Args:\n            modules: \u6a21\u5757\u7c7b\u5b57\u5178\n            target_name: \u76ee\u6807\u6a21\u5757\u540d\n\n        Returns:\n            \u5339\u914d\u7684\u6a21\u5757\u7c7b\uff0c\u672a\u627e\u5230\u5219\u8fd4\u56de None\n        \"\"\"\n        name_lower = target_name.lower()\n        candidates = {name_lower, f\"{name_lower}module\"}\n        for module_name, module_class in modules.items():\n            if module_name.lower() in candidates:\n                return module_class\n        return None\n\n    def load_module(self, name: str, source: str | None = None, source_type: str = \"directory\") -&gt; ModuleInterface:\n        \"\"\"\u52a0\u8f7d\u6a21\u5757\u5e76\u6ce8\u518c\u5230\u6ce8\u518c\u8868\uff0c\u8fd4\u56de\u6a21\u5757\u5b9e\u4f8b.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n            source: \u6a21\u5757\u6e90\uff08\u53ef\u9009\uff09\n            source_type: \u6e90\u7c7b\u578b\uff08\"directory\" \u6216 \"package\"\uff09\n\n        Returns:\n            \u6a21\u5757\u5b9e\u4f8b\n\n        Raises:\n            ModuleNotFoundException: \u6a21\u5757\u672a\u627e\u5230\u65f6\u629b\u51fa\n        \"\"\"\n        # \u5df2\u52a0\u8f7d\u5219\u76f4\u63a5\u8fd4\u56de\n        if self.registry.is_loaded(name):\n            existing = self.registry.get(name)\n            assert existing is not None\n            return existing\n\n        found_module: type[ModuleInterface] | None = None\n\n        if source:\n            if source_type == \"directory\":\n                modules = self._get_modules_from_directory(source)\n                found_module = self._match_module_by_name(modules, name)\n            elif source_type == \"package\":\n                modules = self._package_loader.load(source)\n                found_module = modules.get(name) or modules.get(f\"{name}Module\")\n        else:\n            # \u4ece\u914d\u7f6e\u7684\u76ee\u5f55\u67e5\u627e\n            for module_dir in self.module_dirs:\n                try:\n                    modules = self._get_modules_from_directory(module_dir)\n                    found_module = self._match_module_by_name(modules, name)\n                    if found_module:\n                        break\n                except Exception as e:\n                    logger.warning(f\"\u65e0\u6cd5\u4ece\u76ee\u5f55 {module_dir} \u52a0\u8f7d\u6a21\u5757: {e}\")\n\n        if not found_module:\n            raise ModuleNotFoundException(f\"\u627e\u4e0d\u5230\u6a21\u5757: {name}\", module_name=name)\n\n        # \u6ce8\u518c\u6a21\u5757\uff08\u5c06\u7c7b\u4f20\u5165\u6ce8\u518c\u8868\uff0c\u7531\u6ce8\u518c\u8868\u8d1f\u8d23\u5b9e\u4f8b\u5316\u4e0e\u751f\u547d\u5468\u671f\uff09\n        module_instance = self.registry.register(name, found_module)  # type: ignore[arg-type]\n        return module_instance\n\n    def load_all_modules(self) -&gt; dict[str, ModuleInterface]:\n        \"\"\"\u52a0\u8f7d\u6240\u6709\u53ef\u7528\u6a21\u5757.\n\n        Returns:\n            \u6a21\u5757\u540d\u5230\u6a21\u5757\u5b9e\u4f8b\u7684\u6620\u5c04\n        \"\"\"\n        modules: dict[str, ModuleInterface] = {}\n        available_modules = self.discover_modules()\n\n        for module_name in available_modules:\n            try:\n                module = self.load_module(module_name)\n                modules[module_name] = module\n            except Exception as e:\n                # \u5bf9\u4e8e\u88ab\u6392\u9664\u7684\"\u975e\u6a21\u5757\u76ee\u5f55\"\uff0c\u4ec5\u8bb0\u5f55\u544a\u8b66\u4ee5\u964d\u4f4e\u566a\u97f3\n                if module_name.lower() in self.exclude_modules:\n                    logger.warning(f\"\u5ffd\u7565\u975e\u6a21\u5757\u76ee\u5f55: {module_name}\")\n                else:\n                    logger.error(f\"\u52a0\u8f7d\u6a21\u5757\u5931\u8d25: {module_name} - {e}\")\n\n        return modules\n\n    def discover_modules(self, source: str | None = None, source_type: str = \"directory\") -&gt; list[str]:\n        \"\"\"\u53d1\u73b0\u53ef\u7528\u6a21\u5757\u540d\u79f0\u5217\u8868.\n\n        Args:\n            source: \u6a21\u5757\u6e90\uff08\u53ef\u9009\uff09\n            source_type: \u6e90\u7c7b\u578b\n\n        Returns:\n            \u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n        discovered: list[str] = []\n        if source:\n            try:\n                if source_type == \"directory\":\n                    names = self._discover_from_directory(source)\n                elif source_type == \"package\":\n                    names = self._package_loader.discover(source)\n                else:\n                    names = []\n                discovered.extend(names)\n            except Exception as e:\n                logger.warning(f\"\u53d1\u73b0\u6a21\u5757\u5931\u8d25: {e}\")\n            # \u8fc7\u6ee4\u6392\u9664\u5217\u8868\n            filtered = [n for n in set(discovered) if n.lower() not in self.exclude_modules]\n            return sorted(filtered)\n\n        # \u904d\u5386\u9ed8\u8ba4\u76ee\u5f55\n        for module_dir in self.module_dirs:\n            try:\n                names = self._discover_from_directory(module_dir)\n                discovered.extend(names)\n            except Exception as e:\n                logger.warning(f\"\u65e0\u6cd5\u5728\u76ee\u5f55 {module_dir} \u4e2d\u53d1\u73b0\u6a21\u5757: {e}\")\n        # \u8fc7\u6ee4\u6392\u9664\u5217\u8868\n        filtered = [n for n in set(discovered) if n.lower() not in self.exclude_modules]\n        return sorted(filtered)\n\n    def get_module(self, name: str) -&gt; ModuleInterface:\n        \"\"\"\u83b7\u53d6\u5df2\u52a0\u8f7d\u7684\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u6a21\u5757\u5b9e\u4f8b\n\n        Raises:\n            ModuleNotFoundException: \u6a21\u5757\u672a\u627e\u5230\u65f6\u629b\u51fa\n        \"\"\"\n        module = self.registry.get(name)\n        if module is None:\n            raise ModuleNotFoundException(f\"\u6a21\u5757\u672a\u627e\u5230: {name}\")\n        return module\n\n    def unload_module(self, name: str) -&gt; None:\n        \"\"\"\u5378\u8f7d\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n        \"\"\"\n        try:\n            self.registry.unregister(name)\n            logger.info(f\"\u6a21\u5757\u5df2\u5378\u8f7d: {name}\")\n        except ModuleNotFoundException:\n            # \u6a21\u5757\u672a\u52a0\u8f7d\uff0c\u5ffd\u7565\u9519\u8bef\n            logger.debug(f\"\u5c1d\u8bd5\u5378\u8f7d\u672a\u52a0\u8f7d\u7684\u6a21\u5757: {name}\")\n\n    def list_modules(self) -&gt; list[str]:\n        \"\"\"\u5217\u51fa\u6240\u6709\u5df2\u52a0\u8f7d\u7684\u6a21\u5757.\n\n        Returns:\n            \u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n        return self.registry.list_modules()\n\n    def is_module_loaded(self, name: str) -&gt; bool:\n        \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u52a0\u8f7d.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u662f\u5426\u5df2\u52a0\u8f7d\n        \"\"\"\n        return self.registry.is_loaded(name)\n\n    def list_installed_modules(self) -&gt; list[str]:\n        \"\"\"\u5217\u51fa\u5df2\u5b89\u88c5\uff08\u5305\u542b installed/started/stopped\uff09\u7684\u6a21\u5757\u540d\u79f0.\n\n        Returns:\n            \u5df2\u5b89\u88c5\u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n        names: set[str] = set()\n        for st in (ModuleState.INSTALLED, ModuleState.STARTED, ModuleState.STOPPED):\n            try:\n                names.update(self.registry.list_modules_by_state(st))\n            except Exception as e:\n                logger.debug(f\"\u5217\u51fa\u67d0\u72b6\u6001\u6a21\u5757\u5931\u8d25: {st} - {e}\")\n                continue\n        return sorted(names)\n\n    def install_module(self, name: str, config: dict[str, Any] | None = None, source: str | None = None) -&gt; None:\n        \"\"\"\u5b89\u88c5\u6307\u5b9a\u6a21\u5757\uff1a\u5fc5\u8981\u65f6\u81ea\u52a8\u52a0\u8f7d\u540e\u518d\u5b89\u88c5.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n            config: \u914d\u7f6e\u5b57\u5178\uff08\u53ef\u9009\uff09\n            source: \u6a21\u5757\u6e90\uff08\u53ef\u9009\uff09\n        \"\"\"\n        if not self.registry.is_loaded(name):\n            self.load_module(name, source)\n        self.registry.install(name, config or {})\n\n    def uninstall_module(self, name: str) -&gt; None:\n        \"\"\"\u5378\u8f7d\u6a21\u5757\uff08\u82e5\u5728\u8fd0\u884c\u5219\u5148\u505c\u6b62\u7531\u6ce8\u518c\u8868\u5904\u7406\uff09.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n        \"\"\"\n        self.registry.uninstall(name)\n\n    def start_module(self, name: str) -&gt; None:\n        \"\"\"\u542f\u52a8\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n        \"\"\"\n        # \u82e5\u672a\u52a0\u8f7d\uff0c\u5c1d\u8bd5\u52a0\u8f7d\n        if not self.registry.is_loaded(name):\n            self.load_module(name)\n        self.registry.start(name)\n\n    def stop_module(self, name: str) -&gt; None:\n        \"\"\"\u505c\u6b62\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n        \"\"\"\n        self.registry.stop(name)\n\n    def reload_module(self, name: str) -&gt; None:\n        \"\"\"\u91cd\u8f7d\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n        \"\"\"\n        # \u5931\u6548\u7f13\u5b58\n        self._invalidate_directory_cache()\n        if not self.registry.is_loaded(name):\n            self.load_module(name)\n        self.registry.reload(name)\n\n    def start_all_modules(self) -&gt; None:\n        \"\"\"\u542f\u52a8\u6240\u6709\u5df2\u5b89\u88c5/\u5df2\u505c\u6b62\u7684\u6a21\u5757.\"\"\"\n        for name in self.list_installed_modules():\n            try:\n                self.registry.start(name)\n            except Exception as e:\n                logger.warning(f\"\u542f\u52a8\u6a21\u5757\u5931\u8d25: {name} - {e}\")\n\n    def stop_all_modules(self) -&gt; None:\n        \"\"\"\u505c\u6b62\u6240\u6709\u8fd0\u884c\u4e2d\u7684\u6a21\u5757.\"\"\"\n        for name in self.registry.list_modules_by_state(ModuleState.STARTED):\n            try:\n                self.registry.stop(name)\n            except Exception as e:\n                logger.warning(f\"\u505c\u6b62\u6a21\u5757\u5931\u8d25: {name} - {e}\")\n\n    def reload_all_modules(self) -&gt; None:\n        \"\"\"\u91cd\u8f7d\u6240\u6709\u5df2\u52a0\u8f7d\u7684\u6a21\u5757.\"\"\"\n        for name in self.list_modules():\n            try:\n                self.registry.reload(name)\n            except Exception as e:\n                logger.warning(f\"\u91cd\u8f7d\u6a21\u5757\u5931\u8d25: {name} - {e}\")\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager-functions","title":"Functions","text":""},{"location":"api/manager/#symphra_modules.manager.ModuleManager.__init__","title":"<code>__init__(module_dirs=None, exclude_modules=None)</code>","text":"<p>\u521d\u59cb\u5316\u6a21\u5757\u7ba1\u7406\u5668.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>module_dirs</code> <code>list[str] | None</code> <p>\u6a21\u5757\u76ee\u5f55\u5217\u8868\uff0c\u9ed8\u8ba4\u4e3a [\"modules\"]</p> <code>None</code> <code>exclude_modules</code> <code>set[str] | None</code> <p>\u6392\u9664\u7684\u6a21\u5757\u540d\u79f0\u96c6\u5408\uff08\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def __init__(\n    self,\n    module_dirs: list[str] | None = None,\n    exclude_modules: set[str] | None = None,\n) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u6a21\u5757\u7ba1\u7406\u5668.\n\n    Args:\n        module_dirs: \u6a21\u5757\u76ee\u5f55\u5217\u8868\uff0c\u9ed8\u8ba4\u4e3a [\"modules\"]\n        exclude_modules: \u6392\u9664\u7684\u6a21\u5757\u540d\u79f0\u96c6\u5408\uff08\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\n    \"\"\"\n    self.registry = ModuleRegistry()\n    self.module_dirs = module_dirs if module_dirs is not None else [\"modules\"]\n    # \u6392\u9664\u5217\u8868\uff1a\u7528\u4e8e\u5ffd\u7565\u5e76\u975e\u771f\u6b63\u6a21\u5757\u7684\u76ee\u5f55/\u5305\uff08\u4f8b\u5982 common \u4e3a\u901a\u7528\u57fa\u7c7b\u96c6\u5408\uff09\n    _exmods = exclude_modules or {\"common\"}\n    self.exclude_modules = {m.lower() for m in _exmods}\n    self._directory_loader = DirectoryLoader()\n    self._package_loader = PackageLoader()\n    self._modules_cache: dict[str, dict[str, type[ModuleInterface]]] = {}\n    self._discover_cache: dict[str, list[str]] = {}\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.discover_modules","title":"<code>discover_modules(source=None, source_type='directory')</code>","text":"<p>\u53d1\u73b0\u53ef\u7528\u6a21\u5757\u540d\u79f0\u5217\u8868.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>source</code> <code>str | None</code> <p>\u6a21\u5757\u6e90\uff08\u53ef\u9009\uff09</p> <code>None</code> <code>source_type</code> <code>str</code> <p>\u6e90\u7c7b\u578b</p> <code>'directory'</code> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u6a21\u5757\u540d\u79f0\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def discover_modules(self, source: str | None = None, source_type: str = \"directory\") -&gt; list[str]:\n    \"\"\"\u53d1\u73b0\u53ef\u7528\u6a21\u5757\u540d\u79f0\u5217\u8868.\n\n    Args:\n        source: \u6a21\u5757\u6e90\uff08\u53ef\u9009\uff09\n        source_type: \u6e90\u7c7b\u578b\n\n    Returns:\n        \u6a21\u5757\u540d\u79f0\u5217\u8868\n    \"\"\"\n    discovered: list[str] = []\n    if source:\n        try:\n            if source_type == \"directory\":\n                names = self._discover_from_directory(source)\n            elif source_type == \"package\":\n                names = self._package_loader.discover(source)\n            else:\n                names = []\n            discovered.extend(names)\n        except Exception as e:\n            logger.warning(f\"\u53d1\u73b0\u6a21\u5757\u5931\u8d25: {e}\")\n        # \u8fc7\u6ee4\u6392\u9664\u5217\u8868\n        filtered = [n for n in set(discovered) if n.lower() not in self.exclude_modules]\n        return sorted(filtered)\n\n    # \u904d\u5386\u9ed8\u8ba4\u76ee\u5f55\n    for module_dir in self.module_dirs:\n        try:\n            names = self._discover_from_directory(module_dir)\n            discovered.extend(names)\n        except Exception as e:\n            logger.warning(f\"\u65e0\u6cd5\u5728\u76ee\u5f55 {module_dir} \u4e2d\u53d1\u73b0\u6a21\u5757: {e}\")\n    # \u8fc7\u6ee4\u6392\u9664\u5217\u8868\n    filtered = [n for n in set(discovered) if n.lower() not in self.exclude_modules]\n    return sorted(filtered)\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.get_module","title":"<code>get_module(name)</code>","text":"<p>\u83b7\u53d6\u5df2\u52a0\u8f7d\u7684\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleInterface</code> <p>\u6a21\u5757\u5b9e\u4f8b</p> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleNotFoundException</code> <p>\u6a21\u5757\u672a\u627e\u5230\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def get_module(self, name: str) -&gt; ModuleInterface:\n    \"\"\"\u83b7\u53d6\u5df2\u52a0\u8f7d\u7684\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u6a21\u5757\u5b9e\u4f8b\n\n    Raises:\n        ModuleNotFoundException: \u6a21\u5757\u672a\u627e\u5230\u65f6\u629b\u51fa\n    \"\"\"\n    module = self.registry.get(name)\n    if module is None:\n        raise ModuleNotFoundException(f\"\u6a21\u5757\u672a\u627e\u5230: {name}\")\n    return module\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.install_module","title":"<code>install_module(name, config=None, source=None)</code>","text":"<p>\u5b89\u88c5\u6307\u5b9a\u6a21\u5757\uff1a\u5fc5\u8981\u65f6\u81ea\u52a8\u52a0\u8f7d\u540e\u518d\u5b89\u88c5.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>config</code> <code>dict[str, Any] | None</code> <p>\u914d\u7f6e\u5b57\u5178\uff08\u53ef\u9009\uff09</p> <code>None</code> <code>source</code> <code>str | None</code> <p>\u6a21\u5757\u6e90\uff08\u53ef\u9009\uff09</p> <code>None</code> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def install_module(self, name: str, config: dict[str, Any] | None = None, source: str | None = None) -&gt; None:\n    \"\"\"\u5b89\u88c5\u6307\u5b9a\u6a21\u5757\uff1a\u5fc5\u8981\u65f6\u81ea\u52a8\u52a0\u8f7d\u540e\u518d\u5b89\u88c5.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n        config: \u914d\u7f6e\u5b57\u5178\uff08\u53ef\u9009\uff09\n        source: \u6a21\u5757\u6e90\uff08\u53ef\u9009\uff09\n    \"\"\"\n    if not self.registry.is_loaded(name):\n        self.load_module(name, source)\n    self.registry.install(name, config or {})\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.is_module_loaded","title":"<code>is_module_loaded(name)</code>","text":"<p>\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u52a0\u8f7d.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>bool</code> <p>\u662f\u5426\u5df2\u52a0\u8f7d</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def is_module_loaded(self, name: str) -&gt; bool:\n    \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u52a0\u8f7d.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u662f\u5426\u5df2\u52a0\u8f7d\n    \"\"\"\n    return self.registry.is_loaded(name)\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.list_installed_modules","title":"<code>list_installed_modules()</code>","text":"<p>\u5217\u51fa\u5df2\u5b89\u88c5\uff08\u5305\u542b installed/started/stopped\uff09\u7684\u6a21\u5757\u540d\u79f0.</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u5df2\u5b89\u88c5\u6a21\u5757\u540d\u79f0\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def list_installed_modules(self) -&gt; list[str]:\n    \"\"\"\u5217\u51fa\u5df2\u5b89\u88c5\uff08\u5305\u542b installed/started/stopped\uff09\u7684\u6a21\u5757\u540d\u79f0.\n\n    Returns:\n        \u5df2\u5b89\u88c5\u6a21\u5757\u540d\u79f0\u5217\u8868\n    \"\"\"\n    names: set[str] = set()\n    for st in (ModuleState.INSTALLED, ModuleState.STARTED, ModuleState.STOPPED):\n        try:\n            names.update(self.registry.list_modules_by_state(st))\n        except Exception as e:\n            logger.debug(f\"\u5217\u51fa\u67d0\u72b6\u6001\u6a21\u5757\u5931\u8d25: {st} - {e}\")\n            continue\n    return sorted(names)\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.list_modules","title":"<code>list_modules()</code>","text":"<p>\u5217\u51fa\u6240\u6709\u5df2\u52a0\u8f7d\u7684\u6a21\u5757.</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u6a21\u5757\u540d\u79f0\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def list_modules(self) -&gt; list[str]:\n    \"\"\"\u5217\u51fa\u6240\u6709\u5df2\u52a0\u8f7d\u7684\u6a21\u5757.\n\n    Returns:\n        \u6a21\u5757\u540d\u79f0\u5217\u8868\n    \"\"\"\n    return self.registry.list_modules()\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.load_all_modules","title":"<code>load_all_modules()</code>","text":"<p>\u52a0\u8f7d\u6240\u6709\u53ef\u7528\u6a21\u5757.</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>dict[str, ModuleInterface]</code> <p>\u6a21\u5757\u540d\u5230\u6a21\u5757\u5b9e\u4f8b\u7684\u6620\u5c04</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def load_all_modules(self) -&gt; dict[str, ModuleInterface]:\n    \"\"\"\u52a0\u8f7d\u6240\u6709\u53ef\u7528\u6a21\u5757.\n\n    Returns:\n        \u6a21\u5757\u540d\u5230\u6a21\u5757\u5b9e\u4f8b\u7684\u6620\u5c04\n    \"\"\"\n    modules: dict[str, ModuleInterface] = {}\n    available_modules = self.discover_modules()\n\n    for module_name in available_modules:\n        try:\n            module = self.load_module(module_name)\n            modules[module_name] = module\n        except Exception as e:\n            # \u5bf9\u4e8e\u88ab\u6392\u9664\u7684\"\u975e\u6a21\u5757\u76ee\u5f55\"\uff0c\u4ec5\u8bb0\u5f55\u544a\u8b66\u4ee5\u964d\u4f4e\u566a\u97f3\n            if module_name.lower() in self.exclude_modules:\n                logger.warning(f\"\u5ffd\u7565\u975e\u6a21\u5757\u76ee\u5f55: {module_name}\")\n            else:\n                logger.error(f\"\u52a0\u8f7d\u6a21\u5757\u5931\u8d25: {module_name} - {e}\")\n\n    return modules\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.load_module","title":"<code>load_module(name, source=None, source_type='directory')</code>","text":"<p>\u52a0\u8f7d\u6a21\u5757\u5e76\u6ce8\u518c\u5230\u6ce8\u518c\u8868\uff0c\u8fd4\u56de\u6a21\u5757\u5b9e\u4f8b.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>source</code> <code>str | None</code> <p>\u6a21\u5757\u6e90\uff08\u53ef\u9009\uff09</p> <code>None</code> <code>source_type</code> <code>str</code> <p>\u6e90\u7c7b\u578b\uff08\"directory\" \u6216 \"package\"\uff09</p> <code>'directory'</code> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleInterface</code> <p>\u6a21\u5757\u5b9e\u4f8b</p> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleNotFoundException</code> <p>\u6a21\u5757\u672a\u627e\u5230\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def load_module(self, name: str, source: str | None = None, source_type: str = \"directory\") -&gt; ModuleInterface:\n    \"\"\"\u52a0\u8f7d\u6a21\u5757\u5e76\u6ce8\u518c\u5230\u6ce8\u518c\u8868\uff0c\u8fd4\u56de\u6a21\u5757\u5b9e\u4f8b.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n        source: \u6a21\u5757\u6e90\uff08\u53ef\u9009\uff09\n        source_type: \u6e90\u7c7b\u578b\uff08\"directory\" \u6216 \"package\"\uff09\n\n    Returns:\n        \u6a21\u5757\u5b9e\u4f8b\n\n    Raises:\n        ModuleNotFoundException: \u6a21\u5757\u672a\u627e\u5230\u65f6\u629b\u51fa\n    \"\"\"\n    # \u5df2\u52a0\u8f7d\u5219\u76f4\u63a5\u8fd4\u56de\n    if self.registry.is_loaded(name):\n        existing = self.registry.get(name)\n        assert existing is not None\n        return existing\n\n    found_module: type[ModuleInterface] | None = None\n\n    if source:\n        if source_type == \"directory\":\n            modules = self._get_modules_from_directory(source)\n            found_module = self._match_module_by_name(modules, name)\n        elif source_type == \"package\":\n            modules = self._package_loader.load(source)\n            found_module = modules.get(name) or modules.get(f\"{name}Module\")\n    else:\n        # \u4ece\u914d\u7f6e\u7684\u76ee\u5f55\u67e5\u627e\n        for module_dir in self.module_dirs:\n            try:\n                modules = self._get_modules_from_directory(module_dir)\n                found_module = self._match_module_by_name(modules, name)\n                if found_module:\n                    break\n            except Exception as e:\n                logger.warning(f\"\u65e0\u6cd5\u4ece\u76ee\u5f55 {module_dir} \u52a0\u8f7d\u6a21\u5757: {e}\")\n\n    if not found_module:\n        raise ModuleNotFoundException(f\"\u627e\u4e0d\u5230\u6a21\u5757: {name}\", module_name=name)\n\n    # \u6ce8\u518c\u6a21\u5757\uff08\u5c06\u7c7b\u4f20\u5165\u6ce8\u518c\u8868\uff0c\u7531\u6ce8\u518c\u8868\u8d1f\u8d23\u5b9e\u4f8b\u5316\u4e0e\u751f\u547d\u5468\u671f\uff09\n    module_instance = self.registry.register(name, found_module)  # type: ignore[arg-type]\n    return module_instance\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.reload_all_modules","title":"<code>reload_all_modules()</code>","text":"<p>\u91cd\u8f7d\u6240\u6709\u5df2\u52a0\u8f7d\u7684\u6a21\u5757.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def reload_all_modules(self) -&gt; None:\n    \"\"\"\u91cd\u8f7d\u6240\u6709\u5df2\u52a0\u8f7d\u7684\u6a21\u5757.\"\"\"\n    for name in self.list_modules():\n        try:\n            self.registry.reload(name)\n        except Exception as e:\n            logger.warning(f\"\u91cd\u8f7d\u6a21\u5757\u5931\u8d25: {name} - {e}\")\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.reload_module","title":"<code>reload_module(name)</code>","text":"<p>\u91cd\u8f7d\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def reload_module(self, name: str) -&gt; None:\n    \"\"\"\u91cd\u8f7d\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n    \"\"\"\n    # \u5931\u6548\u7f13\u5b58\n    self._invalidate_directory_cache()\n    if not self.registry.is_loaded(name):\n        self.load_module(name)\n    self.registry.reload(name)\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.start_all_modules","title":"<code>start_all_modules()</code>","text":"<p>\u542f\u52a8\u6240\u6709\u5df2\u5b89\u88c5/\u5df2\u505c\u6b62\u7684\u6a21\u5757.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def start_all_modules(self) -&gt; None:\n    \"\"\"\u542f\u52a8\u6240\u6709\u5df2\u5b89\u88c5/\u5df2\u505c\u6b62\u7684\u6a21\u5757.\"\"\"\n    for name in self.list_installed_modules():\n        try:\n            self.registry.start(name)\n        except Exception as e:\n            logger.warning(f\"\u542f\u52a8\u6a21\u5757\u5931\u8d25: {name} - {e}\")\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.start_module","title":"<code>start_module(name)</code>","text":"<p>\u542f\u52a8\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def start_module(self, name: str) -&gt; None:\n    \"\"\"\u542f\u52a8\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n    \"\"\"\n    # \u82e5\u672a\u52a0\u8f7d\uff0c\u5c1d\u8bd5\u52a0\u8f7d\n    if not self.registry.is_loaded(name):\n        self.load_module(name)\n    self.registry.start(name)\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.stop_all_modules","title":"<code>stop_all_modules()</code>","text":"<p>\u505c\u6b62\u6240\u6709\u8fd0\u884c\u4e2d\u7684\u6a21\u5757.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def stop_all_modules(self) -&gt; None:\n    \"\"\"\u505c\u6b62\u6240\u6709\u8fd0\u884c\u4e2d\u7684\u6a21\u5757.\"\"\"\n    for name in self.registry.list_modules_by_state(ModuleState.STARTED):\n        try:\n            self.registry.stop(name)\n        except Exception as e:\n            logger.warning(f\"\u505c\u6b62\u6a21\u5757\u5931\u8d25: {name} - {e}\")\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.stop_module","title":"<code>stop_module(name)</code>","text":"<p>\u505c\u6b62\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def stop_module(self, name: str) -&gt; None:\n    \"\"\"\u505c\u6b62\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n    \"\"\"\n    self.registry.stop(name)\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.uninstall_module","title":"<code>uninstall_module(name)</code>","text":"<p>\u5378\u8f7d\u6a21\u5757\uff08\u82e5\u5728\u8fd0\u884c\u5219\u5148\u505c\u6b62\u7531\u6ce8\u518c\u8868\u5904\u7406\uff09.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def uninstall_module(self, name: str) -&gt; None:\n    \"\"\"\u5378\u8f7d\u6a21\u5757\uff08\u82e5\u5728\u8fd0\u884c\u5219\u5148\u505c\u6b62\u7531\u6ce8\u518c\u8868\u5904\u7406\uff09.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n    \"\"\"\n    self.registry.uninstall(name)\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager.ModuleManager.unload_module","title":"<code>unload_module(name)</code>","text":"<p>\u5378\u8f7d\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/manager.py</code> <pre><code>def unload_module(self, name: str) -&gt; None:\n    \"\"\"\u5378\u8f7d\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n    \"\"\"\n    try:\n        self.registry.unregister(name)\n        logger.info(f\"\u6a21\u5757\u5df2\u5378\u8f7d: {name}\")\n    except ModuleNotFoundException:\n        # \u6a21\u5757\u672a\u52a0\u8f7d\uff0c\u5ffd\u7565\u9519\u8bef\n        logger.debug(f\"\u5c1d\u8bd5\u5378\u8f7d\u672a\u52a0\u8f7d\u7684\u6a21\u5757: {name}\")\n</code></pre>"},{"location":"api/manager/#symphra_modules.manager-functions","title":"Functions","text":""},{"location":"api/registry/","title":"\u6ce8\u518c\u8868","text":""},{"location":"api/registry/#symphra_modules.registry","title":"<code>registry</code>","text":"<p>\u6a21\u5757\u6ce8\u518c\u8868\u5b9e\u73b0.</p>"},{"location":"api/registry/#symphra_modules.registry-classes","title":"Classes","text":""},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry","title":"<code>ModuleRegistry</code>","text":"<p>\u6a21\u5757\u6ce8\u518c\u8868\uff0c\u7ba1\u7406\u6a21\u5757\u5b9e\u4f8b\u548c\u751f\u547d\u5468\u671f.</p> Source code in <code>src/symphra_modules/registry.py</code> <pre><code>class ModuleRegistry:\n    \"\"\"\u6a21\u5757\u6ce8\u518c\u8868\uff0c\u7ba1\u7406\u6a21\u5757\u5b9e\u4f8b\u548c\u751f\u547d\u5468\u671f.\"\"\"\n\n    def __init__(self) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u6ce8\u518c\u8868.\"\"\"\n        self._modules: dict[str, ModuleInterface] = {}\n        self._module_info: dict[str, ModuleInfo] = {}\n\n    def register(\n        self, name: str, module_class: type[BaseModule], config: dict[str, Any] | None = None\n    ) -&gt; ModuleInterface:\n        \"\"\"\u6ce8\u518c\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n            module_class: \u6a21\u5757\u7c7b\n            config: \u521d\u59cb\u914d\u7f6e\uff08\u53ef\u9009\uff09\n\n        Returns:\n            \u6a21\u5757\u5b9e\u4f8b\n\n        Raises:\n            ModuleStateError: \u6a21\u5757\u5df2\u6ce8\u518c\u65f6\u629b\u51fa\n        \"\"\"\n        if name in self._modules:\n            raise ModuleStateError(f\"\u6a21\u5757 {name} \u5df2\u7ecf\u6ce8\u518c\")\n\n        module_instance = module_class(config)\n        module_instance.bootstrap()  # \u8c03\u7528\u5f15\u5bfc\u65b9\u6cd5\n\n        # \u521b\u5efa\u6a21\u5757\u4fe1\u606f\n        module_info = ModuleInfo(\n            metadata=module_instance.metadata,\n            state=ModuleState.LOADED,\n            loaded_at=now(),\n        )\n        self._modules[name] = module_instance\n        self._module_info[name] = module_info\n        logger.info(f\"\u6a21\u5757 {name} \u6ce8\u518c\u6210\u529f\")\n\n        return module_instance\n\n    def unregister(self, name: str) -&gt; None:\n        \"\"\"\u6ce8\u9500\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n        \"\"\"\n        _, info = self._get_module_and_info(name)\n        if info.state == ModuleState.STARTED:\n            self.stop(name)\n\n        del self._modules[name]\n        del self._module_info[name]\n\n        logger.info(f\"\u6a21\u5757 {name} \u6ce8\u9500\u6210\u529f\")\n\n    def install(self, name: str, config: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u5b89\u88c5\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n            config: \u5b89\u88c5\u914d\u7f6e\uff08\u53ef\u9009\uff09\n\n        Raises:\n            ModuleStateError: \u72b6\u6001\u4e0d\u6b63\u786e\u65f6\u629b\u51fa\n        \"\"\"\n        module, info = self._get_module_and_info(name)\n\n        # \u5df2\u52a0\u8f7d\u7684\u6a21\u5757\u624d\u5141\u8bb8\u5b89\u88c5\n        if info.state != ModuleState.LOADED:\n            raise ModuleStateError(\n                f\"\u6a21\u5757 {name} \u72b6\u6001\u9519\u8bef\uff0c\u5f53\u524d\u72b6\u6001\u4e3a {info.state}\uff0c\u671f\u671b\u72b6\u6001\u4e3a {ModuleState.LOADED}\",\n                module_name=name,\n                current_state=info.state,\n                expected_states=[ModuleState.LOADED],\n            )\n\n        try:\n            module.install(config)\n            info.state = ModuleState.INSTALLED\n            info.installed_at = now()\n\n            if config:\n                module.configure(config)\n                info.config = config\n\n            logger.info(f\"\u6a21\u5757 {name} \u5b89\u88c5\u6210\u529f\")\n        except Exception as e:\n            info.state = ModuleState.ERROR\n            raise ModuleStateError(f\"\u6a21\u5757 {name} \u5b89\u88c5\u5931\u8d25: {e}\", module_name=name) from e\n\n    def uninstall(self, name: str) -&gt; None:\n        \"\"\"\u5378\u8f7d\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Raises:\n            ModuleStateError: \u72b6\u6001\u4e0d\u6b63\u786e\u65f6\u629b\u51fa\n        \"\"\"\n        module, info = self._get_module_and_info(name)\n\n        if info.state not in [\n            ModuleState.INSTALLED,\n            ModuleState.STOPPED,\n        ]:\n            raise ModuleStateError(\n                f\"\u65e0\u6cd5\u5378\u8f7d\u6a21\u5757 {name}\uff0c\u5f53\u524d\u72b6\u6001\u4e3a {info.state}\",\n                module_name=name,\n                current_state=info.state,\n                expected_states=[ModuleState.INSTALLED, ModuleState.STOPPED],\n            )\n        try:\n            module.uninstall()\n            info.state = ModuleState.LOADED\n            info.installed_at = None\n            info.started_at = None\n            logger.info(f\"\u6a21\u5757 {name} \u5378\u8f7d\u6210\u529f\")\n        except Exception as e:\n            info.state = ModuleState.ERROR\n            raise ModuleStateError(f\"\u6a21\u5757 {name} \u5378\u8f7d\u5931\u8d25: {e}\", module_name=name) from e\n\n    def start(self, name: str) -&gt; None:\n        \"\"\"\u542f\u52a8\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Raises:\n            ModuleStateError: \u72b6\u6001\u4e0d\u6b63\u786e\u65f6\u629b\u51fa\n        \"\"\"\n        module, info = self._get_module_and_info(name)\n\n        if info.state not in [ModuleState.INSTALLED, ModuleState.STOPPED]:\n            raise ModuleStateError(\n                f\"\u65e0\u6cd5\u542f\u52a8\u6a21\u5757 {name}\uff0c\u5f53\u524d\u72b6\u6001\u4e3a {info.state}\",\n                module_name=name,\n                current_state=info.state,\n                expected_states=[ModuleState.INSTALLED, ModuleState.STOPPED],\n            )\n        try:\n            module.start()\n            info.state = ModuleState.STARTED\n            info.started_at = now()\n\n            logger.info(f\"\u6a21\u5757 {name} \u542f\u52a8\u6210\u529f\")\n\n        except Exception as e:\n            info.state = ModuleState.ERROR\n            raise ModuleStateError(f\"\u6a21\u5757 {name} \u542f\u52a8\u5931\u8d25: {e}\", module_name=name) from e\n\n    def stop(self, name: str) -&gt; None:\n        \"\"\"\u505c\u6b62\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Raises:\n            ModuleStateError: \u505c\u6b62\u5931\u8d25\u65f6\u629b\u51fa\n        \"\"\"\n        module, info = self._get_module_and_info(name)\n\n        if info.state != ModuleState.STARTED:\n            return  # \u6a21\u5757\u672a\u542f\u52a8\uff0c\u65e0\u9700\u505c\u6b62\n\n        try:\n            module.stop()\n            info.state = ModuleState.STOPPED\n            info.started_at = None\n\n            logger.info(f\"\u6a21\u5757 {name} \u505c\u6b62\u6210\u529f\")\n\n        except Exception as e:\n            info.state = ModuleState.ERROR\n            raise ModuleStateError(f\"\u6a21\u5757 {name} \u505c\u6b62\u5931\u8d25: {e}\", module_name=name) from e\n\n    def reload(self, name: str) -&gt; None:\n        \"\"\"\u91cd\u8f7d\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Raises:\n            ModuleStateError: \u91cd\u8f7d\u5931\u8d25\u65f6\u629b\u51fa\n        \"\"\"\n        module, _ = self._get_module_and_info(name)\n        try:\n            module.reload()\n            logger.info(f\"\u6a21\u5757 {name} \u91cd\u8f7d\u6210\u529f\")\n        except Exception as e:\n            self._module_info[name].state = ModuleState.ERROR\n            raise ModuleStateError(f\"\u6a21\u5757 {name} \u91cd\u8f7d\u5931\u8d25: {e}\", module_name=name) from e\n\n    def configure(self, name: str, config: dict[str, Any] | None = None) -&gt; None:\n        \"\"\"\u914d\u7f6e\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n            config: \u914d\u7f6e\u5b57\u5178\uff08\u53ef\u9009\uff09\n\n        Raises:\n            ModuleStateError: \u914d\u7f6e\u5931\u8d25\u65f6\u629b\u51fa\n        \"\"\"\n        module, info = self._get_module_and_info(name)\n\n        try:\n            module.configure(config)\n            info.config = config or {}\n            logger.info(f\"\u6a21\u5757 {name} \u914d\u7f6e\u6210\u529f\")\n        except Exception as e:\n            raise ModuleStateError(f\"\u6a21\u5757 {name} \u914d\u7f6e\u5931\u8d25: {e}\", module_name=name) from e\n\n    def get(self, name: str) -&gt; ModuleInterface | None:\n        \"\"\"\u83b7\u53d6\u6a21\u5757\u5b9e\u4f8b.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u6a21\u5757\u5b9e\u4f8b\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de None\n        \"\"\"\n        return self._modules.get(name)\n\n    def get_info(self, name: str) -&gt; ModuleInfo | None:\n        \"\"\"\u83b7\u53d6\u6a21\u5757\u4fe1\u606f.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u6a21\u5757\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de None\n        \"\"\"\n        return self._module_info.get(name)\n\n    def list_modules(self) -&gt; list[str]:\n        \"\"\"\u5217\u51fa\u6240\u6709\u5df2\u52a0\u8f7d\u6a21\u5757\u7684\u540d\u79f0.\n\n        Returns:\n            \u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n        return list(self._modules.keys())\n\n    def list_modules_by_state(self, state: ModuleState) -&gt; list[str]:\n        \"\"\"\u6839\u636e\u72b6\u6001\u5217\u51fa\u6a21\u5757\u540d\u79f0.\n\n        Args:\n            state: \u6a21\u5757\u72b6\u6001\n\n        Returns:\n            \u7b26\u5408\u72b6\u6001\u7684\u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n        return [name for name, info in self._module_info.items() if info.state == state]\n\n    def get_module_states(self) -&gt; dict[str, ModuleState]:\n        \"\"\"\u83b7\u53d6\u6240\u6709\u6a21\u5757\u72b6\u6001.\n\n        Returns:\n            \u6a21\u5757\u540d\u5230\u72b6\u6001\u7684\u6620\u5c04\n        \"\"\"\n        return {name: info.state for name, info in self._module_info.items()}\n\n    def is_installed(self, name: str) -&gt; bool:\n        \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u5b89\u88c5.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u662f\u5426\u5df2\u5b89\u88c5\n        \"\"\"\n        info = self.get_info(name)\n        return info is not None and info.state in [\n            ModuleState.INSTALLED,\n            ModuleState.STARTED,\n            ModuleState.STOPPED,\n        ]\n\n    def is_loaded(self, name: str) -&gt; bool:\n        \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u52a0\u8f7d.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u662f\u5426\u5df2\u52a0\u8f7d\n        \"\"\"\n        return name in self._modules\n\n    def is_started(self, name: str) -&gt; bool:\n        \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u542f\u52a8.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u662f\u5426\u5df2\u542f\u52a8\n        \"\"\"\n        info = self.get_info(name)\n        return info is not None and info.state == ModuleState.STARTED\n\n    def _ensure_module_loaded(self, name: str) -&gt; None:\n        \"\"\"\u786e\u4fdd\u6a21\u5757\u5df2\u52a0\u8f7d.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Raises:\n            ModuleNotFoundException: \u6a21\u5757\u672a\u6ce8\u518c\u65f6\u629b\u51fa\n        \"\"\"\n        if name not in self._modules:\n            raise ModuleNotFoundException(f\"\u6a21\u5757 {name} \u672a\u6ce8\u518c\", module_name=name)\n\n    def _get_module_and_info(self, name: str) -&gt; tuple[ModuleInterface, ModuleInfo]:\n        \"\"\"\u83b7\u53d6\u6a21\u5757\u5b9e\u4f8b\u548c\u4fe1\u606f.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            (\u6a21\u5757\u5b9e\u4f8b, \u6a21\u5757\u4fe1\u606f)\u5143\u7ec4\n\n        Raises:\n            ModuleNotFoundException: \u6a21\u5757\u672a\u6ce8\u518c\u65f6\u629b\u51fa\n        \"\"\"\n        self._ensure_module_loaded(name)\n        return self._modules[name], self._module_info[name]\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry-functions","title":"Functions","text":""},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.__init__","title":"<code>__init__()</code>","text":"<p>\u521d\u59cb\u5316\u6ce8\u518c\u8868.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def __init__(self) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u6ce8\u518c\u8868.\"\"\"\n    self._modules: dict[str, ModuleInterface] = {}\n    self._module_info: dict[str, ModuleInfo] = {}\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.configure","title":"<code>configure(name, config=None)</code>","text":"<p>\u914d\u7f6e\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>config</code> <code>dict[str, Any] | None</code> <p>\u914d\u7f6e\u5b57\u5178\uff08\u53ef\u9009\uff09</p> <code>None</code> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleStateError</code> <p>\u914d\u7f6e\u5931\u8d25\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def configure(self, name: str, config: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u914d\u7f6e\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n        config: \u914d\u7f6e\u5b57\u5178\uff08\u53ef\u9009\uff09\n\n    Raises:\n        ModuleStateError: \u914d\u7f6e\u5931\u8d25\u65f6\u629b\u51fa\n    \"\"\"\n    module, info = self._get_module_and_info(name)\n\n    try:\n        module.configure(config)\n        info.config = config or {}\n        logger.info(f\"\u6a21\u5757 {name} \u914d\u7f6e\u6210\u529f\")\n    except Exception as e:\n        raise ModuleStateError(f\"\u6a21\u5757 {name} \u914d\u7f6e\u5931\u8d25: {e}\", module_name=name) from e\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.get","title":"<code>get(name)</code>","text":"<p>\u83b7\u53d6\u6a21\u5757\u5b9e\u4f8b.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleInterface | None</code> <p>\u6a21\u5757\u5b9e\u4f8b\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de None</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def get(self, name: str) -&gt; ModuleInterface | None:\n    \"\"\"\u83b7\u53d6\u6a21\u5757\u5b9e\u4f8b.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u6a21\u5757\u5b9e\u4f8b\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de None\n    \"\"\"\n    return self._modules.get(name)\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.get_info","title":"<code>get_info(name)</code>","text":"<p>\u83b7\u53d6\u6a21\u5757\u4fe1\u606f.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleInfo | None</code> <p>\u6a21\u5757\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de None</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def get_info(self, name: str) -&gt; ModuleInfo | None:\n    \"\"\"\u83b7\u53d6\u6a21\u5757\u4fe1\u606f.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u6a21\u5757\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de None\n    \"\"\"\n    return self._module_info.get(name)\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.get_module_states","title":"<code>get_module_states()</code>","text":"<p>\u83b7\u53d6\u6240\u6709\u6a21\u5757\u72b6\u6001.</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>dict[str, ModuleState]</code> <p>\u6a21\u5757\u540d\u5230\u72b6\u6001\u7684\u6620\u5c04</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def get_module_states(self) -&gt; dict[str, ModuleState]:\n    \"\"\"\u83b7\u53d6\u6240\u6709\u6a21\u5757\u72b6\u6001.\n\n    Returns:\n        \u6a21\u5757\u540d\u5230\u72b6\u6001\u7684\u6620\u5c04\n    \"\"\"\n    return {name: info.state for name, info in self._module_info.items()}\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.install","title":"<code>install(name, config=None)</code>","text":"<p>\u5b89\u88c5\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>config</code> <code>dict[str, Any] | None</code> <p>\u5b89\u88c5\u914d\u7f6e\uff08\u53ef\u9009\uff09</p> <code>None</code> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleStateError</code> <p>\u72b6\u6001\u4e0d\u6b63\u786e\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def install(self, name: str, config: dict[str, Any] | None = None) -&gt; None:\n    \"\"\"\u5b89\u88c5\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n        config: \u5b89\u88c5\u914d\u7f6e\uff08\u53ef\u9009\uff09\n\n    Raises:\n        ModuleStateError: \u72b6\u6001\u4e0d\u6b63\u786e\u65f6\u629b\u51fa\n    \"\"\"\n    module, info = self._get_module_and_info(name)\n\n    # \u5df2\u52a0\u8f7d\u7684\u6a21\u5757\u624d\u5141\u8bb8\u5b89\u88c5\n    if info.state != ModuleState.LOADED:\n        raise ModuleStateError(\n            f\"\u6a21\u5757 {name} \u72b6\u6001\u9519\u8bef\uff0c\u5f53\u524d\u72b6\u6001\u4e3a {info.state}\uff0c\u671f\u671b\u72b6\u6001\u4e3a {ModuleState.LOADED}\",\n            module_name=name,\n            current_state=info.state,\n            expected_states=[ModuleState.LOADED],\n        )\n\n    try:\n        module.install(config)\n        info.state = ModuleState.INSTALLED\n        info.installed_at = now()\n\n        if config:\n            module.configure(config)\n            info.config = config\n\n        logger.info(f\"\u6a21\u5757 {name} \u5b89\u88c5\u6210\u529f\")\n    except Exception as e:\n        info.state = ModuleState.ERROR\n        raise ModuleStateError(f\"\u6a21\u5757 {name} \u5b89\u88c5\u5931\u8d25: {e}\", module_name=name) from e\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.is_installed","title":"<code>is_installed(name)</code>","text":"<p>\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u5b89\u88c5.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>bool</code> <p>\u662f\u5426\u5df2\u5b89\u88c5</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def is_installed(self, name: str) -&gt; bool:\n    \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u5b89\u88c5.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u662f\u5426\u5df2\u5b89\u88c5\n    \"\"\"\n    info = self.get_info(name)\n    return info is not None and info.state in [\n        ModuleState.INSTALLED,\n        ModuleState.STARTED,\n        ModuleState.STOPPED,\n    ]\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.is_loaded","title":"<code>is_loaded(name)</code>","text":"<p>\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u52a0\u8f7d.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>bool</code> <p>\u662f\u5426\u5df2\u52a0\u8f7d</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def is_loaded(self, name: str) -&gt; bool:\n    \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u52a0\u8f7d.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u662f\u5426\u5df2\u52a0\u8f7d\n    \"\"\"\n    return name in self._modules\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.is_started","title":"<code>is_started(name)</code>","text":"<p>\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u542f\u52a8.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>bool</code> <p>\u662f\u5426\u5df2\u542f\u52a8</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def is_started(self, name: str) -&gt; bool:\n    \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5df2\u542f\u52a8.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u662f\u5426\u5df2\u542f\u52a8\n    \"\"\"\n    info = self.get_info(name)\n    return info is not None and info.state == ModuleState.STARTED\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.list_modules","title":"<code>list_modules()</code>","text":"<p>\u5217\u51fa\u6240\u6709\u5df2\u52a0\u8f7d\u6a21\u5757\u7684\u540d\u79f0.</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u6a21\u5757\u540d\u79f0\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def list_modules(self) -&gt; list[str]:\n    \"\"\"\u5217\u51fa\u6240\u6709\u5df2\u52a0\u8f7d\u6a21\u5757\u7684\u540d\u79f0.\n\n    Returns:\n        \u6a21\u5757\u540d\u79f0\u5217\u8868\n    \"\"\"\n    return list(self._modules.keys())\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.list_modules_by_state","title":"<code>list_modules_by_state(state)</code>","text":"<p>\u6839\u636e\u72b6\u6001\u5217\u51fa\u6a21\u5757\u540d\u79f0.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>state</code> <code>ModuleState</code> <p>\u6a21\u5757\u72b6\u6001</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u7b26\u5408\u72b6\u6001\u7684\u6a21\u5757\u540d\u79f0\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def list_modules_by_state(self, state: ModuleState) -&gt; list[str]:\n    \"\"\"\u6839\u636e\u72b6\u6001\u5217\u51fa\u6a21\u5757\u540d\u79f0.\n\n    Args:\n        state: \u6a21\u5757\u72b6\u6001\n\n    Returns:\n        \u7b26\u5408\u72b6\u6001\u7684\u6a21\u5757\u540d\u79f0\u5217\u8868\n    \"\"\"\n    return [name for name, info in self._module_info.items() if info.state == state]\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.register","title":"<code>register(name, module_class, config=None)</code>","text":"<p>\u6ce8\u518c\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <code>module_class</code> <code>type[BaseModule]</code> <p>\u6a21\u5757\u7c7b</p> \u5fc5\u9700 <code>config</code> <code>dict[str, Any] | None</code> <p>\u521d\u59cb\u914d\u7f6e\uff08\u53ef\u9009\uff09</p> <code>None</code> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleInterface</code> <p>\u6a21\u5757\u5b9e\u4f8b</p> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleStateError</code> <p>\u6a21\u5757\u5df2\u6ce8\u518c\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def register(\n    self, name: str, module_class: type[BaseModule], config: dict[str, Any] | None = None\n) -&gt; ModuleInterface:\n    \"\"\"\u6ce8\u518c\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n        module_class: \u6a21\u5757\u7c7b\n        config: \u521d\u59cb\u914d\u7f6e\uff08\u53ef\u9009\uff09\n\n    Returns:\n        \u6a21\u5757\u5b9e\u4f8b\n\n    Raises:\n        ModuleStateError: \u6a21\u5757\u5df2\u6ce8\u518c\u65f6\u629b\u51fa\n    \"\"\"\n    if name in self._modules:\n        raise ModuleStateError(f\"\u6a21\u5757 {name} \u5df2\u7ecf\u6ce8\u518c\")\n\n    module_instance = module_class(config)\n    module_instance.bootstrap()  # \u8c03\u7528\u5f15\u5bfc\u65b9\u6cd5\n\n    # \u521b\u5efa\u6a21\u5757\u4fe1\u606f\n    module_info = ModuleInfo(\n        metadata=module_instance.metadata,\n        state=ModuleState.LOADED,\n        loaded_at=now(),\n    )\n    self._modules[name] = module_instance\n    self._module_info[name] = module_info\n    logger.info(f\"\u6a21\u5757 {name} \u6ce8\u518c\u6210\u529f\")\n\n    return module_instance\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.reload","title":"<code>reload(name)</code>","text":"<p>\u91cd\u8f7d\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleStateError</code> <p>\u91cd\u8f7d\u5931\u8d25\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def reload(self, name: str) -&gt; None:\n    \"\"\"\u91cd\u8f7d\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Raises:\n        ModuleStateError: \u91cd\u8f7d\u5931\u8d25\u65f6\u629b\u51fa\n    \"\"\"\n    module, _ = self._get_module_and_info(name)\n    try:\n        module.reload()\n        logger.info(f\"\u6a21\u5757 {name} \u91cd\u8f7d\u6210\u529f\")\n    except Exception as e:\n        self._module_info[name].state = ModuleState.ERROR\n        raise ModuleStateError(f\"\u6a21\u5757 {name} \u91cd\u8f7d\u5931\u8d25: {e}\", module_name=name) from e\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.start","title":"<code>start(name)</code>","text":"<p>\u542f\u52a8\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleStateError</code> <p>\u72b6\u6001\u4e0d\u6b63\u786e\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def start(self, name: str) -&gt; None:\n    \"\"\"\u542f\u52a8\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Raises:\n        ModuleStateError: \u72b6\u6001\u4e0d\u6b63\u786e\u65f6\u629b\u51fa\n    \"\"\"\n    module, info = self._get_module_and_info(name)\n\n    if info.state not in [ModuleState.INSTALLED, ModuleState.STOPPED]:\n        raise ModuleStateError(\n            f\"\u65e0\u6cd5\u542f\u52a8\u6a21\u5757 {name}\uff0c\u5f53\u524d\u72b6\u6001\u4e3a {info.state}\",\n            module_name=name,\n            current_state=info.state,\n            expected_states=[ModuleState.INSTALLED, ModuleState.STOPPED],\n        )\n    try:\n        module.start()\n        info.state = ModuleState.STARTED\n        info.started_at = now()\n\n        logger.info(f\"\u6a21\u5757 {name} \u542f\u52a8\u6210\u529f\")\n\n    except Exception as e:\n        info.state = ModuleState.ERROR\n        raise ModuleStateError(f\"\u6a21\u5757 {name} \u542f\u52a8\u5931\u8d25: {e}\", module_name=name) from e\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.stop","title":"<code>stop(name)</code>","text":"<p>\u505c\u6b62\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleStateError</code> <p>\u505c\u6b62\u5931\u8d25\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def stop(self, name: str) -&gt; None:\n    \"\"\"\u505c\u6b62\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Raises:\n        ModuleStateError: \u505c\u6b62\u5931\u8d25\u65f6\u629b\u51fa\n    \"\"\"\n    module, info = self._get_module_and_info(name)\n\n    if info.state != ModuleState.STARTED:\n        return  # \u6a21\u5757\u672a\u542f\u52a8\uff0c\u65e0\u9700\u505c\u6b62\n\n    try:\n        module.stop()\n        info.state = ModuleState.STOPPED\n        info.started_at = None\n\n        logger.info(f\"\u6a21\u5757 {name} \u505c\u6b62\u6210\u529f\")\n\n    except Exception as e:\n        info.state = ModuleState.ERROR\n        raise ModuleStateError(f\"\u6a21\u5757 {name} \u505c\u6b62\u5931\u8d25: {e}\", module_name=name) from e\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.uninstall","title":"<code>uninstall(name)</code>","text":"<p>\u5378\u8f7d\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleStateError</code> <p>\u72b6\u6001\u4e0d\u6b63\u786e\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def uninstall(self, name: str) -&gt; None:\n    \"\"\"\u5378\u8f7d\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Raises:\n        ModuleStateError: \u72b6\u6001\u4e0d\u6b63\u786e\u65f6\u629b\u51fa\n    \"\"\"\n    module, info = self._get_module_and_info(name)\n\n    if info.state not in [\n        ModuleState.INSTALLED,\n        ModuleState.STOPPED,\n    ]:\n        raise ModuleStateError(\n            f\"\u65e0\u6cd5\u5378\u8f7d\u6a21\u5757 {name}\uff0c\u5f53\u524d\u72b6\u6001\u4e3a {info.state}\",\n            module_name=name,\n            current_state=info.state,\n            expected_states=[ModuleState.INSTALLED, ModuleState.STOPPED],\n        )\n    try:\n        module.uninstall()\n        info.state = ModuleState.LOADED\n        info.installed_at = None\n        info.started_at = None\n        logger.info(f\"\u6a21\u5757 {name} \u5378\u8f7d\u6210\u529f\")\n    except Exception as e:\n        info.state = ModuleState.ERROR\n        raise ModuleStateError(f\"\u6a21\u5757 {name} \u5378\u8f7d\u5931\u8d25: {e}\", module_name=name) from e\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry.ModuleRegistry.unregister","title":"<code>unregister(name)</code>","text":"<p>\u6ce8\u9500\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/registry.py</code> <pre><code>def unregister(self, name: str) -&gt; None:\n    \"\"\"\u6ce8\u9500\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n    \"\"\"\n    _, info = self._get_module_and_info(name)\n    if info.state == ModuleState.STARTED:\n        self.stop(name)\n\n    del self._modules[name]\n    del self._module_info[name]\n\n    logger.info(f\"\u6a21\u5757 {name} \u6ce8\u9500\u6210\u529f\")\n</code></pre>"},{"location":"api/registry/#symphra_modules.registry-functions","title":"Functions","text":""},{"location":"api/resolver/","title":"\u4f9d\u8d56\u89e3\u6790","text":""},{"location":"api/resolver/#symphra_modules.resolver","title":"<code>resolver</code>","text":"<p>\u4f9d\u8d56\u89e3\u6790\u5668.</p>"},{"location":"api/resolver/#symphra_modules.resolver-classes","title":"Classes","text":""},{"location":"api/resolver/#symphra_modules.resolver.DependencyGraph","title":"<code>DependencyGraph</code>","text":"<p>\u4f9d\u8d56\u5173\u7cfb\u56fe.</p> Source code in <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>class DependencyGraph:\n    \"\"\"\u4f9d\u8d56\u5173\u7cfb\u56fe.\"\"\"\n\n    def __init__(self) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u4f9d\u8d56\u56fe.\"\"\"\n        self._graph: dict[str, set[str]] = defaultdict(set)  # \u6a21\u5757 -&gt; \u4f9d\u8d56\u7684\u6a21\u5757\u96c6\u5408\n        self._reverse_graph: dict[str, set[str]] = defaultdict(set)  # \u6a21\u5757 -&gt; \u4f9d\u8d56\u5b83\u7684\u6a21\u5757\u96c6\u5408\n        self._modules: dict[str, ModuleMetadata] = {}\n\n    def add_module(self, metadata: ModuleMetadata) -&gt; None:\n        \"\"\"\u6dfb\u52a0\u6a21\u5757\u5230\u4f9d\u8d56\u56fe.\n\n        Args:\n            metadata: \u6a21\u5757\u5143\u6570\u636e\n        \"\"\"\n        name = metadata.name\n        self._modules[name] = metadata\n\n        # \u521d\u59cb\u5316\u7a7a\u4f9d\u8d56\u96c6\u5408\uff08\u5373\u4f7f\u6ca1\u6709\u4f9d\u8d56\uff09\n        if name not in self._graph:\n            self._graph[name] = set()\n\n        # \u6dfb\u52a0\u4f9d\u8d56\u5173\u7cfb\n        for dep in metadata.dependencies:\n            self._graph[name].add(dep)\n            self._reverse_graph[dep].add(name)\n\n    def get_dependencies(self, name: str) -&gt; set[str]:\n        \"\"\"\u83b7\u53d6\u6a21\u5757\u7684\u76f4\u63a5\u4f9d\u8d56.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u4f9d\u8d56\u7684\u6a21\u5757\u540d\u79f0\u96c6\u5408\n        \"\"\"\n        return self._graph.get(name, set())\n\n    def get_dependents(self, name: str) -&gt; set[str]:\n        \"\"\"\u83b7\u53d6\u4f9d\u8d56\u8be5\u6a21\u5757\u7684\u6a21\u5757.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u4f9d\u8d56\u8be5\u6a21\u5757\u7684\u6a21\u5757\u540d\u79f0\u96c6\u5408\n        \"\"\"\n        return self._reverse_graph.get(name, set())\n\n    def has_module(self, name: str) -&gt; bool:\n        \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5b58\u5728.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u662f\u5426\u5b58\u5728\n        \"\"\"\n        return name in self._modules\n\n    def get_all_modules(self) -&gt; list[str]:\n        \"\"\"\u83b7\u53d6\u6240\u6709\u6a21\u5757\u540d\u79f0.\n\n        Returns:\n            \u6a21\u5757\u540d\u79f0\u5217\u8868\n        \"\"\"\n        return list(self._modules.keys())\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyGraph-functions","title":"Functions","text":""},{"location":"api/resolver/#symphra_modules.resolver.DependencyGraph.__init__","title":"<code>__init__()</code>","text":"<p>\u521d\u59cb\u5316\u4f9d\u8d56\u56fe.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def __init__(self) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u4f9d\u8d56\u56fe.\"\"\"\n    self._graph: dict[str, set[str]] = defaultdict(set)  # \u6a21\u5757 -&gt; \u4f9d\u8d56\u7684\u6a21\u5757\u96c6\u5408\n    self._reverse_graph: dict[str, set[str]] = defaultdict(set)  # \u6a21\u5757 -&gt; \u4f9d\u8d56\u5b83\u7684\u6a21\u5757\u96c6\u5408\n    self._modules: dict[str, ModuleMetadata] = {}\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyGraph.add_module","title":"<code>add_module(metadata)</code>","text":"<p>\u6dfb\u52a0\u6a21\u5757\u5230\u4f9d\u8d56\u56fe.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>metadata</code> <code>ModuleMetadata</code> <p>\u6a21\u5757\u5143\u6570\u636e</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def add_module(self, metadata: ModuleMetadata) -&gt; None:\n    \"\"\"\u6dfb\u52a0\u6a21\u5757\u5230\u4f9d\u8d56\u56fe.\n\n    Args:\n        metadata: \u6a21\u5757\u5143\u6570\u636e\n    \"\"\"\n    name = metadata.name\n    self._modules[name] = metadata\n\n    # \u521d\u59cb\u5316\u7a7a\u4f9d\u8d56\u96c6\u5408\uff08\u5373\u4f7f\u6ca1\u6709\u4f9d\u8d56\uff09\n    if name not in self._graph:\n        self._graph[name] = set()\n\n    # \u6dfb\u52a0\u4f9d\u8d56\u5173\u7cfb\n    for dep in metadata.dependencies:\n        self._graph[name].add(dep)\n        self._reverse_graph[dep].add(name)\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyGraph.get_all_modules","title":"<code>get_all_modules()</code>","text":"<p>\u83b7\u53d6\u6240\u6709\u6a21\u5757\u540d\u79f0.</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u6a21\u5757\u540d\u79f0\u5217\u8868</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def get_all_modules(self) -&gt; list[str]:\n    \"\"\"\u83b7\u53d6\u6240\u6709\u6a21\u5757\u540d\u79f0.\n\n    Returns:\n        \u6a21\u5757\u540d\u79f0\u5217\u8868\n    \"\"\"\n    return list(self._modules.keys())\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyGraph.get_dependencies","title":"<code>get_dependencies(name)</code>","text":"<p>\u83b7\u53d6\u6a21\u5757\u7684\u76f4\u63a5\u4f9d\u8d56.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>set[str]</code> <p>\u4f9d\u8d56\u7684\u6a21\u5757\u540d\u79f0\u96c6\u5408</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def get_dependencies(self, name: str) -&gt; set[str]:\n    \"\"\"\u83b7\u53d6\u6a21\u5757\u7684\u76f4\u63a5\u4f9d\u8d56.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u4f9d\u8d56\u7684\u6a21\u5757\u540d\u79f0\u96c6\u5408\n    \"\"\"\n    return self._graph.get(name, set())\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyGraph.get_dependents","title":"<code>get_dependents(name)</code>","text":"<p>\u83b7\u53d6\u4f9d\u8d56\u8be5\u6a21\u5757\u7684\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>set[str]</code> <p>\u4f9d\u8d56\u8be5\u6a21\u5757\u7684\u6a21\u5757\u540d\u79f0\u96c6\u5408</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def get_dependents(self, name: str) -&gt; set[str]:\n    \"\"\"\u83b7\u53d6\u4f9d\u8d56\u8be5\u6a21\u5757\u7684\u6a21\u5757.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u4f9d\u8d56\u8be5\u6a21\u5757\u7684\u6a21\u5757\u540d\u79f0\u96c6\u5408\n    \"\"\"\n    return self._reverse_graph.get(name, set())\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyGraph.has_module","title":"<code>has_module(name)</code>","text":"<p>\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5b58\u5728.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>bool</code> <p>\u662f\u5426\u5b58\u5728</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def has_module(self, name: str) -&gt; bool:\n    \"\"\"\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5b58\u5728.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u662f\u5426\u5b58\u5728\n    \"\"\"\n    return name in self._modules\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyResolver","title":"<code>DependencyResolver</code>","text":"<p>\u4f9d\u8d56\u89e3\u6790\u5668 - \u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u89e3\u6790\u6a21\u5757\u52a0\u8f7d\u987a\u5e8f.</p> Source code in <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>class DependencyResolver:\n    \"\"\"\u4f9d\u8d56\u89e3\u6790\u5668 - \u4f7f\u7528\u62d3\u6251\u6392\u5e8f\u89e3\u6790\u6a21\u5757\u52a0\u8f7d\u987a\u5e8f.\"\"\"\n\n    def __init__(self) -&gt; None:\n        \"\"\"\u521d\u59cb\u5316\u89e3\u6790\u5668.\"\"\"\n        self.graph = DependencyGraph()\n\n    def add_module(self, metadata: ModuleMetadata) -&gt; None:\n        \"\"\"\u6dfb\u52a0\u6a21\u5757.\n\n        Args:\n            metadata: \u6a21\u5757\u5143\u6570\u636e\n        \"\"\"\n        self.graph.add_module(metadata)\n\n    def resolve(self) -&gt; list[str]:\n        \"\"\"\u89e3\u6790\u6a21\u5757\u52a0\u8f7d\u987a\u5e8f\uff08\u62d3\u6251\u6392\u5e8f\uff09.\n\n        \u4f7f\u7528 Kahn \u7b97\u6cd5\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u3002\n\n        Returns:\n            \u6309\u4f9d\u8d56\u987a\u5e8f\u6392\u5217\u7684\u6a21\u5757\u540d\u79f0\u5217\u8868\n\n        Raises:\n            ModuleDependencyError: \u5b58\u5728\u5faa\u73af\u4f9d\u8d56\u6216\u7f3a\u5931\u4f9d\u8d56\u65f6\u629b\u51fa\n        \"\"\"\n        # \u68c0\u67e5\u7f3a\u5931\u7684\u4f9d\u8d56\n        self._check_missing_dependencies()\n\n        # \u8ba1\u7b97\u6bcf\u4e2a\u6a21\u5757\u7684\u5165\u5ea6\uff08\u88ab\u4f9d\u8d56\u7684\u6b21\u6570\uff09\n        in_degree: dict[str, int] = defaultdict(int)\n        for module in self.graph.get_all_modules():\n            in_degree[module] = 0\n\n        for module in self.graph.get_all_modules():\n            for _dep in self.graph.get_dependencies(module):\n                in_degree[module] += 1\n\n        # \u627e\u5230\u6240\u6709\u5165\u5ea6\u4e3a 0 \u7684\u6a21\u5757\uff08\u6ca1\u6709\u4f9d\u8d56\u7684\u6a21\u5757\uff09\n        queue: deque[str] = deque()\n        for module in self.graph.get_all_modules():\n            if in_degree[module] == 0:\n                queue.append(module)\n\n        result: list[str] = []\n\n        while queue:\n            # \u53d6\u51fa\u4e00\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u6a21\u5757\n            current = queue.popleft()\n            result.append(current)\n\n            # \u5bf9\u4e8e\u6240\u6709\u4f9d\u8d56\u5f53\u524d\u6a21\u5757\u7684\u6a21\u5757\uff0c\u51cf\u5c11\u5176\u5165\u5ea6\n            for dependent in self.graph.get_dependents(current):\n                in_degree[dependent] -= 1\n                if in_degree[dependent] == 0:\n                    queue.append(dependent)\n\n        # \u5982\u679c\u7ed3\u679c\u6570\u91cf\u4e0d\u7b49\u4e8e\u6a21\u5757\u603b\u6570\uff0c\u8bf4\u660e\u5b58\u5728\u5faa\u73af\u4f9d\u8d56\n        if len(result) != len(self.graph.get_all_modules()):\n            circular = self._detect_circular_dependencies(in_degree)\n            raise ModuleDependencyError(\n                \"\u68c0\u6d4b\u5230\u5faa\u73af\u4f9d\u8d56\",\n                circular_dependencies=circular,\n            )\n\n        return result\n\n    def _check_missing_dependencies(self) -&gt; None:\n        \"\"\"\u68c0\u67e5\u7f3a\u5931\u7684\u4f9d\u8d56.\n\n        Raises:\n            ModuleDependencyError: \u5b58\u5728\u7f3a\u5931\u4f9d\u8d56\u65f6\u629b\u51fa\n        \"\"\"\n        missing_deps: dict[str, list[str]] = {}\n\n        for module in self.graph.get_all_modules():\n            missing: list[str] = []\n            for dep in self.graph.get_dependencies(module):\n                if not self.graph.has_module(dep):\n                    missing.append(dep)\n\n            if missing:\n                missing_deps[module] = missing\n\n        if missing_deps:\n            # \u683c\u5f0f\u5316\u9519\u8bef\u6d88\u606f\n            error_details = []\n            for module, deps in missing_deps.items():\n                error_details.append(f\"{module}: {', '.join(deps)}\")\n\n            raise ModuleDependencyError(\n                f\"\u7f3a\u5931\u4f9d\u8d56: {'; '.join(error_details)}\",\n                missing_dependencies=list(missing_deps.keys()),\n            )\n\n    def _detect_circular_dependencies(self, in_degree: dict[str, int]) -&gt; list[str]:\n        \"\"\"\u68c0\u6d4b\u5faa\u73af\u4f9d\u8d56.\n\n        Args:\n            in_degree: \u6a21\u5757\u5165\u5ea6\u6620\u5c04\n\n        Returns:\n            \u53c2\u4e0e\u5faa\u73af\u4f9d\u8d56\u7684\u6a21\u5757\u5217\u8868\n        \"\"\"\n        circular: list[str] = []\n        for module, degree in in_degree.items():\n            if degree &gt; 0:\n                circular.append(module)\n        return circular\n\n    def get_load_order_for_module(self, name: str) -&gt; list[str]:\n        \"\"\"\u83b7\u53d6\u52a0\u8f7d\u7279\u5b9a\u6a21\u5757\u6240\u9700\u7684\u987a\u5e8f\uff08\u5305\u62ec\u5176\u6240\u6709\u4f9d\u8d56\uff09.\n\n        Args:\n            name: \u6a21\u5757\u540d\u79f0\n\n        Returns:\n            \u6309\u4f9d\u8d56\u987a\u5e8f\u6392\u5217\u7684\u6a21\u5757\u540d\u79f0\u5217\u8868\uff08\u5305\u542b\u8be5\u6a21\u5757\u81ea\u8eab\uff09\n\n        Raises:\n            ModuleDependencyError: \u6a21\u5757\u4e0d\u5b58\u5728\u6216\u4f9d\u8d56\u6709\u95ee\u9898\u65f6\u629b\u51fa\n        \"\"\"\n        if not self.graph.has_module(name):\n            raise ModuleDependencyError(f\"\u6a21\u5757\u4e0d\u5b58\u5728: {name}\", module_name=name)\n\n        # \u4f7f\u7528 DFS \u6536\u96c6\u6240\u6709\u4f9d\u8d56\n        visited: set[str] = set()\n        stack: list[str] = []\n        visiting: set[str] = set()  # \u7528\u4e8e\u68c0\u6d4b\u5faa\u73af\u4f9d\u8d56\n\n        def dfs(module: str) -&gt; None:\n            if module in visited:\n                return\n            if module in visiting:\n                # \u68c0\u6d4b\u5230\u5faa\u73af\u4f9d\u8d56\n                raise ModuleDependencyError(\n                    f\"\u68c0\u6d4b\u5230\u5faa\u73af\u4f9d\u8d56\uff0c\u6d89\u53ca\u6a21\u5757: {module}\",\n                    module_name=module,\n                    circular_dependencies=[module],\n                )\n\n            visiting.add(module)\n\n            # \u5148\u5904\u7406\u4f9d\u8d56\n            for dep in self.graph.get_dependencies(module):\n                if not self.graph.has_module(dep):\n                    raise ModuleDependencyError(\n                        f\"\u7f3a\u5931\u4f9d\u8d56: {module} \u4f9d\u8d56 {dep}\",\n                        module_name=module,\n                        missing_dependencies=[dep],\n                    )\n                dfs(dep)\n\n            visiting.remove(module)\n            visited.add(module)\n            stack.append(module)\n\n        dfs(name)\n        return stack\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyResolver-functions","title":"Functions","text":""},{"location":"api/resolver/#symphra_modules.resolver.DependencyResolver.__init__","title":"<code>__init__()</code>","text":"<p>\u521d\u59cb\u5316\u89e3\u6790\u5668.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def __init__(self) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u89e3\u6790\u5668.\"\"\"\n    self.graph = DependencyGraph()\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyResolver.add_module","title":"<code>add_module(metadata)</code>","text":"<p>\u6dfb\u52a0\u6a21\u5757.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>metadata</code> <code>ModuleMetadata</code> <p>\u6a21\u5757\u5143\u6570\u636e</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def add_module(self, metadata: ModuleMetadata) -&gt; None:\n    \"\"\"\u6dfb\u52a0\u6a21\u5757.\n\n    Args:\n        metadata: \u6a21\u5757\u5143\u6570\u636e\n    \"\"\"\n    self.graph.add_module(metadata)\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyResolver.get_load_order_for_module","title":"<code>get_load_order_for_module(name)</code>","text":"<p>\u83b7\u53d6\u52a0\u8f7d\u7279\u5b9a\u6a21\u5757\u6240\u9700\u7684\u987a\u5e8f\uff08\u5305\u62ec\u5176\u6240\u6709\u4f9d\u8d56\uff09.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>name</code> <code>str</code> <p>\u6a21\u5757\u540d\u79f0</p> \u5fc5\u9700 <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u6309\u4f9d\u8d56\u987a\u5e8f\u6392\u5217\u7684\u6a21\u5757\u540d\u79f0\u5217\u8868\uff08\u5305\u542b\u8be5\u6a21\u5757\u81ea\u8eab\uff09</p> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleDependencyError</code> <p>\u6a21\u5757\u4e0d\u5b58\u5728\u6216\u4f9d\u8d56\u6709\u95ee\u9898\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def get_load_order_for_module(self, name: str) -&gt; list[str]:\n    \"\"\"\u83b7\u53d6\u52a0\u8f7d\u7279\u5b9a\u6a21\u5757\u6240\u9700\u7684\u987a\u5e8f\uff08\u5305\u62ec\u5176\u6240\u6709\u4f9d\u8d56\uff09.\n\n    Args:\n        name: \u6a21\u5757\u540d\u79f0\n\n    Returns:\n        \u6309\u4f9d\u8d56\u987a\u5e8f\u6392\u5217\u7684\u6a21\u5757\u540d\u79f0\u5217\u8868\uff08\u5305\u542b\u8be5\u6a21\u5757\u81ea\u8eab\uff09\n\n    Raises:\n        ModuleDependencyError: \u6a21\u5757\u4e0d\u5b58\u5728\u6216\u4f9d\u8d56\u6709\u95ee\u9898\u65f6\u629b\u51fa\n    \"\"\"\n    if not self.graph.has_module(name):\n        raise ModuleDependencyError(f\"\u6a21\u5757\u4e0d\u5b58\u5728: {name}\", module_name=name)\n\n    # \u4f7f\u7528 DFS \u6536\u96c6\u6240\u6709\u4f9d\u8d56\n    visited: set[str] = set()\n    stack: list[str] = []\n    visiting: set[str] = set()  # \u7528\u4e8e\u68c0\u6d4b\u5faa\u73af\u4f9d\u8d56\n\n    def dfs(module: str) -&gt; None:\n        if module in visited:\n            return\n        if module in visiting:\n            # \u68c0\u6d4b\u5230\u5faa\u73af\u4f9d\u8d56\n            raise ModuleDependencyError(\n                f\"\u68c0\u6d4b\u5230\u5faa\u73af\u4f9d\u8d56\uff0c\u6d89\u53ca\u6a21\u5757: {module}\",\n                module_name=module,\n                circular_dependencies=[module],\n            )\n\n        visiting.add(module)\n\n        # \u5148\u5904\u7406\u4f9d\u8d56\n        for dep in self.graph.get_dependencies(module):\n            if not self.graph.has_module(dep):\n                raise ModuleDependencyError(\n                    f\"\u7f3a\u5931\u4f9d\u8d56: {module} \u4f9d\u8d56 {dep}\",\n                    module_name=module,\n                    missing_dependencies=[dep],\n                )\n            dfs(dep)\n\n        visiting.remove(module)\n        visited.add(module)\n        stack.append(module)\n\n    dfs(name)\n    return stack\n</code></pre>"},{"location":"api/resolver/#symphra_modules.resolver.DependencyResolver.resolve","title":"<code>resolve()</code>","text":"<p>\u89e3\u6790\u6a21\u5757\u52a0\u8f7d\u987a\u5e8f\uff08\u62d3\u6251\u6392\u5e8f\uff09.</p> <p>\u4f7f\u7528 Kahn \u7b97\u6cd5\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u3002</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>list[str]</code> <p>\u6309\u4f9d\u8d56\u987a\u5e8f\u6392\u5217\u7684\u6a21\u5757\u540d\u79f0\u5217\u8868</p> <p>\u5f15\u53d1\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>ModuleDependencyError</code> <p>\u5b58\u5728\u5faa\u73af\u4f9d\u8d56\u6216\u7f3a\u5931\u4f9d\u8d56\u65f6\u629b\u51fa</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/resolver/dependency.py</code> <pre><code>def resolve(self) -&gt; list[str]:\n    \"\"\"\u89e3\u6790\u6a21\u5757\u52a0\u8f7d\u987a\u5e8f\uff08\u62d3\u6251\u6392\u5e8f\uff09.\n\n    \u4f7f\u7528 Kahn \u7b97\u6cd5\u8fdb\u884c\u62d3\u6251\u6392\u5e8f\u3002\n\n    Returns:\n        \u6309\u4f9d\u8d56\u987a\u5e8f\u6392\u5217\u7684\u6a21\u5757\u540d\u79f0\u5217\u8868\n\n    Raises:\n        ModuleDependencyError: \u5b58\u5728\u5faa\u73af\u4f9d\u8d56\u6216\u7f3a\u5931\u4f9d\u8d56\u65f6\u629b\u51fa\n    \"\"\"\n    # \u68c0\u67e5\u7f3a\u5931\u7684\u4f9d\u8d56\n    self._check_missing_dependencies()\n\n    # \u8ba1\u7b97\u6bcf\u4e2a\u6a21\u5757\u7684\u5165\u5ea6\uff08\u88ab\u4f9d\u8d56\u7684\u6b21\u6570\uff09\n    in_degree: dict[str, int] = defaultdict(int)\n    for module in self.graph.get_all_modules():\n        in_degree[module] = 0\n\n    for module in self.graph.get_all_modules():\n        for _dep in self.graph.get_dependencies(module):\n            in_degree[module] += 1\n\n    # \u627e\u5230\u6240\u6709\u5165\u5ea6\u4e3a 0 \u7684\u6a21\u5757\uff08\u6ca1\u6709\u4f9d\u8d56\u7684\u6a21\u5757\uff09\n    queue: deque[str] = deque()\n    for module in self.graph.get_all_modules():\n        if in_degree[module] == 0:\n            queue.append(module)\n\n    result: list[str] = []\n\n    while queue:\n        # \u53d6\u51fa\u4e00\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u6a21\u5757\n        current = queue.popleft()\n        result.append(current)\n\n        # \u5bf9\u4e8e\u6240\u6709\u4f9d\u8d56\u5f53\u524d\u6a21\u5757\u7684\u6a21\u5757\uff0c\u51cf\u5c11\u5176\u5165\u5ea6\n        for dependent in self.graph.get_dependents(current):\n            in_degree[dependent] -= 1\n            if in_degree[dependent] == 0:\n                queue.append(dependent)\n\n    # \u5982\u679c\u7ed3\u679c\u6570\u91cf\u4e0d\u7b49\u4e8e\u6a21\u5757\u603b\u6570\uff0c\u8bf4\u660e\u5b58\u5728\u5faa\u73af\u4f9d\u8d56\n    if len(result) != len(self.graph.get_all_modules()):\n        circular = self._detect_circular_dependencies(in_degree)\n        raise ModuleDependencyError(\n            \"\u68c0\u6d4b\u5230\u5faa\u73af\u4f9d\u8d56\",\n            circular_dependencies=circular,\n        )\n\n    return result\n</code></pre>"},{"location":"api/utils/","title":"\u5de5\u5177\u51fd\u6570","text":""},{"location":"api/utils/#symphra_modules.utils","title":"<code>utils</code>","text":"<p>\u5de5\u5177\u6a21\u5757.</p>"},{"location":"api/utils/#symphra_modules.utils-classes","title":"Classes","text":""},{"location":"api/utils/#symphra_modules.utils.Logger","title":"<code>Logger</code>","text":"<p>               Bases: <code>Protocol</code></p> <p>\u65e5\u5fd7\u8bb0\u5f55\u5668\u534f\u8bae.</p> <p>\u5b9a\u4e49\u4e86\u65e5\u5fd7\u63a5\u53e3,\u7528\u6237\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5df1\u7684\u65e5\u5fd7\u5b9e\u73b0\u3002</p> Source code in <code>src/symphra_modules/utils/logger.py</code> <pre><code>class Logger(Protocol):\n    \"\"\"\u65e5\u5fd7\u8bb0\u5f55\u5668\u534f\u8bae.\n\n    \u5b9a\u4e49\u4e86\u65e5\u5fd7\u63a5\u53e3,\u7528\u6237\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5df1\u7684\u65e5\u5fd7\u5b9e\u73b0\u3002\n    \"\"\"\n\n    def debug(self, message: str, **kwargs: Any) -&gt; None:\n        \"\"\"\u8bb0\u5f55 DEBUG \u7ea7\u522b\u65e5\u5fd7.\"\"\"\n        ...\n\n    def info(self, message: str, **kwargs: Any) -&gt; None:\n        \"\"\"\u8bb0\u5f55 INFO \u7ea7\u522b\u65e5\u5fd7.\"\"\"\n        ...\n\n    def warning(self, message: str, **kwargs: Any) -&gt; None:\n        \"\"\"\u8bb0\u5f55 WARNING \u7ea7\u522b\u65e5\u5fd7.\"\"\"\n        ...\n\n    def error(self, message: str, **kwargs: Any) -&gt; None:\n        \"\"\"\u8bb0\u5f55 ERROR \u7ea7\u522b\u65e5\u5fd7.\"\"\"\n        ...\n\n    def exception(self, message: str, **kwargs: Any) -&gt; None:\n        \"\"\"\u8bb0\u5f55\u5f02\u5e38\u4fe1\u606f.\"\"\"\n        ...\n</code></pre>"},{"location":"api/utils/#symphra_modules.utils.Logger-functions","title":"Functions","text":""},{"location":"api/utils/#symphra_modules.utils.Logger.debug","title":"<code>debug(message, **kwargs)</code>","text":"<p>\u8bb0\u5f55 DEBUG \u7ea7\u522b\u65e5\u5fd7.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/utils/logger.py</code> <pre><code>def debug(self, message: str, **kwargs: Any) -&gt; None:\n    \"\"\"\u8bb0\u5f55 DEBUG \u7ea7\u522b\u65e5\u5fd7.\"\"\"\n    ...\n</code></pre>"},{"location":"api/utils/#symphra_modules.utils.Logger.error","title":"<code>error(message, **kwargs)</code>","text":"<p>\u8bb0\u5f55 ERROR \u7ea7\u522b\u65e5\u5fd7.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/utils/logger.py</code> <pre><code>def error(self, message: str, **kwargs: Any) -&gt; None:\n    \"\"\"\u8bb0\u5f55 ERROR \u7ea7\u522b\u65e5\u5fd7.\"\"\"\n    ...\n</code></pre>"},{"location":"api/utils/#symphra_modules.utils.Logger.exception","title":"<code>exception(message, **kwargs)</code>","text":"<p>\u8bb0\u5f55\u5f02\u5e38\u4fe1\u606f.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/utils/logger.py</code> <pre><code>def exception(self, message: str, **kwargs: Any) -&gt; None:\n    \"\"\"\u8bb0\u5f55\u5f02\u5e38\u4fe1\u606f.\"\"\"\n    ...\n</code></pre>"},{"location":"api/utils/#symphra_modules.utils.Logger.info","title":"<code>info(message, **kwargs)</code>","text":"<p>\u8bb0\u5f55 INFO \u7ea7\u522b\u65e5\u5fd7.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/utils/logger.py</code> <pre><code>def info(self, message: str, **kwargs: Any) -&gt; None:\n    \"\"\"\u8bb0\u5f55 INFO \u7ea7\u522b\u65e5\u5fd7.\"\"\"\n    ...\n</code></pre>"},{"location":"api/utils/#symphra_modules.utils.Logger.warning","title":"<code>warning(message, **kwargs)</code>","text":"<p>\u8bb0\u5f55 WARNING \u7ea7\u522b\u65e5\u5fd7.</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/utils/logger.py</code> <pre><code>def warning(self, message: str, **kwargs: Any) -&gt; None:\n    \"\"\"\u8bb0\u5f55 WARNING \u7ea7\u522b\u65e5\u5fd7.\"\"\"\n    ...\n</code></pre>"},{"location":"api/utils/#symphra_modules.utils-functions","title":"Functions","text":""},{"location":"api/utils/#symphra_modules.utils.get_logger","title":"<code>get_logger()</code>","text":"<p>\u83b7\u53d6\u5168\u5c40\u65e5\u5fd7\u5b9e\u4f8b.</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>Logger</code> <p>\u5f53\u524d\u914d\u7f6e\u7684\u65e5\u5fd7\u8bb0\u5f55\u5668</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/utils/logger.py</code> <pre><code>def get_logger() -&gt; Logger:\n    \"\"\"\u83b7\u53d6\u5168\u5c40\u65e5\u5fd7\u5b9e\u4f8b.\n\n    Returns:\n        \u5f53\u524d\u914d\u7f6e\u7684\u65e5\u5fd7\u8bb0\u5f55\u5668\n    \"\"\"\n    return _global_logger\n</code></pre>"},{"location":"api/utils/#symphra_modules.utils.now","title":"<code>now()</code>","text":"<p>\u83b7\u53d6\u5f53\u524d UTC \u65f6\u95f4.</p> <p>\u8fd4\u56de\uff1a</p> \u7c7b\u578b \u63cf\u8ff0 <code>datetime</code> <p>\u5f53\u524d UTC \u65f6\u95f4\u6233</p> \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/utils/__init__.py</code> <pre><code>def now() -&gt; datetime:\n    \"\"\"\u83b7\u53d6\u5f53\u524d UTC \u65f6\u95f4.\n\n    Returns:\n        \u5f53\u524d UTC \u65f6\u95f4\u6233\n    \"\"\"\n    return datetime.now(UTC)\n</code></pre>"},{"location":"api/utils/#symphra_modules.utils.set_logger","title":"<code>set_logger(logger)</code>","text":"<p>\u8bbe\u7f6e\u5168\u5c40\u65e5\u5fd7\u5b9e\u4f8b.</p> <p>\u53c2\u6570\uff1a</p> \u540d\u79f0 \u7c7b\u578b \u63cf\u8ff0 \u9ed8\u8ba4 <code>logger</code> <code>Logger</code> <p>\u65b0\u7684\u65e5\u5fd7\u8bb0\u5f55\u5668\u5b9e\u4f8b</p> \u5fc5\u9700 \u6e90\u4ee3\u7801\u4f4d\u4e8e\uff1a <code>src/symphra_modules/utils/logger.py</code> <pre><code>def set_logger(logger: Logger) -&gt; None:\n    \"\"\"\u8bbe\u7f6e\u5168\u5c40\u65e5\u5fd7\u5b9e\u4f8b.\n\n    Args:\n        logger: \u65b0\u7684\u65e5\u5fd7\u8bb0\u5f55\u5668\u5b9e\u4f8b\n    \"\"\"\n    global _global_logger\n    _global_logger = logger\n</code></pre>"},{"location":"guide/async/","title":"\u5f02\u6b65\u652f\u6301","text":""},{"location":"guide/async/#_2","title":"\u5f02\u6b65\u6a21\u5757","text":"<p>Symphra Modules \u539f\u751f\u652f\u6301\u5f02\u6b65\u6a21\u5757\uff0c\u65e0\u9700\u989d\u5916\u914d\u7f6e\uff1a</p> <pre><code>import asyncio\nfrom symphra_modules.abc import BaseModule, ModuleMetadata\n\nclass AsyncModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(name=\"async_example\")\n\n    async def start(self) -&gt; None:\n        \"\"\"\u5f02\u6b65\u542f\u52a8\"\"\"\n        await asyncio.sleep(1)\n        print(\"\u5f02\u6b65\u6a21\u5757\u5df2\u542f\u52a8\")\n\n    async def stop(self) -&gt; None:\n        \"\"\"\u5f02\u6b65\u505c\u6b62\"\"\"\n        await asyncio.sleep(0.5)\n        print(\"\u5f02\u6b65\u6a21\u5757\u5df2\u505c\u6b62\")\n</code></pre>"},{"location":"guide/async/#_3","title":"\u81ea\u52a8\u68c0\u6d4b","text":"<p>\u6846\u67b6\u81ea\u52a8\u68c0\u6d4b\u6a21\u5757\u662f\u540c\u6b65\u8fd8\u662f\u5f02\u6b65\uff1a</p> <pre><code># \u540c\u6b65\u6a21\u5757\nclass SyncModule(BaseModule):\n    def start(self) -&gt; None:\n        print(\"\u540c\u6b65\u542f\u52a8\")\n\n# \u5f02\u6b65\u6a21\u5757\nclass AsyncModule(BaseModule):\n    async def start(self) -&gt; None:\n        await asyncio.sleep(1)\n        print(\"\u5f02\u6b65\u542f\u52a8\")\n\n# \u6df7\u5408\u4f7f\u7528\nmanager = ModuleManager()\nawait manager.load_from_directory(\"./modules\")  # \u81ea\u52a8\u5904\u7406\u540c\u6b65\u548c\u5f02\u6b65\u6a21\u5757\n</code></pre>"},{"location":"guide/async/#_4","title":"\u5f02\u6b65\u751f\u547d\u5468\u671f","text":"<p>\u6240\u6709\u751f\u547d\u5468\u671f\u94a9\u5b50\u90fd\u652f\u6301\u5f02\u6b65\uff1a</p> <pre><code>class DatabaseModule(BaseModule):\n    async def bootstrap(self) -&gt; None:\n        \"\"\"\u5f02\u6b65\u521d\u59cb\u5316\"\"\"\n        self.pool = await create_connection_pool()\n\n    async def install(self, config: dict | None = None) -&gt; None:\n        \"\"\"\u5f02\u6b65\u5b89\u88c5\"\"\"\n        await super().install(config)\n        await self.pool.execute(\"CREATE TABLE IF NOT EXISTS users...\")\n\n    async def start(self) -&gt; None:\n        \"\"\"\u5f02\u6b65\u542f\u52a8\"\"\"\n        self.server = await start_database_server()\n\n    async def stop(self) -&gt; None:\n        \"\"\"\u5f02\u6b65\u505c\u6b62\"\"\"\n        await self.server.shutdown()\n\n    async def uninstall(self) -&gt; None:\n        \"\"\"\u5f02\u6b65\u5378\u8f7d\"\"\"\n        await self.pool.close()\n</code></pre>"},{"location":"guide/async/#_5","title":"\u5f02\u6b65\u4f9d\u8d56\u89e3\u6790","text":"<p>\u4f9d\u8d56\u89e3\u6790\u652f\u6301\u5f02\u6b65\u6a21\u5757\uff1a</p> <pre><code># \u5f02\u6b65\u4f9d\u8d56\u68c0\u67e5\nawait manager.validate_async_dependencies()\n\n# \u5f02\u6b65\u4f9d\u8d56\u89e3\u6790\nawait manager.resolve_async_dependencies()\n</code></pre>"},{"location":"guide/async/#_6","title":"\u5f02\u6b65\u4e8b\u4ef6\u5904\u7406","text":"<p>\u4e8b\u4ef6\u7cfb\u7edf\u5b8c\u5168\u652f\u6301\u5f02\u6b65\u5904\u7406\uff1a</p> <pre><code>from symphra_modules.events import EventBus\n\nbus = EventBus()\n\n@bus.subscribe(\"async.event\")\nasync def async_handler(data: dict):\n    \"\"\"\u5f02\u6b65\u4e8b\u4ef6\u5904\u7406\u5668\"\"\"\n    await process_data_async(data)\n    await bus.publish(\"processing.complete\", data_id=data[\"id\"])\n</code></pre>"},{"location":"guide/async/#_7","title":"\u5e76\u53d1\u63a7\u5236","text":""},{"location":"guide/async/#_8","title":"\u5f02\u6b65\u6279\u91cf\u64cd\u4f5c","text":"<pre><code># \u5e76\u53d1\u542f\u52a8\u6240\u6709\u6a21\u5757\nawait manager.start_all_concurrent()\n\n# \u9650\u5236\u5e76\u53d1\u6570\u91cf\nawait manager.start_all_concurrent(max_concurrency=5)\n</code></pre>"},{"location":"guide/async/#_9","title":"\u5f02\u6b65\u8fed\u4ee3","text":"<pre><code># \u5f02\u6b65\u904d\u5386\u6a21\u5757\nasync for module in manager.get_modules_async():\n    await module.perform_async_operation()\n</code></pre>"},{"location":"guide/async/#_10","title":"\u5f02\u6b65\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668","text":"<p>\u6a21\u5757\u53ef\u4ee5\u5b9e\u73b0\u5f02\u6b65\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff1a</p> <pre><code>class ResourceModule(BaseModule):\n    async def __aenter__(self):\n        \"\"\"\u5f02\u6b65\u8fdb\u5165\u4e0a\u4e0b\u6587\"\"\"\n        self.resource = await acquire_resource()\n        return self.resource\n\n    async def __aexit__(self, exc_type, exc_val, exc_tb):\n        \"\"\"\u5f02\u6b65\u9000\u51fa\u4e0a\u4e0b\u6587\"\"\"\n        await release_resource(self.resource)\n</code></pre>"},{"location":"guide/async/#_11","title":"\u5f02\u6b65\u5de5\u5177\u51fd\u6570","text":"<p>\u6846\u67b6\u63d0\u4f9b\u5f02\u6b65\u5de5\u5177\u51fd\u6570\uff1a</p> <pre><code>from symphra_modules.utils import async_timeout, async_retry\n\nclass NetworkModule(BaseModule):\n    @async_timeout(30)  # 30\u79d2\u8d85\u65f6\n    async def fetch_data(self, url: str) -&gt; dict:\n        \"\"\"\u5e26\u8d85\u65f6\u7684\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\"\"\"\n        async with aiohttp.ClientSession() as session:\n            async with session.get(url) as response:\n                return await response.json()\n\n    @async_retry(max_attempts=3, delay=1.0)  # \u91cd\u8bd53\u6b21\uff0c\u5ef6\u8fdf1\u79d2\n    async def unreliable_operation(self) -&gt; None:\n        \"\"\"\u5e26\u91cd\u8bd5\u7684\u4e0d\u53ef\u9760\u64cd\u4f5c\"\"\"\n        if random.random() &lt; 0.7:  # 70%\u5931\u8d25\u7387\n            raise ConnectionError(\"Network error\")\n        print(\"Operation succeeded\")\n</code></pre>"},{"location":"guide/async/#_12","title":"\u5f02\u6b65\u6d4b\u8bd5","text":"<p>\u7f16\u5199\u5f02\u6b65\u6a21\u5757\u7684\u6d4b\u8bd5\uff1a</p> <pre><code>import pytest\nfrom symphra_modules.testing import AsyncModuleTestCase\n\nclass TestAsyncModule(AsyncModuleTestCase):\n    async def test_async_start(self):\n        \"\"\"\u6d4b\u8bd5\u5f02\u6b65\u542f\u52a8\"\"\"\n        module = AsyncModule()\n        await module.start()\n        self.assertTrue(module.is_started)\n\n    async def test_async_event_handling(self):\n        \"\"\"\u6d4b\u8bd5\u5f02\u6b65\u4e8b\u4ef6\u5904\u7406\"\"\"\n        bus = EventBus()\n        events_processed = []\n\n        @bus.subscribe(\"test.async\")\n        async def handler(data):\n            await asyncio.sleep(0.1)  # \u6a21\u62df\u5f02\u6b65\u5904\u7406\n            events_processed.append(data)\n\n        await bus.publish(\"test.async\", value=42)\n\n        # \u7b49\u5f85\u4e8b\u4ef6\u5904\u7406\u5b8c\u6210\n        await asyncio.sleep(0.2)\n        self.assertEqual(len(events_processed), 1)\n        self.assertEqual(events_processed[0][\"value\"], 42)\n</code></pre>"},{"location":"guide/async/#_13","title":"\u6027\u80fd\u8003\u8651","text":""},{"location":"guide/async/#vs","title":"\u5f02\u6b65 vs \u540c\u6b65","text":"<pre><code># \u540c\u6b65\u5904\u7406\uff08\u963b\u585e\uff09\ndef sync_process_modules(modules):\n    for module in modules:\n        module.process()  # \u6bcf\u4e2a\u6a21\u5757\u4f9d\u6b21\u5904\u7406\n\n# \u5f02\u6b65\u5904\u7406\uff08\u5e76\u53d1\uff09\nasync def async_process_modules(modules):\n    tasks = [module.process_async() for module in modules]\n    await asyncio.gather(*tasks)  # \u5e76\u53d1\u5904\u7406\u6240\u6709\u6a21\u5757\n</code></pre>"},{"location":"guide/async/#_14","title":"\u8d44\u6e90\u7ba1\u7406","text":"<pre><code>class ConnectionPoolModule(BaseModule):\n    async def start(self) -&gt; None:\n        # \u521b\u5efa\u8fde\u63a5\u6c60\n        self.pool = await create_pool(min_size=5, max_size=20)\n\n    async def stop(self) -&gt; None:\n        # \u4f18\u96c5\u5173\u95ed\u8fde\u63a5\u6c60\n        await self.pool.close()\n\n    async def get_connection(self):\n        \"\"\"\u83b7\u53d6\u8fde\u63a5\uff08\u5e26\u8d85\u65f6\uff09\"\"\"\n        return await asyncio.wait_for(\n            self.pool.acquire(),\n            timeout=10.0\n        )\n</code></pre>"},{"location":"guide/async/#_15","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"guide/async/#_16","title":"\u907f\u514d\u963b\u585e\u64cd\u4f5c","text":"<pre><code># \u4e0d\u63a8\u8350\uff1a\u5728\u5f02\u6b65\u65b9\u6cd5\u4e2d\u8fdb\u884c\u963b\u585e\u64cd\u4f5c\nasync def bad_example(self):\n    # \u963b\u585e\u6587\u4ef6I/O\n    with open(\"file.txt\", \"r\") as f:\n        data = f.read()  # \u963b\u585e\uff01\n    return data\n\n# \u63a8\u8350\uff1a\u4f7f\u7528\u5f02\u6b65I/O\nasync def good_example(self):\n    # \u5f02\u6b65\u6587\u4ef6I/O\n    async with aiofiles.open(\"file.txt\", \"r\") as f:\n        data = await f.read()\n    return data\n</code></pre>"},{"location":"guide/async/#_17","title":"\u9519\u8bef\u5904\u7406","text":"<pre><code>async def robust_async_operation(self):\n    try:\n        await asyncio.wait_for(\n            self.unreliable_async_call(),\n            timeout=30.0\n        )\n    except asyncio.TimeoutError:\n        logger.error(\"Operation timed out\")\n        await self.fallback_operation()\n    except Exception as e:\n        logger.error(f\"Operation failed: {e}\")\n        await self.cleanup()\n        raise\n</code></pre>"},{"location":"guide/async/#_18","title":"\u5e76\u53d1\u9650\u5236","text":"<pre><code>from asyncio import Semaphore\n\nclass RateLimitedModule(BaseModule):\n    def __init__(self):\n        self.semaphore = Semaphore(10)  # \u6700\u591a10\u4e2a\u5e76\u53d1\u8bf7\u6c42\n\n    async def rate_limited_request(self, url: str):\n        async with self.semaphore:\n            async with aiohttp.ClientSession() as session:\n                async with session.get(url) as response:\n                    return await response.text()\n</code></pre>"},{"location":"guide/concepts/","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"guide/concepts/#module","title":"\u6a21\u5757(Module)","text":"<p>\u6a21\u5757\u662f Symphra Modules \u7684\u6838\u5fc3\u6982\u5ff5,\u4ee3\u8868\u4e00\u4e2a\u53ef\u72ec\u7acb\u52a0\u8f7d\u3001\u914d\u7f6e\u548c\u8fd0\u884c\u7684\u529f\u80fd\u5355\u5143\u3002</p>"},{"location":"guide/concepts/#_2","title":"\u6a21\u5757\u7279\u5f81","text":"<ul> <li>\u72ec\u7acb\u6027: \u6bcf\u4e2a\u6a21\u5757\u662f\u72ec\u7acb\u7684\u529f\u80fd\u5355\u5143</li> <li>\u53ef\u914d\u7f6e: \u652f\u6301\u8fd0\u884c\u65f6\u914d\u7f6e</li> <li>\u751f\u547d\u5468\u671f: \u5b8c\u6574\u7684\u542f\u52a8/\u505c\u6b62\u6d41\u7a0b</li> <li>\u4f9d\u8d56\u7ba1\u7406: \u58f0\u660e\u5f0f\u4f9d\u8d56\u5173\u7cfb</li> </ul>"},{"location":"guide/concepts/#_3","title":"\u6a21\u5757\u72b6\u6001","text":"<p>\u6a21\u5757\u5728\u5176\u751f\u547d\u5468\u671f\u4e2d\u4f1a\u7ecf\u5386\u591a\u4e2a\u72b6\u6001:</p> <ul> <li><code>NOT_INSTALLED</code>: \u672a\u5b89\u88c5</li> <li><code>LOADED</code>: \u5df2\u52a0\u8f7d(\u6ce8\u518c\u5230\u6ce8\u518c\u8868)</li> <li><code>INSTALLED</code>: \u5df2\u5b89\u88c5(\u914d\u7f6e\u5b8c\u6210)</li> <li><code>STARTED</code>: \u5df2\u542f\u52a8(\u6b63\u5728\u8fd0\u884c)</li> <li><code>STOPPED</code>: \u5df2\u505c\u6b62</li> <li><code>ERROR</code>: \u9519\u8bef\u72b6\u6001</li> </ul>"},{"location":"guide/concepts/#_4","title":"\u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"guide/concepts/#modulemanager","title":"ModuleManager","text":"<p>\u6a21\u5757\u7ba1\u7406\u5668\u662f\u7edf\u4e00\u7684\u5165\u53e3\u70b9,\u63d0\u4f9b:</p> <ul> <li>\u6a21\u5757\u52a0\u8f7d\u548c\u53d1\u73b0</li> <li>\u751f\u547d\u5468\u671f\u7ba1\u7406</li> <li>\u6279\u91cf\u64cd\u4f5c</li> </ul>"},{"location":"guide/concepts/#moduleregistry","title":"ModuleRegistry","text":"<p>\u6a21\u5757\u6ce8\u518c\u8868\u7ef4\u62a4\u6240\u6709\u5df2\u52a0\u8f7d\u6a21\u5757\u7684\u72b6\u6001\u548c\u5b9e\u4f8b\u3002</p>"},{"location":"guide/concepts/#dependencyresolver","title":"DependencyResolver","text":"<p>\u4f9d\u8d56\u89e3\u6790\u5668\u8d1f\u8d23\u8ba1\u7b97\u6a21\u5757\u7684\u6b63\u786e\u52a0\u8f7d\u987a\u5e8f\u3002</p>"},{"location":"guide/concepts/#_5","title":"\u4e0b\u4e00\u6b65","text":"<ul> <li>\u6a21\u5757\u5b9a\u4e49</li> <li>\u751f\u547d\u5468\u671f</li> </ul>"},{"location":"guide/dependencies/","title":"\u4f9d\u8d56\u7ba1\u7406","text":""},{"location":"guide/dependencies/#_2","title":"\u4f9d\u8d56\u58f0\u660e","text":"<p>\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u5143\u6570\u636e\u58f0\u660e\u4f9d\u8d56\u5173\u7cfb\uff1a</p> <pre><code>from symphra_modules.abc import BaseModule, ModuleMetadata\n\nclass DatabaseModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"database\",\n            dependencies=[],  # \u65e0\u4f9d\u8d56\n        )\n\nclass UserModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"user\",\n            dependencies=[\"database\"],  # \u4f9d\u8d56 database \u6a21\u5757\n        )\n</code></pre>"},{"location":"guide/dependencies/#_3","title":"\u4f9d\u8d56\u7c7b\u578b","text":""},{"location":"guide/dependencies/#_4","title":"\u5fc5\u9700\u4f9d\u8d56","text":"<p>\u6a21\u5757\u6b63\u5e38\u5de5\u4f5c\u6240\u9700\u7684\u4f9d\u8d56\uff1a</p> <pre><code>ModuleMetadata(\n    name=\"web_server\",\n    dependencies=[\"database\", \"cache\", \"logger\"]\n)\n</code></pre>"},{"location":"guide/dependencies/#_5","title":"\u53ef\u9009\u4f9d\u8d56","text":"<p>\u6a21\u5757\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u7684\u4f9d\u8d56\uff1a</p> <pre><code>ModuleMetadata(\n    name=\"metrics\",\n    optional_dependencies=[\"prometheus\", \"grafana\"]\n)\n</code></pre>"},{"location":"guide/dependencies/#_6","title":"\u4f9d\u8d56\u89e3\u6790","text":""},{"location":"guide/dependencies/#_7","title":"\u62d3\u6251\u6392\u5e8f","text":"<p>Symphra Modules \u4f7f\u7528 Kahn \u7b97\u6cd5\u8fdb\u884c\u4f9d\u8d56\u89e3\u6790\uff1a</p> <pre><code>from symphra_modules.resolver import DependencyResolver\n\nresolver = DependencyResolver()\nmodules = [db_module, user_module, web_module]\n\n# \u89e3\u6790\u4f9d\u8d56\u987a\u5e8f\nordered_modules = resolver.resolve_dependencies(modules)\n# \u8fd4\u56de: [db_module, user_module, web_module]\n</code></pre>"},{"location":"guide/dependencies/#_8","title":"\u5faa\u73af\u68c0\u6d4b","text":"<p>\u81ea\u52a8\u68c0\u6d4b\u5e76\u62a5\u544a\u5faa\u73af\u4f9d\u8d56\uff1a</p> <pre><code># \u5faa\u73af\u4f9d\u8d56\u793a\u4f8b\uff08\u4f1a\u629b\u51fa\u5f02\u5e38\uff09\n# A \u4f9d\u8d56 B, B \u4f9d\u8d56 A\n\ntry:\n    ordered_modules = resolver.resolve_dependencies(modules)\nexcept CircularDependencyError as e:\n    print(f\"\u5faa\u73af\u4f9d\u8d56\u68c0\u6d4b: {e}\")\n</code></pre>"},{"location":"guide/dependencies/#_9","title":"\u4f9d\u8d56\u6ce8\u5165","text":"<p>\u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u7ba1\u7406\u5668\u8bbf\u95ee\u5176\u4ed6\u6a21\u5757\uff1a</p> <pre><code>class UserModule(BaseModule):\n    def start(self) -&gt; None:\n        # \u83b7\u53d6\u4f9d\u8d56\u7684\u6570\u636e\u5e93\u6a21\u5757\n        db_module = self.manager.get_module(\"database\")\n        self.db_connection = db_module.get_connection()\n</code></pre>"},{"location":"guide/dependencies/#_10","title":"\u5ef6\u8fdf\u4f9d\u8d56","text":"<p>\u652f\u6301\u8fd0\u884c\u65f6\u52a8\u6001\u6dfb\u52a0\u4f9d\u8d56\uff1a</p> <pre><code># \u8fd0\u884c\u65f6\u6dfb\u52a0\u4f9d\u8d56\nawait manager.add_dependency(\"user_module\", \"cache_module\")\n\n# \u91cd\u65b0\u89e3\u6790\u4f9d\u8d56\nawait manager.resolve_all_dependencies()\n</code></pre>"},{"location":"guide/dependencies/#_11","title":"\u7248\u672c\u7ea6\u675f","text":"<p>\u652f\u6301\u7248\u672c\u8303\u56f4\u7684\u4f9d\u8d56\u58f0\u660e\uff1a</p> <pre><code>ModuleMetadata(\n    name=\"api_client\",\n    dependencies=[\"database&gt;=1.0.0,&lt;2.0.0\"]\n)\n</code></pre>"},{"location":"guide/dependencies/#_12","title":"\u4f9d\u8d56\u9a8c\u8bc1","text":"<p>\u542f\u52a8\u524d\u9a8c\u8bc1\u6240\u6709\u4f9d\u8d56\u662f\u5426\u6ee1\u8db3\uff1a</p> <pre><code># \u9a8c\u8bc1\u4f9d\u8d56\nmissing_deps = manager.validate_dependencies()\nif missing_deps:\n    print(f\"\u7f3a\u5c11\u4f9d\u8d56: {missing_deps}\")\n    # \u5904\u7406\u7f3a\u5931\u4f9d\u8d56\n</code></pre>"},{"location":"guide/dependencies/#_13","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"guide/dependencies/#_14","title":"\u4f9d\u8d56\u5206\u5c42","text":"<ul> <li>\u57fa\u7840\u5c42: \u6570\u636e\u5e93\u3001\u7f13\u5b58\u3001\u914d\u7f6e</li> <li>\u670d\u52a1\u5c42: \u4e1a\u52a1\u903b\u8f91\u6a21\u5757</li> <li>\u63a5\u53e3\u5c42: API\u3001Web\u754c\u9762</li> </ul>"},{"location":"guide/dependencies/#_15","title":"\u907f\u514d\u5faa\u73af\u4f9d\u8d56","text":"<ul> <li>\u4f7f\u7528\u4e8b\u4ef6\u7cfb\u7edf\u66ff\u4ee3\u76f4\u63a5\u4f9d\u8d56</li> <li>\u63d0\u53d6\u516c\u5171\u63a5\u53e3\u5230\u72ec\u7acb\u6a21\u5757</li> <li>\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u6a21\u5f0f</li> </ul>"},{"location":"guide/dependencies/#_16","title":"\u53ef\u9009\u4f9d\u8d56\u5904\u7406","text":"<pre><code>class MonitoringModule(BaseModule):\n    def start(self) -&gt; None:\n        # \u68c0\u67e5\u53ef\u9009\u4f9d\u8d56\n        if self.manager.has_module(\"prometheus\"):\n            prometheus = self.manager.get_module(\"prometheus\")\n            # \u4f7f\u7528 prometheus \u6a21\u5757\n        else:\n            # \u4f7f\u7528\u5907\u7528\u65b9\u6848\n            self.logger.warning(\"Prometheus not available, using basic monitoring\")\n</code></pre>"},{"location":"guide/dependencies/#_17","title":"\u4f9d\u8d56\u6d4b\u8bd5","text":"<pre><code># \u5355\u5143\u6d4b\u8bd5\u4e2d\u7684\u4f9d\u8d56\u6a21\u62df\nimport pytest\nfrom unittest.mock import Mock\n\ndef test_user_module():\n    mock_db = Mock()\n    manager = Mock()\n    manager.get_module.return_value = mock_db\n\n    user_module = UserModule()\n    user_module.manager = manager\n    user_module.start()\n\n    # \u9a8c\u8bc1\u4f9d\u8d56\u8c03\u7528\n    manager.get_module.assert_called_with(\"database\")\n</code></pre>"},{"location":"guide/events/","title":"\u4e8b\u4ef6\u7cfb\u7edf","text":""},{"location":"guide/events/#_2","title":"\u4e8b\u4ef6\u603b\u7ebf","text":"<p>Symphra Modules \u63d0\u4f9b\u7075\u6d3b\u7684\u4e8b\u4ef6\u9a71\u52a8\u67b6\u6784\uff1a</p> <pre><code>from symphra_modules.events import EventBus\n\n# \u521b\u5efa\u4e8b\u4ef6\u603b\u7ebf\nbus = EventBus()\n\n# \u53d1\u5e03\u4e8b\u4ef6\nawait bus.publish(\"user.created\", user_id=123, email=\"user@example.com\")\n\n# \u8ba2\u9605\u4e8b\u4ef6\n@bus.subscribe(\"user.created\")\nasync def handle_user_created(user_id: int, email: str):\n    print(f\"New user: {user_id} - {email}\")\n</code></pre>"},{"location":"guide/events/#_3","title":"\u4e8b\u4ef6\u7c7b\u578b","text":""},{"location":"guide/events/#_4","title":"\u6a21\u5757\u751f\u547d\u5468\u671f\u4e8b\u4ef6","text":"<pre><code># \u6a21\u5757\u72b6\u6001\u53d8\u5316\u4e8b\u4ef6\nbus.subscribe(\"module.state_changed\", handler)\n\n# \u6a21\u5757\u52a0\u8f7d\u5b8c\u6210\u4e8b\u4ef6\nbus.subscribe(\"module.loaded\", handler)\n\n# \u6a21\u5757\u542f\u52a8\u4e8b\u4ef6\nbus.subscribe(\"module.started\", handler)\n</code></pre>"},{"location":"guide/events/#_5","title":"\u81ea\u5b9a\u4e49\u4e1a\u52a1\u4e8b\u4ef6","text":"<pre><code># \u4e1a\u52a1\u903b\u8f91\u4e8b\u4ef6\nbus.publish(\"order.placed\", order_id=\"123\", amount=99.99)\nbus.publish(\"payment.processed\", order_id=\"123\", status=\"success\")\n</code></pre>"},{"location":"guide/events/#_6","title":"\u8ba2\u9605\u6a21\u5f0f","text":""},{"location":"guide/events/#_7","title":"\u76f4\u63a5\u8ba2\u9605","text":"<pre><code># \u8ba2\u9605\u7279\u5b9a\u4e8b\u4ef6\nbus.subscribe(\"user.login\", login_handler)\n\n# \u8ba2\u9605\u6240\u6709\u4e8b\u4ef6\nbus.subscribe(\"*\", all_events_handler)\n</code></pre>"},{"location":"guide/events/#_8","title":"\u6a21\u5f0f\u5339\u914d","text":"<pre><code># \u8ba2\u9605 user.* \u6a21\u5f0f\nbus.subscribe(\"user.*\", user_events_handler)\n\n# \u8ba2\u9605 *.error \u6a21\u5f0f\nbus.subscribe(\"*.error\", error_handler)\n</code></pre>"},{"location":"guide/events/#_9","title":"\u6761\u4ef6\u8ba2\u9605","text":"<pre><code># \u57fa\u4e8e\u6761\u4ef6\u8ba2\u9605\nbus.subscribe(\n    \"order.*\",\n    order_handler,\n    condition=lambda event: event.data.get(\"amount\", 0) &gt; 100\n)\n</code></pre>"},{"location":"guide/events/#_10","title":"\u5f02\u6b65\u5904\u7406","text":"<p>\u6240\u6709\u4e8b\u4ef6\u5904\u7406\u90fd\u652f\u6301\u5f02\u6b65\uff1a</p> <pre><code>@bus.subscribe(\"data.process\")\nasync def async_processor(data: dict):\n    # \u5f02\u6b65\u5904\u7406\u6570\u636e\n    await process_data_async(data)\n    # \u53d1\u9001\u5b8c\u6210\u4e8b\u4ef6\n    await bus.publish(\"data.processed\", data_id=data[\"id\"])\n</code></pre>"},{"location":"guide/events/#_11","title":"\u9519\u8bef\u9694\u79bb","text":"<p>\u5355\u4e2a\u5904\u7406\u5668\u5f02\u5e38\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u5904\u7406\u5668\uff1a</p> <pre><code>@bus.subscribe(\"user.action\")\ndef handler1(event):\n    # \u6b63\u5e38\u5904\u7406\n    pass\n\n@bus.subscribe(\"user.action\")\ndef handler2(event):\n    # \u629b\u51fa\u5f02\u5e38\n    raise ValueError(\"Something went wrong\")\n\n# handler1 \u4ecd\u7136\u4f1a\u6267\u884c\n</code></pre>"},{"location":"guide/events/#_12","title":"\u4e8b\u4ef6\u6570\u636e","text":""},{"location":"guide/events/#_13","title":"\u7ed3\u6784\u5316\u4e8b\u4ef6","text":"<pre><code>from symphra_modules.events import Event\n\n# \u521b\u5efa\u7ed3\u6784\u5316\u4e8b\u4ef6\nevent = Event(\n    name=\"user.registered\",\n    data={\n        \"user_id\": 123,\n        \"email\": \"user@example.com\",\n        \"timestamp\": datetime.now()\n    },\n    metadata={\n        \"source\": \"auth_module\",\n        \"version\": \"1.0\"\n    }\n)\n\nawait bus.publish_event(event)\n</code></pre>"},{"location":"guide/events/#_14","title":"\u4e8b\u4ef6\u8fc7\u6ee4","text":"<pre><code># \u8fc7\u6ee4\u4e8b\u4ef6\nfiltered_events = bus.filter_events(\n    event_name=\"user.*\",\n    condition=lambda e: e.data.get(\"active\", True)\n)\n</code></pre>"},{"location":"guide/events/#_15","title":"\u4e8b\u4ef6\u5386\u53f2","text":"<p>\u8bb0\u5f55\u548c\u67e5\u8be2\u4e8b\u4ef6\u5386\u53f2\uff1a</p> <pre><code># \u83b7\u53d6\u6700\u8fd1\u4e8b\u4ef6\nrecent_events = bus.get_recent_events(limit=10)\n\n# \u67e5\u8be2\u7279\u5b9a\u4e8b\u4ef6\nuser_events = bus.query_events(\n    name=\"user.*\",\n    start_time=datetime.now() - timedelta(hours=1)\n)\n</code></pre>"},{"location":"guide/events/#_16","title":"\u6027\u80fd\u4f18\u5316","text":""},{"location":"guide/events/#_17","title":"\u4e8b\u4ef6\u7f13\u51b2","text":"<pre><code># \u542f\u7528\u4e8b\u4ef6\u7f13\u51b2\nbus.enable_buffering(buffer_size=100, flush_interval=1.0)\n\n# \u624b\u52a8\u5237\u65b0\u7f13\u51b2\nawait bus.flush_buffer()\n</code></pre>"},{"location":"guide/events/#_18","title":"\u5f02\u6b65\u53d1\u5e03","text":"<pre><code># \u5f02\u6b65\u53d1\u5e03\uff0c\u4e0d\u7b49\u5f85\u5904\u7406\u5b8c\u6210\nawait bus.publish_async(\"log.entry\", message=\"System started\")\n\n# \u6279\u91cf\u53d1\u5e03\nawait bus.publish_batch([\n    {\"name\": \"metric.cpu\", \"value\": 85},\n    {\"name\": \"metric.memory\", \"value\": 72},\n])\n</code></pre>"},{"location":"guide/events/#_19","title":"\u6700\u4f73\u5b9e\u8df5","text":""},{"location":"guide/events/#_20","title":"\u4e8b\u4ef6\u547d\u540d\u7ea6\u5b9a","text":"<ul> <li>\u4f7f\u7528\u70b9\u53f7\u5206\u9694\u547d\u540d\u7a7a\u95f4: <code>module.action</code></li> <li>\u4f7f\u7528\u8fc7\u53bb\u65f6\u8868\u793a\u5df2\u5b8c\u6210\u4e8b\u4ef6: <code>user.created</code>, <code>order.cancelled</code></li> <li>\u4f7f\u7528\u901a\u914d\u7b26\u8fdb\u884c\u5206\u7c7b: <code>auth.*</code>, <code>payment.*</code></li> </ul>"},{"location":"guide/events/#_21","title":"\u9519\u8bef\u5904\u7406","text":"<pre><code>@bus.subscribe(\"system.error\")\nasync def error_handler(event):\n    try:\n        # \u5904\u7406\u9519\u8bef\n        await handle_error(event.data)\n    except Exception as e:\n        # \u8bb0\u5f55\u5904\u7406\u5931\u8d25\uff0c\u4f46\u4e0d\u629b\u51fa\u5f02\u5e38\n        logger.error(f\"Failed to handle error event: {e}\")\n</code></pre>"},{"location":"guide/events/#_22","title":"\u4e8b\u4ef6\u94fe","text":"<p>\u907f\u514d\u4e8b\u4ef6\u5904\u7406\u4e2d\u53d1\u5e03\u65b0\u4e8b\u4ef6\u5bfc\u81f4\u7684\u65e0\u9650\u5faa\u73af\uff1a</p> <pre><code># \u4e0d\u63a8\u8350\uff1a\u53ef\u80fd\u5bfc\u81f4\u5faa\u73af\n@bus.subscribe(\"user.updated\")\ndef update_handler(event):\n    # \u8fd9\u53ef\u80fd\u89e6\u53d1\u53e6\u4e00\u4e2a user.updated \u4e8b\u4ef6\n    user.save()\n    bus.publish(\"user.updated\", user=user)\n\n# \u63a8\u8350\uff1a\u4f7f\u7528\u4e0d\u540c\u4e8b\u4ef6\u540d\n@bus.subscribe(\"user.update_requested\")\ndef update_handler(event):\n    user.save()\n    bus.publish(\"user.updated\", user=user)\n</code></pre>"},{"location":"guide/events/#_23","title":"\u6d4b\u8bd5\u4e8b\u4ef6","text":"<pre><code>import pytest\n\ndef test_event_publishing():\n    bus = EventBus()\n\n    events_received = []\n\n    @bus.subscribe(\"test.event\")\n    def handler(data):\n        events_received.append(data)\n\n    # \u53d1\u5e03\u6d4b\u8bd5\u4e8b\u4ef6\n    bus.publish(\"test.event\", message=\"test\")\n\n    # \u9a8c\u8bc1\u4e8b\u4ef6\u88ab\u5904\u7406\n    assert len(events_received) == 1\n    assert events_received[0][\"message\"] == \"test\"\n</code></pre>"},{"location":"guide/lifecycle/","title":"\u751f\u547d\u5468\u671f\u7ba1\u7406","text":""},{"location":"guide/lifecycle/#_2","title":"\u6a21\u5757\u72b6\u6001\u673a","text":"<p>Symphra Modules \u4f7f\u7528\u72b6\u6001\u673a\u6765\u7ba1\u7406\u6a21\u5757\u7684\u751f\u547d\u5468\u671f\uff0c\u786e\u4fdd\u6a21\u5757\u6309\u7167\u6b63\u786e\u7684\u987a\u5e8f\u542f\u52a8\u548c\u505c\u6b62\u3002</p>"},{"location":"guide/lifecycle/#_3","title":"\u72b6\u6001\u8f6c\u6362\u56fe","text":"<pre><code>NOT_INSTALLED \u2192 LOADED \u2192 INSTALLED \u2192 STARTED\n     \u2191            \u2191         \u2191          \u2191\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                    \u2193\n                 STOPPED\n                    \u2193\n                  ERROR\n</code></pre>"},{"location":"guide/lifecycle/#_4","title":"\u72b6\u6001\u8bf4\u660e","text":"<ul> <li>NOT_INSTALLED: \u6a21\u5757\u672a\u5b89\u88c5\uff0c\u8fd9\u662f\u521d\u59cb\u72b6\u6001</li> <li>LOADED: \u6a21\u5757\u5df2\u52a0\u8f7d\u5230\u6ce8\u518c\u8868\u4e2d</li> <li>INSTALLED: \u6a21\u5757\u5df2\u5b89\u88c5\u5e76\u914d\u7f6e\u5b8c\u6210</li> <li>STARTED: \u6a21\u5757\u6b63\u5728\u8fd0\u884c</li> <li>STOPPED: \u6a21\u5757\u5df2\u505c\u6b62</li> <li>ERROR: \u6a21\u5757\u5904\u4e8e\u9519\u8bef\u72b6\u6001</li> </ul>"},{"location":"guide/lifecycle/#_5","title":"\u751f\u547d\u5468\u671f\u94a9\u5b50","text":""},{"location":"guide/lifecycle/#bootstrap","title":"bootstrap()","text":"<p>\u5728\u6a21\u5757\u6ce8\u518c\u5230\u6ce8\u518c\u8868\u65f6\u8c03\u7528\uff0c\u7528\u4e8e\u521d\u59cb\u5316\u6a21\u5757\u7684\u57fa\u672c\u4fe1\u606f\u3002</p> <pre><code>def bootstrap(self) -&gt; None:\n    \"\"\"\u521d\u59cb\u5316\u6a21\u5757\u57fa\u672c\u4fe1\u606f\"\"\"\n    self.logger = logging.getLogger(self.metadata.name)\n</code></pre>"},{"location":"guide/lifecycle/#installconfig","title":"install(config)","text":"<p>\u5b89\u88c5\u6a21\u5757\u65f6\u8c03\u7528\uff0c\u63a5\u6536\u914d\u7f6e\u53c2\u6570\u5e76\u8fdb\u884c\u5fc5\u8981\u7684\u8bbe\u7f6e\u3002</p> <pre><code>def install(self, config: dict | None = None) -&gt; None:\n    \"\"\"\u5b89\u88c5\u6a21\u5757\"\"\"\n    super().install(config)\n    # \u9a8c\u8bc1\u914d\u7f6e\n    if not self.validate_config(config):\n        raise ValueError(\"Invalid configuration\")\n    # \u4fdd\u5b58\u914d\u7f6e\n    self._config = config or {}\n</code></pre>"},{"location":"guide/lifecycle/#start","title":"start()","text":"<p>\u542f\u52a8\u6a21\u5757\u65f6\u8c03\u7528\uff0c\u5f00\u59cb\u6a21\u5757\u7684\u529f\u80fd\u3002</p> <pre><code>def start(self) -&gt; None:\n    \"\"\"\u542f\u52a8\u6a21\u5757\"\"\"\n    # \u542f\u52a8\u670d\u52a1\n    self.server.start()\n    self.logger.info(\"Module started\")\n</code></pre>"},{"location":"guide/lifecycle/#stop","title":"stop()","text":"<p>\u505c\u6b62\u6a21\u5757\u65f6\u8c03\u7528\uff0c\u6e05\u7406\u8d44\u6e90\u3002</p> <pre><code>def stop(self) -&gt; None:\n    \"\"\"\u505c\u6b62\u6a21\u5757\"\"\"\n    # \u505c\u6b62\u670d\u52a1\n    self.server.stop()\n    self.logger.info(\"Module stopped\")\n</code></pre>"},{"location":"guide/lifecycle/#uninstall","title":"uninstall()","text":"<p>\u5378\u8f7d\u6a21\u5757\u65f6\u8c03\u7528\uff0c\u6e05\u7406\u6240\u6709\u8d44\u6e90\u3002</p> <pre><code>def uninstall(self) -&gt; None:\n    \"\"\"\u5378\u8f7d\u6a21\u5757\"\"\"\n    # \u6e05\u7406\u8d44\u6e90\n    self.server = None\n    self._config = None\n</code></pre>"},{"location":"guide/lifecycle/#reload","title":"reload()","text":"<p>\u70ed\u91cd\u8f7d\u6a21\u5757\u65f6\u8c03\u7528\uff0c\u7528\u4e8e\u8fd0\u884c\u65f6\u66f4\u65b0\u6a21\u5757\u3002</p> <pre><code>def reload(self) -&gt; None:\n    \"\"\"\u91cd\u8f7d\u6a21\u5757\"\"\"\n    self.stop()\n    # \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6216\u4ee3\u7801\n    self.start()\n</code></pre>"},{"location":"guide/lifecycle/#_6","title":"\u6279\u91cf\u64cd\u4f5c","text":"<p>ModuleManager \u652f\u6301\u6279\u91cf\u751f\u547d\u5468\u671f\u64cd\u4f5c\uff1a</p> <pre><code># \u6279\u91cf\u542f\u52a8\u6240\u6709\u6a21\u5757\nawait manager.start_all()\n\n# \u6279\u91cf\u505c\u6b62\u6240\u6709\u6a21\u5757\nawait manager.stop_all()\n\n# \u6309\u4f9d\u8d56\u987a\u5e8f\u542f\u52a8\nawait manager.start_modules([\"module_a\", \"module_b\"])\n</code></pre>"},{"location":"guide/lifecycle/#_7","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u751f\u547d\u5468\u671f\u64cd\u4f5c\u4e2d\u7684\u5f02\u5e38\u4f1a\u88ab\u6355\u83b7\u5e76\u8f6c\u6362\u4e3a ERROR \u72b6\u6001\uff1a</p> <pre><code>try:\n    await module.start()\nexcept Exception as e:\n    module.state = ModuleState.ERROR\n    module.error = e\n    raise ModuleLifecycleError(f\"Failed to start module {module.metadata.name}\") from e\n</code></pre>"},{"location":"guide/lifecycle/#_8","title":"\u5f02\u6b65\u652f\u6301","text":"<p>\u6240\u6709\u751f\u547d\u5468\u671f\u94a9\u5b50\u90fd\u652f\u6301\u5f02\u6b65\u5b9e\u73b0\uff1a</p> <pre><code>async def start(self) -&gt; None:\n    \"\"\"\u5f02\u6b65\u542f\u52a8\u6a21\u5757\"\"\"\n    await self.database.connect()\n    await self.cache.warmup()\n</code></pre>"},{"location":"guide/loading/","title":"\u52a0\u8f7d\u6a21\u5757","text":""},{"location":"guide/loading/#_2","title":"\u52a0\u8f7d\u65b9\u5f0f","text":"<p>Symphra Modules \u652f\u6301\u591a\u79cd\u6a21\u5757\u52a0\u8f7d\u65b9\u5f0f\uff0c\u6ee1\u8db3\u4e0d\u540c\u7684\u4f7f\u7528\u573a\u666f\u3002</p>"},{"location":"guide/loading/#_3","title":"\u76ee\u5f55\u52a0\u8f7d","text":"<p>\u4ece\u6307\u5b9a\u76ee\u5f55\u81ea\u52a8\u53d1\u73b0\u548c\u52a0\u8f7d\u6a21\u5757\uff1a</p> <pre><code>from symphra_modules import ModuleManager\n\n# \u521b\u5efa\u7ba1\u7406\u5668\nmanager = ModuleManager()\n\n# \u4ece\u76ee\u5f55\u52a0\u8f7d\u6a21\u5757\nawait manager.load_from_directory(\"./modules\")\n</code></pre> <p>\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\uff1a</p> <pre><code>modules/\n\u251c\u2500\u2500 user_module.py\n\u251c\u2500\u2500 payment/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 payment_module.py\n\u2514\u2500\u2500 logging_module.py\n</code></pre>"},{"location":"guide/loading/#_4","title":"\u5305\u52a0\u8f7d","text":"<p>\u4ece Python \u5305\u5bfc\u5165\u6a21\u5757\uff1a</p> <pre><code># \u4ece\u5305\u52a0\u8f7d\nawait manager.load_from_package(\"my_app.modules\")\n</code></pre>"},{"location":"guide/loading/#_5","title":"\u81ea\u52a8\u52a0\u8f7d","text":"<p>\u667a\u80fd\u68c0\u6d4b\u6e90\u7c7b\u578b\u5e76\u81ea\u52a8\u9009\u62e9\u52a0\u8f7d\u65b9\u5f0f\uff1a</p> <pre><code># \u81ea\u52a8\u68c0\u6d4b\u5e76\u52a0\u8f7d\nawait manager.auto_load(\"./modules\")  # \u76ee\u5f55\nawait manager.auto_load(\"my_app.modules\")  # \u5305\n</code></pre>"},{"location":"guide/loading/#_6","title":"\u6a21\u5757\u53d1\u73b0","text":""},{"location":"guide/loading/#_7","title":"\u6587\u4ef6\u6a21\u5f0f\u5339\u914d","text":"<p>\u652f\u6301 glob \u6a21\u5f0f\u5339\u914d\u6a21\u5757\u6587\u4ef6\uff1a</p> <pre><code># \u52a0\u8f7d\u6240\u6709 .py \u6587\u4ef6\nawait manager.load_from_directory(\"./modules\", pattern=\"*.py\")\n\n# \u52a0\u8f7d\u7279\u5b9a\u547d\u540d\u6a21\u5f0f\nawait manager.load_from_directory(\"./modules\", pattern=\"*_module.py\")\n</code></pre>"},{"location":"guide/loading/#_8","title":"\u9012\u5f52\u52a0\u8f7d","text":"<p>\u81ea\u52a8\u9012\u5f52\u52a0\u8f7d\u5b50\u76ee\u5f55\u4e2d\u7684\u6a21\u5757\uff1a</p> <pre><code># \u9012\u5f52\u52a0\u8f7d\u6240\u6709\u5b50\u76ee\u5f55\nawait manager.load_from_directory(\"./modules\", recursive=True)\n</code></pre>"},{"location":"guide/loading/#_9","title":"\u52a0\u8f7d\u9009\u9879","text":""},{"location":"guide/loading/#_10","title":"\u5f02\u6b65\u52a0\u8f7d","text":"<p>\u652f\u6301\u5f02\u6b65\u6a21\u5757\u52a0\u8f7d\uff1a</p> <pre><code># \u5f02\u6b65\u52a0\u8f7d\nawait manager.load_from_directory(\"./modules\", async_load=True)\n</code></pre>"},{"location":"guide/loading/#_11","title":"\u6761\u4ef6\u52a0\u8f7d","text":"<p>\u57fa\u4e8e\u6761\u4ef6\u52a0\u8f7d\u6a21\u5757\uff1a</p> <pre><code># \u4ec5\u5728\u751f\u4ea7\u73af\u5883\u52a0\u8f7d\nawait manager.load_from_directory(\n    \"./modules\",\n    condition=lambda: os.getenv(\"ENV\") == \"production\"\n)\n</code></pre>"},{"location":"guide/loading/#_12","title":"\u914d\u7f6e\u4f20\u9012","text":"<p>\u5728\u52a0\u8f7d\u65f6\u4f20\u9012\u914d\u7f6e\uff1a</p> <pre><code>config = {\"database_url\": \"sqlite:///app.db\"}\nawait manager.load_from_directory(\"./modules\", config=config)\n</code></pre>"},{"location":"guide/loading/#_13","title":"\u52a0\u8f7d\u5668\u63a5\u53e3","text":"<p>\u81ea\u5b9a\u4e49\u52a0\u8f7d\u5668\u9700\u8981\u5b9e\u73b0 <code>BaseLoader</code> \u63a5\u53e3\uff1a</p> <pre><code>from symphra_modules.loader.abc import BaseLoader\n\nclass CustomLoader(BaseLoader):\n    async def load_modules(self, source: str, **options) -&gt; list[BaseModule]:\n        # \u81ea\u5b9a\u4e49\u52a0\u8f7d\u903b\u8f91\n        modules = []\n        # ... \u52a0\u8f7d\u6a21\u5757 ...\n        return modules\n\n# \u6ce8\u518c\u81ea\u5b9a\u4e49\u52a0\u8f7d\u5668\nmanager.register_loader(\"custom\", CustomLoader())\n\n# \u4f7f\u7528\u81ea\u5b9a\u4e49\u52a0\u8f7d\u5668\nawait manager.load_with_loader(\"custom\", \"my_source\")\n</code></pre>"},{"location":"guide/loading/#_14","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u7684\u9519\u8bef\u4f1a\u88ab\u9002\u5f53\u5904\u7406\uff1a</p> <ul> <li>\u6a21\u5757\u5bfc\u5165\u9519\u8bef: \u8bb0\u5f55\u9519\u8bef\u4f46\u4e0d\u4e2d\u65ad\u52a0\u8f7d\u8fc7\u7a0b</li> <li>\u914d\u7f6e\u9a8c\u8bc1\u5931\u8d25: \u629b\u51fa\u5f02\u5e38\u963b\u6b62\u6a21\u5757\u52a0\u8f7d</li> <li>\u5faa\u73af\u4f9d\u8d56: \u5728\u4f9d\u8d56\u89e3\u6790\u9636\u6bb5\u68c0\u6d4b\u5e76\u62a5\u544a</li> </ul> <pre><code>try:\n    await manager.load_from_directory(\"./modules\")\nexcept ModuleLoadError as e:\n    print(f\"Failed to load modules: {e}\")\n</code></pre>"},{"location":"guide/loading/#_15","title":"\u7f13\u5b58\u4f18\u5316","text":"<p>\u6a21\u5757\u52a0\u8f7d\u7ed3\u679c\u4f1a\u88ab\u7f13\u5b58\u4ee5\u63d0\u9ad8\u6027\u80fd\uff1a</p> <ul> <li>\u6a21\u5757\u5b9e\u4f8b\u7f13\u5b58: \u907f\u514d\u91cd\u590d\u521b\u5efa\u5b9e\u4f8b</li> <li>\u5143\u6570\u636e\u7f13\u5b58: \u7f13\u5b58\u6a21\u5757\u5143\u6570\u636e\u4fe1\u606f</li> <li>\u4f9d\u8d56\u56fe\u7f13\u5b58: \u7f13\u5b58\u89e3\u6790\u540e\u7684\u4f9d\u8d56\u5173\u7cfb</li> </ul> <pre><code># \u542f\u7528\u7f13\u5b58\nmanager.enable_cache()\n\n# \u6e05\u9664\u7f13\u5b58\nmanager.clear_cache()\n</code></pre>"},{"location":"guide/module-definition/","title":"\u6a21\u5757\u5b9a\u4e49","text":""},{"location":"guide/module-definition/#_2","title":"\u57fa\u672c\u6a21\u5757","text":"<p>\u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757\u9700\u8981\u7ee7\u627f <code>BaseModule</code> \u5e76\u5b9e\u73b0\u5fc5\u8981\u7684\u65b9\u6cd5:</p> <pre><code>from symphra_modules.abc import BaseModule, ModuleMetadata\n\nclass MyModule(BaseModule):\n    @property\n    def metadata(self) -&gt; ModuleMetadata:\n        return ModuleMetadata(\n            name=\"my_module\",\n            version=\"1.0.0\",\n            description=\"\u6211\u7684\u6a21\u5757\"\n        )\n\n    def start(self) -&gt; None:\n        print(\"\u6a21\u5757\u542f\u52a8\")\n\n    def stop(self) -&gt; None:\n        print(\"\u6a21\u5757\u505c\u6b62\")\n</code></pre>"},{"location":"guide/module-definition/#_3","title":"\u5143\u6570\u636e\u914d\u7f6e","text":"<p>ModuleMetadata \u652f\u6301\u4ee5\u4e0b\u5b57\u6bb5:</p> <ul> <li><code>name</code>: \u6a21\u5757\u540d\u79f0(\u5fc5\u9700)</li> <li><code>version</code>: \u7248\u672c\u53f7</li> <li><code>description</code>: \u63cf\u8ff0</li> <li><code>dependencies</code>: \u4f9d\u8d56\u6a21\u5757\u5217\u8868</li> <li><code>optional_dependencies</code>: \u53ef\u9009\u4f9d\u8d56</li> <li><code>config_schema</code>: \u914d\u7f6eschema</li> </ul>"},{"location":"guide/module-definition/#_4","title":"\u751f\u547d\u5468\u671f\u94a9\u5b50","text":"<ul> <li><code>bootstrap()</code>: \u6a21\u5757\u6ce8\u518c\u65f6\u8c03\u7528</li> <li><code>install(config)</code>: \u5b89\u88c5\u65f6\u8c03\u7528</li> <li><code>start()</code>: \u542f\u52a8\u65f6\u8c03\u7528</li> <li><code>stop()</code>: \u505c\u6b62\u65f6\u8c03\u7528</li> <li><code>uninstall()</code>: \u5378\u8f7d\u65f6\u8c03\u7528</li> <li><code>reload()</code>: \u91cd\u8f7d\u65f6\u8c03\u7528</li> </ul>"},{"location":"guide/module-definition/#_5","title":"\u914d\u7f6e\u7ba1\u7406","text":"<pre><code>def install(self, config: dict | None = None) -&gt; None:\n    super().install(config)\n    # \u4f7f\u7528\u914d\u7f6e\n    db_host = self.get_config().get(\"db_host\", \"localhost\")\n</code></pre>"},{"location":"guide/module-definition/#_6","title":"\u914d\u7f6e\u9a8c\u8bc1","text":"<pre><code>def validate_config(self, config: dict | None = None) -&gt; bool:\n    if not config:\n        return False\n    return \"required_field\" in config\n</code></pre>"}]}